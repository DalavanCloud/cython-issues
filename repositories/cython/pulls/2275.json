{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/2275/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2275/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/2275"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/2275"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2275/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2275"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/553822b5f48f647a2b7a790af47a7d2db96090f4"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 680,
            "forks_count": 680,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": null,
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 523,
            "open_issues_count": 523,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2018-06-08T19:51:12Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 50849,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 3175,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2018-06-08T21:26:35Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 3175,
            "watchers_count": 3175
        },
        "sha": "6ffbfc5efb29184090e646200ffe4202ec735e6b",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "I replaced all the text in the language basics of the reference guide by links to the corresponding places in the user guide. No information has been lost except for those two lines:\r\n\r\n```\r\nFunction Pointers\r\n=================\r\n \t \r\nFunctions declared in a ``struct`` are automatically converted to function pointers.\t\r\nsee **using exceptions with function pointers**\t\r\n```\r\n\r\nSince **using exceptions with function pointers** doesn't exist yet, I suppose we don't loose much.",
    "closed_at": "2018-05-17T19:14:58Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2275#discussion_r189064156"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2275"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/189064156"
                }
            },
            "author_association": "MEMBER",
            "body": "Can't this reference also be moved?",
            "commit_id": "553822b5f48f647a2b7a790af47a7d2db96090f4",
            "created_at": "2018-05-17T18:50:01Z",
            "diff_hunk": "@@ -1,854 +1,178 @@\n .. highlight:: cython\n \n \n-\n-.. _language_basics:\n-\n ***************\n Language Basics\n ***************\n \n+.. note::\n+\n+    The sections in this page were moved to the :ref:`language-basics` in the userguide.\n+\n =================\n Cython File Types\n =================\n \n-.. NOW IN USER GUIDE, DO NOT TOUCH\n-\n-There are three file types in Cython:\n-\n-* Implementation files carry a ``.pyx`` suffix\n-* Definition files carry a ``.pxd`` suffix\n-* Include files which carry a ``.pxi`` suffix\n-\n+This section was moved to :ref:`cython_file_types`.\n \n Implementation File\n ===================\n \n What can it contain?\n --------------------\n \n-* Basically anything Cythonic, but see below.\n-\n What can't it contain?\n ----------------------\n \n-* There are some restrictions when it comes to **extension types**, if the extension type is\n-  already defined else where... **more on this later**\n-\n-\n Definition File\n ===============\n \n What can it contain?\n --------------------\n \n-* Any kind of C type declaration.\n-* ``extern`` C function or variable declarations.\n-* Declarations for module implementations.\n-* The definition parts of **extension types**.\n-* All declarations of functions, etc., for an **external library**\n-\n What can't it contain?\n ----------------------\n \n-* Any non-extern C variable declaration.\n-* Implementations of C or Python functions.\n-* Python class definitions\n-* Python executable statements.\n-* Any declaration that is defined as **public** to make it accessible to other Cython modules.\n-\n- * This is not necessary, as it is automatic.\n- * a **public** declaration is only needed to make it accessible to **external C code**.\n-\n What else?\n ----------\n \n cimport\n ```````\n \n-* Use the **cimport** statement, as you would Python's import statement, to access these files\n-  from other definition or implementation files.\n-* **cimport** does not need to be called in ``.pyx`` file for ``.pxd`` file that has the\n-  same name, as they are already in the same namespace.\n-* For cimport to find the stated definition file, the path to the file must be appended to the\n-  ``-I`` option of the **Cython compile command**.\n-\n compilation order\n `````````````````\n \n-* When a ``.pyx`` file is to be compiled, Cython first checks to see if a corresponding ``.pxd`` file\n-  exits and processes it first.\n-\n-\n-\n Include File\n ============\n \n What can it contain?\n --------------------\n \n-* Any Cythonic code really, because the entire file is textually embedded at the location\n-  you prescribe.\n-\n How do I use it?\n ----------------\n \n-* Include the ``.pxi`` file with an ``include`` statement like: ``include \"spamstuff.pxi``\n-* The ``include`` statement can appear anywhere in your Cython file and at any indentation level\n-* The code in the ``.pxi`` file needs to be rooted at the \"zero\" indentation level.\n-* The included code can itself contain other ``include`` statements.\n-\n-\n ====================\n Declaring Data Types\n ====================\n \n-\n-As a dynamic language, Python encourages a programming style of considering classes and objects in terms of their methods and attributes, more than where they fit into the class hierarchy.\n-\n-This can make Python a very relaxed and comfortable language for rapid development, but with a price - the 'red tape' of managing data types is dumped onto the interpreter. At run time, the interpreter does a lot of work searching namespaces, fetching attributes and parsing argument and keyword tuples. This run-time ‘late binding’ is a major cause of Python’s relative slowness compared to ‘early binding’ languages such as C++.\n-\n-However with Cython it is possible to gain significant speed-ups through the use of ‘early binding’ programming techniques.\n-\n-.. note:: Typing is not a necessity\n-\n-    Providing static typing to parameters and variables is convenience to speed up your code, but it is not a necessity. Optimize where and when needed.\n-    In fact, typing can *slow down* your code in the case where the\n-    typing does not allow optimizations but where Cython still needs to\n-    check that the type of some object matches the declared type.\n-\n+This section was moved to :ref:`declaring_data_types`.\n \n The cdef Statement\n ==================\n \n-The ``cdef`` statement is used to make C level declarations for:\n-\n-:Variables:\n-\n-::\n-\n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n-\n-:Structs:\n-\n-::\n-\n-    cdef struct Grail:\n-        int age\n-        float volume\n-\n-.. note::\n-\n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n-\n-:Unions:\n-\n-::\n-\n-    cdef union Food:\n-        char *spam\n-        float *eggs\n-\n-\n-:Enums:\n-\n-::\n-\n-    cdef enum CheeseType:\n-        cheddar, edam,\n-        camembert\n-\n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n-\n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n-\n-:Functions:\n-\n-::\n-\n-    cdef int eggs(unsigned long l, float f):\n-        ...\n-\n-:Extension Types:\n-\n-::\n-\n-    cdef class Spam:\n-        ...\n-\n-\n-.. note:: Constants\n-\n-    Constants can be defined by using an anonymous enum::\n-\n-        cdef enum:\n-            tons_of_spam = 3\n-\n+This section was moved to :ref:`c_variable_and_type_definitions`.\n \n Grouping cdef Declarations\n ==========================\n \n-A series of declarations can grouped into a ``cdef`` block::\n-\n-        cdef:\n-            struct Spam:\n-                int tons\n-\n-            int i\n-            float f\n-            Spam *p\n-\n-            void f(Spam *s):\n-            print s.tons, \"Tons of spam\"\n-\n-\n-.. note:: ctypedef statement\n-\n-    The ``ctypedef`` statement is provided for naming types::\n-\n-        ctypedef unsigned long ULong\n-\n-        ctypedef int *IntPtr\n+This section was moved to :ref:`c_variable_and_type_definitions`.\n \n .. _typing_types:",
            "html_url": "https://github.com/cython/cython/pull/2275#discussion_r189064156",
            "id": 189064156,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTA2NDE1Ng==",
            "original_commit_id": "a974e21b4c42e64257ec9c9a871f3607019ac451",
            "original_position": 226,
            "path": "docs/src/reference/language_basics.rst",
            "position": null,
            "pull_request_review_id": 121171186,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2275",
            "updated_at": "2018-05-17T19:10:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/189064156",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2275#discussion_r189065370"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2275"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/189065370"
                }
            },
            "author_association": "NONE",
            "body": "My bad, I forgot this one. Good catch.",
            "commit_id": "553822b5f48f647a2b7a790af47a7d2db96090f4",
            "created_at": "2018-05-17T18:53:56Z",
            "diff_hunk": "@@ -1,854 +1,178 @@\n .. highlight:: cython\n \n \n-\n-.. _language_basics:\n-\n ***************\n Language Basics\n ***************\n \n+.. note::\n+\n+    The sections in this page were moved to the :ref:`language-basics` in the userguide.\n+\n =================\n Cython File Types\n =================\n \n-.. NOW IN USER GUIDE, DO NOT TOUCH\n-\n-There are three file types in Cython:\n-\n-* Implementation files carry a ``.pyx`` suffix\n-* Definition files carry a ``.pxd`` suffix\n-* Include files which carry a ``.pxi`` suffix\n-\n+This section was moved to :ref:`cython_file_types`.\n \n Implementation File\n ===================\n \n What can it contain?\n --------------------\n \n-* Basically anything Cythonic, but see below.\n-\n What can't it contain?\n ----------------------\n \n-* There are some restrictions when it comes to **extension types**, if the extension type is\n-  already defined else where... **more on this later**\n-\n-\n Definition File\n ===============\n \n What can it contain?\n --------------------\n \n-* Any kind of C type declaration.\n-* ``extern`` C function or variable declarations.\n-* Declarations for module implementations.\n-* The definition parts of **extension types**.\n-* All declarations of functions, etc., for an **external library**\n-\n What can't it contain?\n ----------------------\n \n-* Any non-extern C variable declaration.\n-* Implementations of C or Python functions.\n-* Python class definitions\n-* Python executable statements.\n-* Any declaration that is defined as **public** to make it accessible to other Cython modules.\n-\n- * This is not necessary, as it is automatic.\n- * a **public** declaration is only needed to make it accessible to **external C code**.\n-\n What else?\n ----------\n \n cimport\n ```````\n \n-* Use the **cimport** statement, as you would Python's import statement, to access these files\n-  from other definition or implementation files.\n-* **cimport** does not need to be called in ``.pyx`` file for ``.pxd`` file that has the\n-  same name, as they are already in the same namespace.\n-* For cimport to find the stated definition file, the path to the file must be appended to the\n-  ``-I`` option of the **Cython compile command**.\n-\n compilation order\n `````````````````\n \n-* When a ``.pyx`` file is to be compiled, Cython first checks to see if a corresponding ``.pxd`` file\n-  exits and processes it first.\n-\n-\n-\n Include File\n ============\n \n What can it contain?\n --------------------\n \n-* Any Cythonic code really, because the entire file is textually embedded at the location\n-  you prescribe.\n-\n How do I use it?\n ----------------\n \n-* Include the ``.pxi`` file with an ``include`` statement like: ``include \"spamstuff.pxi``\n-* The ``include`` statement can appear anywhere in your Cython file and at any indentation level\n-* The code in the ``.pxi`` file needs to be rooted at the \"zero\" indentation level.\n-* The included code can itself contain other ``include`` statements.\n-\n-\n ====================\n Declaring Data Types\n ====================\n \n-\n-As a dynamic language, Python encourages a programming style of considering classes and objects in terms of their methods and attributes, more than where they fit into the class hierarchy.\n-\n-This can make Python a very relaxed and comfortable language for rapid development, but with a price - the 'red tape' of managing data types is dumped onto the interpreter. At run time, the interpreter does a lot of work searching namespaces, fetching attributes and parsing argument and keyword tuples. This run-time ‘late binding’ is a major cause of Python’s relative slowness compared to ‘early binding’ languages such as C++.\n-\n-However with Cython it is possible to gain significant speed-ups through the use of ‘early binding’ programming techniques.\n-\n-.. note:: Typing is not a necessity\n-\n-    Providing static typing to parameters and variables is convenience to speed up your code, but it is not a necessity. Optimize where and when needed.\n-    In fact, typing can *slow down* your code in the case where the\n-    typing does not allow optimizations but where Cython still needs to\n-    check that the type of some object matches the declared type.\n-\n+This section was moved to :ref:`declaring_data_types`.\n \n The cdef Statement\n ==================\n \n-The ``cdef`` statement is used to make C level declarations for:\n-\n-:Variables:\n-\n-::\n-\n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n-\n-:Structs:\n-\n-::\n-\n-    cdef struct Grail:\n-        int age\n-        float volume\n-\n-.. note::\n-\n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n-\n-:Unions:\n-\n-::\n-\n-    cdef union Food:\n-        char *spam\n-        float *eggs\n-\n-\n-:Enums:\n-\n-::\n-\n-    cdef enum CheeseType:\n-        cheddar, edam,\n-        camembert\n-\n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n-\n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n-\n-:Functions:\n-\n-::\n-\n-    cdef int eggs(unsigned long l, float f):\n-        ...\n-\n-:Extension Types:\n-\n-::\n-\n-    cdef class Spam:\n-        ...\n-\n-\n-.. note:: Constants\n-\n-    Constants can be defined by using an anonymous enum::\n-\n-        cdef enum:\n-            tons_of_spam = 3\n-\n+This section was moved to :ref:`c_variable_and_type_definitions`.\n \n Grouping cdef Declarations\n ==========================\n \n-A series of declarations can grouped into a ``cdef`` block::\n-\n-        cdef:\n-            struct Spam:\n-                int tons\n-\n-            int i\n-            float f\n-            Spam *p\n-\n-            void f(Spam *s):\n-            print s.tons, \"Tons of spam\"\n-\n-\n-.. note:: ctypedef statement\n-\n-    The ``ctypedef`` statement is provided for naming types::\n-\n-        ctypedef unsigned long ULong\n-\n-        ctypedef int *IntPtr\n+This section was moved to :ref:`c_variable_and_type_definitions`.\n \n .. _typing_types:",
            "html_url": "https://github.com/cython/cython/pull/2275#discussion_r189065370",
            "id": 189065370,
            "in_reply_to_id": 189064156,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTA2NTM3MA==",
            "original_commit_id": "a974e21b4c42e64257ec9c9a871f3607019ac451",
            "original_position": 226,
            "path": "docs/src/reference/language_basics.rst",
            "position": null,
            "pull_request_review_id": 121172569,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2275",
            "updated_at": "2018-05-17T19:10:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/189065370",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
                "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
                "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
                "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gabrieldemarmiesse",
                "id": 12891691,
                "login": "gabrieldemarmiesse",
                "node_id": "MDQ6VXNlcjEyODkxNjkx",
                "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
                "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
                "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gabrieldemarmiesse"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2275#discussion_r189065898"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2275"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/189065898"
                }
            },
            "author_association": "NONE",
            "body": "Fixed.",
            "commit_id": "553822b5f48f647a2b7a790af47a7d2db96090f4",
            "created_at": "2018-05-17T18:55:46Z",
            "diff_hunk": "@@ -1,854 +1,178 @@\n .. highlight:: cython\n \n \n-\n-.. _language_basics:\n-\n ***************\n Language Basics\n ***************\n \n+.. note::\n+\n+    The sections in this page were moved to the :ref:`language-basics` in the userguide.\n+\n =================\n Cython File Types\n =================\n \n-.. NOW IN USER GUIDE, DO NOT TOUCH\n-\n-There are three file types in Cython:\n-\n-* Implementation files carry a ``.pyx`` suffix\n-* Definition files carry a ``.pxd`` suffix\n-* Include files which carry a ``.pxi`` suffix\n-\n+This section was moved to :ref:`cython_file_types`.\n \n Implementation File\n ===================\n \n What can it contain?\n --------------------\n \n-* Basically anything Cythonic, but see below.\n-\n What can't it contain?\n ----------------------\n \n-* There are some restrictions when it comes to **extension types**, if the extension type is\n-  already defined else where... **more on this later**\n-\n-\n Definition File\n ===============\n \n What can it contain?\n --------------------\n \n-* Any kind of C type declaration.\n-* ``extern`` C function or variable declarations.\n-* Declarations for module implementations.\n-* The definition parts of **extension types**.\n-* All declarations of functions, etc., for an **external library**\n-\n What can't it contain?\n ----------------------\n \n-* Any non-extern C variable declaration.\n-* Implementations of C or Python functions.\n-* Python class definitions\n-* Python executable statements.\n-* Any declaration that is defined as **public** to make it accessible to other Cython modules.\n-\n- * This is not necessary, as it is automatic.\n- * a **public** declaration is only needed to make it accessible to **external C code**.\n-\n What else?\n ----------\n \n cimport\n ```````\n \n-* Use the **cimport** statement, as you would Python's import statement, to access these files\n-  from other definition or implementation files.\n-* **cimport** does not need to be called in ``.pyx`` file for ``.pxd`` file that has the\n-  same name, as they are already in the same namespace.\n-* For cimport to find the stated definition file, the path to the file must be appended to the\n-  ``-I`` option of the **Cython compile command**.\n-\n compilation order\n `````````````````\n \n-* When a ``.pyx`` file is to be compiled, Cython first checks to see if a corresponding ``.pxd`` file\n-  exits and processes it first.\n-\n-\n-\n Include File\n ============\n \n What can it contain?\n --------------------\n \n-* Any Cythonic code really, because the entire file is textually embedded at the location\n-  you prescribe.\n-\n How do I use it?\n ----------------\n \n-* Include the ``.pxi`` file with an ``include`` statement like: ``include \"spamstuff.pxi``\n-* The ``include`` statement can appear anywhere in your Cython file and at any indentation level\n-* The code in the ``.pxi`` file needs to be rooted at the \"zero\" indentation level.\n-* The included code can itself contain other ``include`` statements.\n-\n-\n ====================\n Declaring Data Types\n ====================\n \n-\n-As a dynamic language, Python encourages a programming style of considering classes and objects in terms of their methods and attributes, more than where they fit into the class hierarchy.\n-\n-This can make Python a very relaxed and comfortable language for rapid development, but with a price - the 'red tape' of managing data types is dumped onto the interpreter. At run time, the interpreter does a lot of work searching namespaces, fetching attributes and parsing argument and keyword tuples. This run-time ‘late binding’ is a major cause of Python’s relative slowness compared to ‘early binding’ languages such as C++.\n-\n-However with Cython it is possible to gain significant speed-ups through the use of ‘early binding’ programming techniques.\n-\n-.. note:: Typing is not a necessity\n-\n-    Providing static typing to parameters and variables is convenience to speed up your code, but it is not a necessity. Optimize where and when needed.\n-    In fact, typing can *slow down* your code in the case where the\n-    typing does not allow optimizations but where Cython still needs to\n-    check that the type of some object matches the declared type.\n-\n+This section was moved to :ref:`declaring_data_types`.\n \n The cdef Statement\n ==================\n \n-The ``cdef`` statement is used to make C level declarations for:\n-\n-:Variables:\n-\n-::\n-\n-    cdef int i, j, k\n-    cdef float f, g[42], *h\n-\n-:Structs:\n-\n-::\n-\n-    cdef struct Grail:\n-        int age\n-        float volume\n-\n-.. note::\n-\n-    Structs can be declared as ``cdef packed struct``, which has\n-    the same effect as the C directive ``#pragma pack(1)``.\n-\n-:Unions:\n-\n-::\n-\n-    cdef union Food:\n-        char *spam\n-        float *eggs\n-\n-\n-:Enums:\n-\n-::\n-\n-    cdef enum CheeseType:\n-        cheddar, edam,\n-        camembert\n-\n-Declaring an enum as ``cpdef`` will create a :pep:`435`-style Python wrapper::\n-\n-    cpdef enum CheeseState:\n-        hard = 1\n-        soft = 2\n-        runny = 3\n-\n-:Functions:\n-\n-::\n-\n-    cdef int eggs(unsigned long l, float f):\n-        ...\n-\n-:Extension Types:\n-\n-::\n-\n-    cdef class Spam:\n-        ...\n-\n-\n-.. note:: Constants\n-\n-    Constants can be defined by using an anonymous enum::\n-\n-        cdef enum:\n-            tons_of_spam = 3\n-\n+This section was moved to :ref:`c_variable_and_type_definitions`.\n \n Grouping cdef Declarations\n ==========================\n \n-A series of declarations can grouped into a ``cdef`` block::\n-\n-        cdef:\n-            struct Spam:\n-                int tons\n-\n-            int i\n-            float f\n-            Spam *p\n-\n-            void f(Spam *s):\n-            print s.tons, \"Tons of spam\"\n-\n-\n-.. note:: ctypedef statement\n-\n-    The ``ctypedef`` statement is provided for naming types::\n-\n-        ctypedef unsigned long ULong\n-\n-        ctypedef int *IntPtr\n+This section was moved to :ref:`c_variable_and_type_definitions`.\n \n .. _typing_types:",
            "html_url": "https://github.com/cython/cython/pull/2275#discussion_r189065898",
            "id": 189065898,
            "in_reply_to_id": 189064156,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTA2NTg5OA==",
            "original_commit_id": "a974e21b4c42e64257ec9c9a871f3607019ac451",
            "original_position": 226,
            "path": "docs/src/reference/language_basics.rst",
            "position": null,
            "pull_request_review_id": 121173188,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2275",
            "updated_at": "2018-05-17T19:10:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/189065898",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
                "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
                "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
                "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gabrieldemarmiesse",
                "id": 12891691,
                "login": "gabrieldemarmiesse",
                "node_id": "MDQ6VXNlcjEyODkxNjkx",
                "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
                "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
                "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gabrieldemarmiesse"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2275/comments",
    "commit_data": [
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/038af452ccbdf063e1fbf474a64a03aa8e332d60/comments",
            "commit": {
                "author": {
                    "date": "2018-05-16T10:05:20Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-05-17T18:52:27Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "message": "All text is now replaced by links to the userguide.",
                "tree": {
                    "sha": "78d78577246529b4496d66372bbd41790985985f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/78d78577246529b4496d66372bbd41790985985f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/038af452ccbdf063e1fbf474a64a03aa8e332d60",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/038af452ccbdf063e1fbf474a64a03aa8e332d60",
            "node_id": "MDY6Q29tbWl0MTI0NzQ0NjI4OjAzOGFmNDUyY2NiZGYwNjNlMWZiZjQ3NGE2NGEwM2FhOGUzMzJkNjA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6ffbfc5efb29184090e646200ffe4202ec735e6b",
                    "sha": "6ffbfc5efb29184090e646200ffe4202ec735e6b",
                    "url": "https://api.github.com/repos/cython/cython/commits/6ffbfc5efb29184090e646200ffe4202ec735e6b"
                }
            ],
            "sha": "038af452ccbdf063e1fbf474a64a03aa8e332d60",
            "url": "https://api.github.com/repos/cython/cython/commits/038af452ccbdf063e1fbf474a64a03aa8e332d60"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a69ac7ed4e9d401b9d3a16ac6a7558668a644ad8/comments",
            "commit": {
                "author": {
                    "date": "2018-05-17T18:54:53Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-05-17T18:54:53Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "message": "Moved the typing_types reference.",
                "tree": {
                    "sha": "14ba86ed6fa22596bd81de67ca4a2d375d7dca6c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/14ba86ed6fa22596bd81de67ca4a2d375d7dca6c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a69ac7ed4e9d401b9d3a16ac6a7558668a644ad8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/a69ac7ed4e9d401b9d3a16ac6a7558668a644ad8",
            "node_id": "MDY6Q29tbWl0MTI0NzQ0NjI4OmE2OWFjN2VkNGU5ZDQwMWI5ZDNhMTZhYzZhNzU1ODY2OGE2NDRhZDg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/038af452ccbdf063e1fbf474a64a03aa8e332d60",
                    "sha": "038af452ccbdf063e1fbf474a64a03aa8e332d60",
                    "url": "https://api.github.com/repos/cython/cython/commits/038af452ccbdf063e1fbf474a64a03aa8e332d60"
                }
            ],
            "sha": "a69ac7ed4e9d401b9d3a16ac6a7558668a644ad8",
            "url": "https://api.github.com/repos/cython/cython/commits/a69ac7ed4e9d401b9d3a16ac6a7558668a644ad8"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/553822b5f48f647a2b7a790af47a7d2db96090f4/comments",
            "commit": {
                "author": {
                    "date": "2018-05-17T19:10:31Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-05-17T19:10:31Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "message": "Transfered the Function pointers section.",
                "tree": {
                    "sha": "3bb1b117e04179b7e2db329b89fabd2badf4bef9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3bb1b117e04179b7e2db329b89fabd2badf4bef9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/553822b5f48f647a2b7a790af47a7d2db96090f4",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/553822b5f48f647a2b7a790af47a7d2db96090f4",
            "node_id": "MDY6Q29tbWl0MTI0NzQ0NjI4OjU1MzgyMmI1ZjQ4ZjY0N2EyYjdhNzkwYWY0N2E3ZDJkYjk2MDkwZjQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a69ac7ed4e9d401b9d3a16ac6a7558668a644ad8",
                    "sha": "a69ac7ed4e9d401b9d3a16ac6a7558668a644ad8",
                    "url": "https://api.github.com/repos/cython/cython/commits/a69ac7ed4e9d401b9d3a16ac6a7558668a644ad8"
                }
            ],
            "sha": "553822b5f48f647a2b7a790af47a7d2db96090f4",
            "url": "https://api.github.com/repos/cython/cython/commits/553822b5f48f647a2b7a790af47a7d2db96090f4"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/2275/commits",
    "created_at": "2018-05-17T18:47:53Z",
    "diff_url": "https://github.com/cython/cython/pull/2275.diff",
    "head": {
        "label": "gabrieldemarmiesse:replace_text_with_links",
        "ref": "replace_text_with_links",
        "repo": {
            "archive_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/branches{/branch}",
            "clone_url": "https://github.com/gabrieldemarmiesse/cython.git",
            "collaborators_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/contributors",
            "created_at": "2018-03-11T10:14:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "downloads_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/downloads",
            "events_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/forks",
            "full_name": "gabrieldemarmiesse/cython",
            "git_commits_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/tags{/sha}",
            "git_url": "git://github.com/gabrieldemarmiesse/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/hooks",
            "html_url": "https://github.com/gabrieldemarmiesse/cython",
            "id": 124744628,
            "issue_comment_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": null,
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/merges",
            "milestones_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ3NDQ2Mjg=",
            "notifications_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
                "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
                "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
                "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gabrieldemarmiesse",
                "id": 12891691,
                "login": "gabrieldemarmiesse",
                "node_id": "MDQ6VXNlcjEyODkxNjkx",
                "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
                "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
                "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gabrieldemarmiesse"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/pulls{/number}",
            "pushed_at": "2018-06-05T11:12:34Z",
            "releases_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/releases{/id}",
            "size": 50659,
            "ssh_url": "git@github.com:gabrieldemarmiesse/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/subscription",
            "svn_url": "https://github.com/gabrieldemarmiesse/cython",
            "tags_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/tags",
            "teams_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/teams",
            "trees_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/trees{/sha}",
            "updated_at": "2018-05-28T12:43:28Z",
            "url": "https://api.github.com/repos/gabrieldemarmiesse/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "553822b5f48f647a2b7a790af47a7d2db96090f4",
        "user": {
            "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
            "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
            "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
            "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
            "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gabrieldemarmiesse",
            "id": 12891691,
            "login": "gabrieldemarmiesse",
            "node_id": "MDQ6VXNlcjEyODkxNjkx",
            "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
            "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
            "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gabrieldemarmiesse"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/2275",
    "id": 188828121,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/2275",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "58dc19ba19a83020a7fe52907e65c15c94485423",
    "merged_at": "2018-05-17T19:14:58Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg4ODI4MTIx",
    "number": 2275,
    "patch_url": "https://github.com/cython/cython/pull/2275.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/2275/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/553822b5f48f647a2b7a790af47a7d2db96090f4",
    "title": "Replace text with links",
    "updated_at": "2018-05-17T19:17:11Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/2275",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
        "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
        "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
        "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
        "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gabrieldemarmiesse",
        "id": 12891691,
        "login": "gabrieldemarmiesse",
        "node_id": "MDQ6VXNlcjEyODkxNjkx",
        "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
        "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
        "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gabrieldemarmiesse"
    }
}