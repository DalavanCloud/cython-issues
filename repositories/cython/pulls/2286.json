{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/2286/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2286/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/2286"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/2286"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2286/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2286"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/82e01e1c6c6233ad1fba58de90ea4bc640f6733f"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 680,
            "forks_count": 680,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": null,
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 523,
            "open_issues_count": 523,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2018-06-08T19:51:12Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 50849,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 3175,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2018-06-08T21:26:35Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 3175,
            "watchers_count": 3175
        },
        "sha": "0ced0629e9028c65aea63725c5a141c21a337c65",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "I just changed the print function here and there so that people using python 2 and 3 can both copy-past the example to try them without having to change anything.",
    "closed_at": "2018-05-20T21:40:11Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2286#discussion_r189465928"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2286"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/189465928"
                }
            },
            "author_association": "MEMBER",
            "body": "The indentation here seems too wide.",
            "commit_id": "82e01e1c6c6233ad1fba58de90ea4bc640f6733f",
            "created_at": "2018-05-20T17:57:17Z",
            "diff_hunk": "@@ -14,6 +14,8 @@ statement, Cython also lets you create new built-in Python types, known as\n extension types. You define an extension type using the :keyword:`cdef` class\n statement.  Here's an example::\n \n+\tfrom __future__ import print_function",
            "html_url": "https://github.com/cython/cython/pull/2286#discussion_r189465928",
            "id": 189465928,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTQ2NTkyOA==",
            "original_commit_id": "abb08286137a2118e83634ca4db2195f7bdc569b",
            "original_position": 4,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 121650613,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2286",
            "updated_at": "2018-05-20T20:17:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/189465928",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2286#discussion_r189465957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2286"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/189465957"
                }
            },
            "author_association": "MEMBER",
            "body": "These two examples would benefit from whitespace in the `print()` parentheses to separate the `print()` from the parentheses of the expression.",
            "commit_id": "82e01e1c6c6233ad1fba58de90ea4bc640f6733f",
            "created_at": "2018-05-20T17:58:42Z",
            "diff_hunk": "@@ -121,21 +123,21 @@ Suppose I have a method :meth:`quest` which returns an object of type :class:`Sh\n To access it's width I could write::\n \n     cdef Shrubbery sh = quest()\n-    print sh.width\n+    print(sh.width)\n \n which requires the use of a local variable and performs a type test on assignment.\n If you *know* the return value of :meth:`quest` will be of type :class:`Shrubbery`\n you can use a cast to write::\n \n-    print (<Shrubbery>quest()).width\n+    print((<Shrubbery>quest()).width)\n \n This may be dangerous if :meth:`quest()` is not actually a :class:`Shrubbery`, as it\n will try to access width as a C struct member which may not exist. At the C level,\n rather than raising an :class:`AttributeError`, either an nonsensical result will be\n returned (interpreting whatever data is at that address as an int) or a segfault\n may result from trying to access invalid memory. Instead, one can write::\n \n-    print (<Shrubbery?>quest()).width\n+    print((<Shrubbery?>quest()).width)",
            "html_url": "https://github.com/cython/cython/pull/2286#discussion_r189465957",
            "id": 189465957,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTQ2NTk1Nw==",
            "original_commit_id": "abb08286137a2118e83634ca4db2195f7bdc569b",
            "original_position": 41,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 121650613,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2286",
            "updated_at": "2018-05-20T20:17:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/189465957",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2286#discussion_r189466227"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2286"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/189466227"
                }
            },
            "author_association": "MEMBER",
            "body": "Interesting. I think this whole paragraph is outdated. `isinstance()` with extension types always does a type check in Cython, also when you pass a tuple. And I think I recall that even the comment on the `__class__` check no longer applies in Py3. Type checks have definitely changed since this was written.\r\n\r\nThis should be more accurate:\r\n\r\n\"To explicitly test the type of an object, use the :meth:\\`isinstance\\` method. For known builtin or extension types, Cython translates these into a fast and safe type check that ignores changes to the object's `__class__` attribute etc., so that after a successful `isinstance()` test, code can rely on the expected C structure of the extension type and its `cdef` attributes and methods.",
            "commit_id": "82e01e1c6c6233ad1fba58de90ea4bc640f6733f",
            "created_at": "2018-05-20T18:11:42Z",
            "diff_hunk": "@@ -148,8 +150,8 @@ of an extension type must be correct to access its :keyword:`cdef` attributes an\n type and does a type check instead, analogous to Pyrex's :meth:`typecheck`.\n The old behavior is always available by passing a tuple as the second parameter::\n \n-    print isinstance(sh, Shrubbery)     # Check the type of sh\n-    print isinstance(sh, (Shrubbery,))  # Check sh.__class__\n+    print(isinstance(sh, Shrubbery))     # Check the type of sh\n+    print(isinstance(sh, (Shrubbery,)))  # Check sh.__class__",
            "html_url": "https://github.com/cython/cython/pull/2286#discussion_r189466227",
            "id": 189466227,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTQ2NjIyNw==",
            "original_commit_id": "abb08286137a2118e83634ca4db2195f7bdc569b",
            "original_position": 52,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 121650613,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2286",
            "updated_at": "2018-05-20T20:17:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/189466227",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2286#discussion_r189469138"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2286"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/189469138"
                }
            },
            "author_association": "MEMBER",
            "body": "This should read `` :keyword:`cdef` `` - I think it might otherwise format badly.",
            "commit_id": "82e01e1c6c6233ad1fba58de90ea4bc640f6733f",
            "created_at": "2018-05-20T20:10:30Z",
            "diff_hunk": "@@ -129,29 +129,25 @@ which requires the use of a local variable and performs a type test on assignmen\n If you *know* the return value of :meth:`quest` will be of type :class:`Shrubbery`\n you can use a cast to write::\n \n-    print((<Shrubbery>quest()).width)\n+    print( (<Shrubbery>quest()).width )\n \n This may be dangerous if :meth:`quest()` is not actually a :class:`Shrubbery`, as it\n will try to access width as a C struct member which may not exist. At the C level,\n rather than raising an :class:`AttributeError`, either an nonsensical result will be\n returned (interpreting whatever data is at that address as an int) or a segfault\n may result from trying to access invalid memory. Instead, one can write::\n \n-    print((<Shrubbery?>quest()).width)\n+    print( (<Shrubbery?>quest()).width )\n \n which performs a type check (possibly raising a :class:`TypeError`) before making the\n cast and allowing the code to proceed.\n \n-To explicitly test the type of an object, use the :meth:`isinstance` method. By default,\n-in Python, the :meth:`isinstance` method checks the :class:`__class__` attribute of the\n-first argument to determine if it is of the required type. However, this is potentially\n-unsafe as the :class:`__class__` attribute can be spoofed or changed, but the C structure\n-of an extension type must be correct to access its :keyword:`cdef` attributes and call its :keyword:`cdef` methods. Cython detects if the second argument is a known extension\n-type and does a type check instead, analogous to Pyrex's :meth:`typecheck`.\n-The old behavior is always available by passing a tuple as the second parameter::\n-\n-    print(isinstance(sh, Shrubbery))     # Check the type of sh\n-    print(isinstance(sh, (Shrubbery,)))  # Check sh.__class__\n+To explicitly test the type of an object, use the :meth:`isinstance` method.\n+For known builtin or extension types, Cython translates these into a\n+fast and safe type check that ignores changes to\n+the object's ``__class__`` attribute etc., so that after a successful\n+:meth:`isinstance` test, code can rely on the expected C structure of the\n+extension type and its `cdef` attributes and methods.",
            "html_url": "https://github.com/cython/cython/pull/2286#discussion_r189469138",
            "id": 189469138,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTQ2OTEzOA==",
            "original_commit_id": "50b4e3b621f7e777d35a4cd89b4aeef1edf37483",
            "original_position": 43,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 121653681,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2286",
            "updated_at": "2018-05-20T20:17:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/189469138",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2286/comments",
    "commit_data": [
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/abb08286137a2118e83634ca4db2195f7bdc569b/comments",
            "commit": {
                "author": {
                    "date": "2018-05-20T08:58:05Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-05-20T08:58:05Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "message": "Made code examples in the compatible python 2 and 3.",
                "tree": {
                    "sha": "d87d36b010a0319c494f0ca8156ce3241918ff3a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d87d36b010a0319c494f0ca8156ce3241918ff3a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/abb08286137a2118e83634ca4db2195f7bdc569b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/abb08286137a2118e83634ca4db2195f7bdc569b",
            "node_id": "MDY6Q29tbWl0MTI0NzQ0NjI4OmFiYjA4Mjg2MTM3YTIxMThlODM2MzRjYTRkYjIxOTVmN2JkYzU2OWI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2f3ee7ad0465ff3b24c5ec768c362bcccb89f343",
                    "sha": "2f3ee7ad0465ff3b24c5ec768c362bcccb89f343",
                    "url": "https://api.github.com/repos/cython/cython/commits/2f3ee7ad0465ff3b24c5ec768c362bcccb89f343"
                }
            ],
            "sha": "abb08286137a2118e83634ca4db2195f7bdc569b",
            "url": "https://api.github.com/repos/cython/cython/commits/abb08286137a2118e83634ca4db2195f7bdc569b"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/82e01e1c6c6233ad1fba58de90ea4bc640f6733f/comments",
            "commit": {
                "author": {
                    "date": "2018-05-20T20:05:37Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-05-20T20:17:32Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "message": "Fixed an indentation issue and updated a paragraph on the usage of isinstance().",
                "tree": {
                    "sha": "84e4c382b1f9b2a456ec9dd10929f148a023b1c3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/84e4c382b1f9b2a456ec9dd10929f148a023b1c3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/82e01e1c6c6233ad1fba58de90ea4bc640f6733f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/82e01e1c6c6233ad1fba58de90ea4bc640f6733f",
            "node_id": "MDY6Q29tbWl0MTI0NzQ0NjI4OjgyZTAxZTFjNmM2MjMzYWQxZmJhNThkZTkwZWE0YmM2NDBmNjczM2Y=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/abb08286137a2118e83634ca4db2195f7bdc569b",
                    "sha": "abb08286137a2118e83634ca4db2195f7bdc569b",
                    "url": "https://api.github.com/repos/cython/cython/commits/abb08286137a2118e83634ca4db2195f7bdc569b"
                }
            ],
            "sha": "82e01e1c6c6233ad1fba58de90ea4bc640f6733f",
            "url": "https://api.github.com/repos/cython/cython/commits/82e01e1c6c6233ad1fba58de90ea4bc640f6733f"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/2286/commits",
    "created_at": "2018-05-20T09:01:07Z",
    "diff_url": "https://github.com/cython/cython/pull/2286.diff",
    "head": {
        "label": "gabrieldemarmiesse:compat_py2_py3",
        "ref": "compat_py2_py3",
        "repo": {
            "archive_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/branches{/branch}",
            "clone_url": "https://github.com/gabrieldemarmiesse/cython.git",
            "collaborators_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/contributors",
            "created_at": "2018-03-11T10:14:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "downloads_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/downloads",
            "events_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/forks",
            "full_name": "gabrieldemarmiesse/cython",
            "git_commits_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/tags{/sha}",
            "git_url": "git://github.com/gabrieldemarmiesse/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/hooks",
            "html_url": "https://github.com/gabrieldemarmiesse/cython",
            "id": 124744628,
            "issue_comment_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": null,
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/merges",
            "milestones_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ3NDQ2Mjg=",
            "notifications_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
                "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
                "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
                "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gabrieldemarmiesse",
                "id": 12891691,
                "login": "gabrieldemarmiesse",
                "node_id": "MDQ6VXNlcjEyODkxNjkx",
                "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
                "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
                "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gabrieldemarmiesse"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/pulls{/number}",
            "pushed_at": "2018-06-05T11:12:34Z",
            "releases_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/releases{/id}",
            "size": 50659,
            "ssh_url": "git@github.com:gabrieldemarmiesse/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/subscription",
            "svn_url": "https://github.com/gabrieldemarmiesse/cython",
            "tags_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/tags",
            "teams_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/teams",
            "trees_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/trees{/sha}",
            "updated_at": "2018-05-28T12:43:28Z",
            "url": "https://api.github.com/repos/gabrieldemarmiesse/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "82e01e1c6c6233ad1fba58de90ea4bc640f6733f",
        "user": {
            "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
            "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
            "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
            "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
            "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gabrieldemarmiesse",
            "id": 12891691,
            "login": "gabrieldemarmiesse",
            "node_id": "MDQ6VXNlcjEyODkxNjkx",
            "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
            "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
            "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gabrieldemarmiesse"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/2286",
    "id": 189225368,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/2286",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "e7b5c5da998ff28cf4f0152b37ff568fc3e2835c",
    "merged_at": "2018-05-20T21:40:11Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg5MjI1MzY4",
    "number": 2286,
    "patch_url": "https://github.com/cython/cython/pull/2286.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/2286/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/82e01e1c6c6233ad1fba58de90ea4bc640f6733f",
    "title": "Made code examples in the docs compatible with python 2 and 3.",
    "updated_at": "2018-05-22T07:36:38Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/2286",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
        "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
        "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
        "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
        "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gabrieldemarmiesse",
        "id": 12891691,
        "login": "gabrieldemarmiesse",
        "node_id": "MDQ6VXNlcjEyODkxNjkx",
        "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
        "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
        "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gabrieldemarmiesse"
    }
}