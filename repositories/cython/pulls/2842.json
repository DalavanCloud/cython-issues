{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/2842/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2842/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/2842"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/2842"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2842/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2842"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/c47c4ef735c4b7f1863b21bbe6f112b06c4aad05"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 805,
            "forks_count": 805,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 618,
            "open_issues_count": 618,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2019-02-20T13:19:25Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 54074,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 3849,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2019-02-20T13:59:19Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 3849,
            "watchers_count": 3849
        },
        "sha": "f1eaa9c1f8c37d8679a259982ee9949676952f0e",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Fix #1354 \r\n\r\nThis enables a `@cython.trashcan` directive which can enable using the Python trashcan for deallocations. This is optional, disabled by default (but one could argue about making it enabled by default).\r\n\r\nAlso see https://bugs.python.org/issue35983",
    "closed_at": "2019-02-18T19:22:52Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257153952"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257153952"
                }
            },
            "author_association": "MEMBER",
            "body": "No need to scream. ;-) Just name it `PyTrashcan` or `PyTrashcanSupport`.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T09:11:52Z",
            "diff_hunk": "@@ -74,6 +74,41 @@ static int __Pyx_PyType_Ready(PyTypeObject *t) {\n     return r;\n }\n \n+/////////////// TRASHCAN.proto ///////////////",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257153952",
            "id": 257153952,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzE1Mzk1Mg==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 4,
            "path": "Cython/Utility/ExtensionTypes.c",
            "position": null,
            "pull_request_review_id": 204139758,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257153952",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257156379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257156379"
                }
            },
            "author_association": "MEMBER",
            "body": "We could increase the minimum version for Cy3.0 *iff* this feature is used, i.e. we can make it fail to compile with a C `#error` right here if `PY_VERSION_HEX < 2.7.4`.\r\nBut I'd rather turn the macros into no-ops for older versions. In 99% of the cases, that's still better than not working at all. I mean, you can currently get a crash with Py2.7.3 in rare situations, and you'd get a crash in the future for them. Nothing lost, really.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T09:18:56Z",
            "diff_hunk": "@@ -74,6 +74,41 @@ static int __Pyx_PyType_Ready(PyTypeObject *t) {\n     return r;\n }\n \n+/////////////// TRASHCAN.proto ///////////////\n+\n+// These macros are taken from https://github.com/python/cpython/pull/11841\n+// Unlike the Py_TRASHCAN_SAFE_BEGIN/Py_TRASHCAN_SAFE_END macros, they\n+// allow dealing correctly with subclasses.\n+//\n+// This requires Python version >= 2.7.4 or >= 3.2.4",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257156379",
            "id": 257156379,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzE1NjM3OQ==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 10,
            "path": "Cython/Utility/ExtensionTypes.c",
            "position": null,
            "pull_request_review_id": 204139758,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257156379",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257156870"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257156870"
                }
            },
            "author_association": "MEMBER",
            "body": "We should consider using the original macros in Py3.8+ if/when that contains the fixes.\r\nI also wonder if PyPy's `cpyext` supports the trashcan at all, or if this is a CPython-only feature (for now?).",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T09:20:12Z",
            "diff_hunk": "@@ -74,6 +74,41 @@ static int __Pyx_PyType_Ready(PyTypeObject *t) {\n     return r;\n }\n \n+/////////////// TRASHCAN.proto ///////////////\n+\n+// These macros are taken from https://github.com/python/cpython/pull/11841\n+// Unlike the Py_TRASHCAN_SAFE_BEGIN/Py_TRASHCAN_SAFE_END macros, they\n+// allow dealing correctly with subclasses.",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257156870",
            "id": 257156870,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzE1Njg3MA==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 8,
            "path": "Cython/Utility/ExtensionTypes.c",
            "position": 8,
            "pull_request_review_id": 204139758,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257156870",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257157482"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257157482"
                }
            },
            "author_association": "MEMBER",
            "body": "If you use `//` comments here, then they will not appear in the C files.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T09:21:54Z",
            "diff_hunk": "@@ -74,6 +74,41 @@ static int __Pyx_PyType_Ready(PyTypeObject *t) {\n     return r;\n }\n \n+/////////////// TRASHCAN.proto ///////////////\n+\n+// These macros are taken from https://github.com/python/cpython/pull/11841\n+// Unlike the Py_TRASHCAN_SAFE_BEGIN/Py_TRASHCAN_SAFE_END macros, they\n+// allow dealing correctly with subclasses.\n+//\n+// This requires Python version >= 2.7.4 or >= 3.2.4\n+\n+#define __Pyx_TRASHCAN_BEGIN_CONDITION(op, cond) \\\n+    do { \\\n+        PyThreadState *_tstate = NULL; \\\n+        /* If \"cond\" is false, then _tstate remains NULL and the deallocator \\\n+         * is run normally without involving the trashcan */ \\",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257157482",
            "id": 257157482,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzE1NzQ4Mg==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 16,
            "path": "Cython/Utility/ExtensionTypes.c",
            "position": null,
            "pull_request_review_id": 204139758,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257157482",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257158933"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257158933"
                }
            },
            "author_association": "MEMBER",
            "body": "If multiple tests are run without forking, then this one will kill the whole test process on failure. Why not set a flag on the class instead, or use a global counter, or something like that? That would also allow to check that the deallocation was actually executed (ignoring PyPy's GC here).",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T09:26:04Z",
            "diff_hunk": "@@ -0,0 +1,62 @@\n+# mode: run\n+\n+cimport cython\n+from libc.stdlib cimport abort\n+\n+\n+def recursion_test(f, int n=2**20):\n+    x = None\n+    cdef int i\n+    for i in range(n):\n+        x = f(x)\n+\n+\n+@cython.trashcan(True)\n+cdef class Recurse:\n+    \"\"\"\n+    >>> recursion_test(Recurse)\n+    \"\"\"\n+    cdef public attr\n+    cdef int deallocated\n+\n+    def __init__(self, x):\n+        self.attr = x\n+\n+    def __dealloc__(self):\n+        # Check that we're not being deallocated twice\n+        if self.deallocated:\n+            abort()  # Can't raise exceptions here...\n+        self.deallocated = 1\n+\n+\n+cdef class RecurseSub(Recurse):\n+    \"\"\"\n+    >>> recursion_test(RecurseSub)\n+    \"\"\"\n+    cdef int subdeallocated\n+\n+    def __dealloc__(self):\n+        # Check that we're not being deallocated twice\n+        if self.subdeallocated:\n+            abort()  # Can't raise exceptions here...",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257158933",
            "id": 257158933,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzE1ODkzMw==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 41,
            "path": "tests/run/trashcan.pyx",
            "position": null,
            "pull_request_review_id": 204139758,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257158933",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257161841"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257161841"
                }
            },
            "author_association": "MEMBER",
            "body": "Shouldn't this also depend on `@trashcan(False)`? (And there is no test for that usage.)",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T09:34:51Z",
            "diff_hunk": "@@ -2085,6 +2085,18 @@ def needs_gc(self):\n             return not self.parent_type.is_gc_simple\n         return False\n \n+    def needs_trashcan(self):\n+        # If the type or any of its base types have Python-valued\n+        # C attributes, then it should use the trashcan in tp_dealloc.\n+        if self.has_cyclic_pyobject_attrs and self.directives.get('trashcan', False):\n+            return True\n+        base_type = self.parent_type.base_type\n+        if base_type and base_type.scope is not None:\n+            return base_type.scope.needs_trashcan()\n+        elif self.parent_type.is_builtin_type:\n+            return not self.parent_type.is_gc_simple",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257161841",
            "id": 257161841,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzE2MTg0MQ==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 13,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 204139758,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257161841",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257167860"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257167860"
                }
            },
            "author_association": "MEMBER",
            "body": "No need for semicolons after the two macro calls.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T09:52:31Z",
            "diff_hunk": "@@ -1537,6 +1543,10 @@ def generate_dealloc_function(self, scope, code):\n             code.putln(\"(*Py_TYPE(o)->tp_free)(o);\")\n             if freelist_size:\n                 code.putln(\"}\")\n+\n+        if needs_trashcan:\n+            code.putln(\"__Pyx_TRASHCAN_END;\")",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257167860",
            "id": 257167860,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzE2Nzg2MA==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 26,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 204139758,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257167860",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257230663"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257230663"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> If multiple tests are run without forking, then this one will kill the whole test process on failure.\r\n\r\nBut the Cython testsuite actually deals with that quite nicely. It seems that tests are run in a subprocess.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T13:22:27Z",
            "diff_hunk": "@@ -0,0 +1,62 @@\n+# mode: run\n+\n+cimport cython\n+from libc.stdlib cimport abort\n+\n+\n+def recursion_test(f, int n=2**20):\n+    x = None\n+    cdef int i\n+    for i in range(n):\n+        x = f(x)\n+\n+\n+@cython.trashcan(True)\n+cdef class Recurse:\n+    \"\"\"\n+    >>> recursion_test(Recurse)\n+    \"\"\"\n+    cdef public attr\n+    cdef int deallocated\n+\n+    def __init__(self, x):\n+        self.attr = x\n+\n+    def __dealloc__(self):\n+        # Check that we're not being deallocated twice\n+        if self.deallocated:\n+            abort()  # Can't raise exceptions here...\n+        self.deallocated = 1\n+\n+\n+cdef class RecurseSub(Recurse):\n+    \"\"\"\n+    >>> recursion_test(RecurseSub)\n+    \"\"\"\n+    cdef int subdeallocated\n+\n+    def __dealloc__(self):\n+        # Check that we're not being deallocated twice\n+        if self.subdeallocated:\n+            abort()  # Can't raise exceptions here...",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257230663",
            "id": 257230663,
            "in_reply_to_id": 257158933,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzIzMDY2Mw==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 41,
            "path": "tests/run/trashcan.pyx",
            "position": null,
            "pull_request_review_id": 204235217,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257230663",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257232591"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257232591"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I took this from the `needs_gc` check and it also makes sense to me. If a base class needs the trashcan, then the subclass really should use the trashcan too. The whole point of the CPython PR is to skip the trashcan for subclasses. But then the trashcan support should be implemented by the subclass.\r\n\r\nIf you insist, I can of course change this, but I'd rather not.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T13:28:22Z",
            "diff_hunk": "@@ -2085,6 +2085,18 @@ def needs_gc(self):\n             return not self.parent_type.is_gc_simple\n         return False\n \n+    def needs_trashcan(self):\n+        # If the type or any of its base types have Python-valued\n+        # C attributes, then it should use the trashcan in tp_dealloc.\n+        if self.has_cyclic_pyobject_attrs and self.directives.get('trashcan', False):\n+            return True\n+        base_type = self.parent_type.base_type\n+        if base_type and base_type.scope is not None:\n+            return base_type.scope.needs_trashcan()\n+        elif self.parent_type.is_builtin_type:\n+            return not self.parent_type.is_gc_simple",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257232591",
            "id": 257232591,
            "in_reply_to_id": 257161841,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzIzMjU5MQ==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 13,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 204237523,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257232591",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257234125"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257234125"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> No need to scream. ;-) Just name it `PyTrashcan` or `PyTrashcanSupport`.\r\n\r\nI prefer to use `TRASHCAN` in the name because the upstream macros are also called `Py_TRASHCAN_SAFE_BEGIN` and `Py_TRASHCAN_SAFE_END`. It will be more confusing if Cython uses a different made-up name.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T13:33:05Z",
            "diff_hunk": "@@ -74,6 +74,41 @@ static int __Pyx_PyType_Ready(PyTypeObject *t) {\n     return r;\n }\n \n+/////////////// TRASHCAN.proto ///////////////",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257234125",
            "id": 257234125,
            "in_reply_to_id": 257153952,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzIzNDEyNQ==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 4,
            "path": "Cython/Utility/ExtensionTypes.c",
            "position": null,
            "pull_request_review_id": 204239440,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257234125",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257237516"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257237516"
                }
            },
            "author_association": "MEMBER",
            "body": "I was referring to the name of the utility code snippet, not the C macros (where upper case is normal). There is no precedent for an all-upper-case utility code name.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T13:43:33Z",
            "diff_hunk": "@@ -74,6 +74,41 @@ static int __Pyx_PyType_Ready(PyTypeObject *t) {\n     return r;\n }\n \n+/////////////// TRASHCAN.proto ///////////////",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257237516",
            "id": 257237516,
            "in_reply_to_id": 257153952,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzIzNzUxNg==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 4,
            "path": "Cython/Utility/ExtensionTypes.c",
            "position": null,
            "pull_request_review_id": 204243607,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257237516",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257237899"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257237899"
                }
            },
            "author_association": "MEMBER",
            "body": "Except when forking is disabled, e.g. under Windows or with `--debug`.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T13:44:40Z",
            "diff_hunk": "@@ -0,0 +1,62 @@\n+# mode: run\n+\n+cimport cython\n+from libc.stdlib cimport abort\n+\n+\n+def recursion_test(f, int n=2**20):\n+    x = None\n+    cdef int i\n+    for i in range(n):\n+        x = f(x)\n+\n+\n+@cython.trashcan(True)\n+cdef class Recurse:\n+    \"\"\"\n+    >>> recursion_test(Recurse)\n+    \"\"\"\n+    cdef public attr\n+    cdef int deallocated\n+\n+    def __init__(self, x):\n+        self.attr = x\n+\n+    def __dealloc__(self):\n+        # Check that we're not being deallocated twice\n+        if self.deallocated:\n+            abort()  # Can't raise exceptions here...\n+        self.deallocated = 1\n+\n+\n+cdef class RecurseSub(Recurse):\n+    \"\"\"\n+    >>> recursion_test(RecurseSub)\n+    \"\"\"\n+    cdef int subdeallocated\n+\n+    def __dealloc__(self):\n+        # Check that we're not being deallocated twice\n+        if self.subdeallocated:\n+            abort()  # Can't raise exceptions here...",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257237899",
            "id": 257237899,
            "in_reply_to_id": 257158933,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzIzNzg5OQ==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 41,
            "path": "tests/run/trashcan.pyx",
            "position": null,
            "pull_request_review_id": 204244088,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257237899",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257239228"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257239228"
                }
            },
            "author_association": "MEMBER",
            "body": "Sounds reasonable, but then we should at least emit a warning when a user writes\r\n```cython\r\n@cython.trashcan(False)\r\ncdef class sublist(list): ...\r\n```\r\nSilently ignoring directives seems unhelpful. You can use `None` as directive default to detect an explicit `False`.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T13:48:45Z",
            "diff_hunk": "@@ -2085,6 +2085,18 @@ def needs_gc(self):\n             return not self.parent_type.is_gc_simple\n         return False\n \n+    def needs_trashcan(self):\n+        # If the type or any of its base types have Python-valued\n+        # C attributes, then it should use the trashcan in tp_dealloc.\n+        if self.has_cyclic_pyobject_attrs and self.directives.get('trashcan', False):\n+            return True\n+        base_type = self.parent_type.base_type\n+        if base_type and base_type.scope is not None:\n+            return base_type.scope.needs_trashcan()\n+        elif self.parent_type.is_builtin_type:\n+            return not self.parent_type.is_gc_simple",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257239228",
            "id": 257239228,
            "in_reply_to_id": 257161841,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzIzOTIyOA==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 13,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 204245740,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257239228",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257242229"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257242229"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Silently ignoring directives seems unhelpful. You can use `None` as directive default to detect an explicit `False`.\r\n\r\nOK, I'll do this.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T13:57:11Z",
            "diff_hunk": "@@ -2085,6 +2085,18 @@ def needs_gc(self):\n             return not self.parent_type.is_gc_simple\n         return False\n \n+    def needs_trashcan(self):\n+        # If the type or any of its base types have Python-valued\n+        # C attributes, then it should use the trashcan in tp_dealloc.\n+        if self.has_cyclic_pyobject_attrs and self.directives.get('trashcan', False):\n+            return True\n+        base_type = self.parent_type.base_type\n+        if base_type and base_type.scope is not None:\n+            return base_type.scope.needs_trashcan()\n+        elif self.parent_type.is_builtin_type:\n+            return not self.parent_type.is_gc_simple",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257242229",
            "id": 257242229,
            "in_reply_to_id": 257161841,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzI0MjIyOQ==",
            "original_commit_id": "2c828f1046964a28750e39b6e039bd11f4e5e84e",
            "original_position": 13,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 204249417,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257242229",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2842#discussion_r257381092"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2842"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/257381092"
                }
            },
            "author_association": "MEMBER",
            "body": "Could this reset the `double_deallocations` counter? Otherwise, if one test fails, all subsequent tests will also fail, and it will be unclear where to look first.",
            "commit_id": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "created_at": "2019-02-15T20:28:28Z",
            "diff_hunk": "@@ -0,0 +1,144 @@\n+# mode: run\n+\n+cimport cython\n+\n+\n+# Count number of times an object was deallocated twice. This should remain 0.\n+cdef int double_deallocations = 0\n+def assert_no_double_deallocations():\n+    assert double_deallocations == 0",
            "html_url": "https://github.com/cython/cython/pull/2842#discussion_r257381092",
            "id": 257381092,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzM4MTA5Mg==",
            "original_commit_id": "fd46ccb6fb2a88c20c3ca9d6fcca274111f06e09",
            "original_position": 9,
            "path": "tests/run/trashcan.pyx",
            "position": null,
            "pull_request_review_id": 204426006,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2842",
            "updated_at": "2019-02-17T08:01:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/257381092",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2842/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c47c4ef735c4b7f1863b21bbe6f112b06c4aad05/comments",
            "commit": {
                "author": {
                    "date": "2019-02-14T09:02:41Z",
                    "email": "j.demeyer@ugent.be",
                    "name": "Jeroen Demeyer"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-02-17T07:58:28Z",
                    "email": "j.demeyer@ugent.be",
                    "name": "Jeroen Demeyer"
                },
                "message": "@cython.trashcan directive to enable the Python trashcan for deallocations",
                "tree": {
                    "sha": "d9e4d3773b8721538a43eb7ddac7c970bd23d67b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d9e4d3773b8721538a43eb7ddac7c970bd23d67b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            },
            "html_url": "https://github.com/cython/cython/commit/c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "node_id": "MDY6Q29tbWl0Mjk4NTcwMzE6YzQ3YzRlZjczNWM0YjdmMTg2M2IyMWJiZTZmMTEyYjA2YzRhYWQwNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d8e90e025ca4319102c38e423385db7d57b44a03",
                    "sha": "d8e90e025ca4319102c38e423385db7d57b44a03",
                    "url": "https://api.github.com/repos/cython/cython/commits/d8e90e025ca4319102c38e423385db7d57b44a03"
                }
            ],
            "sha": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
            "url": "https://api.github.com/repos/cython/cython/commits/c47c4ef735c4b7f1863b21bbe6f112b06c4aad05"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/2842/commits",
    "created_at": "2019-02-14T09:59:26Z",
    "diff_url": "https://github.com/cython/cython/pull/2842.diff",
    "head": {
        "label": "jdemeyer:trashcan",
        "ref": "trashcan",
        "repo": {
            "archive_url": "https://api.github.com/repos/jdemeyer/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/jdemeyer/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/jdemeyer/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/jdemeyer/cython/branches{/branch}",
            "clone_url": "https://github.com/jdemeyer/cython.git",
            "collaborators_url": "https://api.github.com/repos/jdemeyer/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/jdemeyer/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/jdemeyer/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/jdemeyer/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/jdemeyer/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/jdemeyer/cython/contributors",
            "created_at": "2015-01-26T10:54:42Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/jdemeyer/cython/deployments",
            "description": "A Python to C compiler",
            "downloads_url": "https://api.github.com/repos/jdemeyer/cython/downloads",
            "events_url": "https://api.github.com/repos/jdemeyer/cython/events",
            "fork": true,
            "forks": 2,
            "forks_count": 2,
            "forks_url": "https://api.github.com/repos/jdemeyer/cython/forks",
            "full_name": "jdemeyer/cython",
            "git_commits_url": "https://api.github.com/repos/jdemeyer/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/jdemeyer/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/jdemeyer/cython/git/tags{/sha}",
            "git_url": "git://github.com/jdemeyer/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/jdemeyer/cython/hooks",
            "html_url": "https://github.com/jdemeyer/cython",
            "id": 29857031,
            "issue_comment_url": "https://api.github.com/repos/jdemeyer/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/jdemeyer/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/jdemeyer/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/jdemeyer/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/jdemeyer/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/jdemeyer/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/jdemeyer/cython/merges",
            "milestones_url": "https://api.github.com/repos/jdemeyer/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyOTg1NzAzMQ==",
            "notifications_url": "https://api.github.com/repos/jdemeyer/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/jdemeyer/cython/pulls{/number}",
            "pushed_at": "2019-02-19T12:50:48Z",
            "releases_url": "https://api.github.com/repos/jdemeyer/cython/releases{/id}",
            "size": 54092,
            "ssh_url": "git@github.com:jdemeyer/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/jdemeyer/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/jdemeyer/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/jdemeyer/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/jdemeyer/cython/subscription",
            "svn_url": "https://github.com/jdemeyer/cython",
            "tags_url": "https://api.github.com/repos/jdemeyer/cython/tags",
            "teams_url": "https://api.github.com/repos/jdemeyer/cython/teams",
            "trees_url": "https://api.github.com/repos/jdemeyer/cython/git/trees{/sha}",
            "updated_at": "2018-10-22T18:38:17Z",
            "url": "https://api.github.com/repos/jdemeyer/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
            "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
            "followers_url": "https://api.github.com/users/jdemeyer/followers",
            "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/jdemeyer",
            "id": 3625785,
            "login": "jdemeyer",
            "node_id": "MDQ6VXNlcjM2MjU3ODU=",
            "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
            "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
            "repos_url": "https://api.github.com/users/jdemeyer/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/jdemeyer"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/2842",
    "id": 253007032,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/2842",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "locked": false,
    "merge_commit_sha": "f781880b6780117660b2026caadf4a6d7905722f",
    "merged_at": "2019-02-18T19:22:51Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 36,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 17,
        "state": "open",
        "title": "3.0",
        "updated_at": "2019-02-19T20:42:41Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUzMDA3MDMy",
    "number": 2842,
    "patch_url": "https://github.com/cython/cython/pull/2842.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/2842/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/c47c4ef735c4b7f1863b21bbe6f112b06c4aad05",
    "title": "@cython.trashcan directive to enable the Python trashcan for deallocations",
    "updated_at": "2019-02-19T15:26:08Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/2842",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
        "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
        "followers_url": "https://api.github.com/users/jdemeyer/followers",
        "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
        "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jdemeyer",
        "id": 3625785,
        "login": "jdemeyer",
        "node_id": "MDQ6VXNlcjM2MjU3ODU=",
        "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
        "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
        "repos_url": "https://api.github.com/users/jdemeyer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jdemeyer"
    }
}