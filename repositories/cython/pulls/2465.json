{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/2465/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2465/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/2465"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/2465"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2465/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2465"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/ce63bebc8e54a16f4e5f581a4c570c17e9814884"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 711,
            "forks_count": 711,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": null,
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 558,
            "open_issues_count": 558,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2018-08-15T13:59:13Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 51903,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 3373,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2018-08-15T14:25:09Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 3373,
            "watchers_count": 3373
        },
        "sha": "cffb63d39c74c2c3ee0e3cc077c5a770b1818c21",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "I think that users spend quite a bit of time understanding the convolution in this tutorial. I take here a very simple function so that readers spend close to 100% of their time understanding the Cython syntax, and not the example in itself. \r\n\r\nThe function I chose is just an elementwise operation which can be expressed in a NumPy one-liner. \r\n\r\nOther goodies coming with this PR:\r\n\r\n* I added a notebook (with a link to it) so that users can just download it and run it rather than spend time figuring out how to compile Cython code.\r\n* I added a **Using multiple threads** section with an example of `prange`.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r199938098"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/199938098"
                }
            },
            "author_association": "MEMBER",
            "body": "This was my main concern when I read that you changed the example. If it's too simple, it might be easier to understand, but it's also less convincing when the speed-up is low and the code overhead very high.\r\nI'll take a deeper look when I have more time.",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-07-03T20:18:49Z",
            "diff_hunk": "@@ -138,43 +138,52 @@ Python by using a normal ``import yourmod`` statement.\n The first Cython program\n ==========================\n \n-The code below does 2D discrete convolution of an image with a filter (and I'm\n-sure you can do better!, let it serve for demonstration purposes). It is both\n-valid Python and valid Cython code. I'll refer to it as both\n-:file:`convolve_py.py` for the Python version and :file:`convolve_cy.pyx` for the\n-Cython version -- Cython uses \".pyx\" as its file suffix.\n+You can easily execute the code of this tutorial by\n+downloading `the Jupyter notebook <https://github.com/cython/cython/blob/master/docs/examples/userguide/numpy_tutorial/numpy_cython.ipynb>`_.\n \n-.. literalinclude:: ../../examples/userguide/numpy_tutorial/convolve_py.py\n-    :linenos:\n+The code below does the equivalent of this function in numpy::\n \n-This should be compiled to produce :file:`convolve_cy.so` (for Linux systems). We\n+    def compute_np(array_1, array_2, a, b, c):\n+        return np.clip(array_1, 2, 10) * a + array_2 * b + c\n+\n+We'll say that ``array_1`` and ``array_2`` are 2D NumPy arrays of integer type and\n+``a``, ``b`` and ``c`` are three Python integers.\n+\n+This function uses NumPy and is already really fast, so it might be a bit overkill\n+to do it again with Cython. This is for demonstration purposes. Nonetheless, we\n+will show that we achieve a better speed and memory efficiency than NumPy at the cost of more verbosity.",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r199938098",
            "id": 199938098,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkzODA5OA==",
            "original_commit_id": "2054772371408ca1fcd3f879635e1af0faa9196b",
            "original_position": 25,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 24,
            "pull_request_review_id": 134155194,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-07-23T20:52:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/199938098",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r200074325"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/200074325"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I see your point, we should then do some research to see if it's worth it. \r\n\r\nI'll run some numbers and see the speedups in both cases against a pure python version, and an off-the-shelf library (I'm thinking `scipy.signal.convolve2d` for example).",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-07-04T10:01:06Z",
            "diff_hunk": "@@ -138,43 +138,52 @@ Python by using a normal ``import yourmod`` statement.\n The first Cython program\n ==========================\n \n-The code below does 2D discrete convolution of an image with a filter (and I'm\n-sure you can do better!, let it serve for demonstration purposes). It is both\n-valid Python and valid Cython code. I'll refer to it as both\n-:file:`convolve_py.py` for the Python version and :file:`convolve_cy.pyx` for the\n-Cython version -- Cython uses \".pyx\" as its file suffix.\n+You can easily execute the code of this tutorial by\n+downloading `the Jupyter notebook <https://github.com/cython/cython/blob/master/docs/examples/userguide/numpy_tutorial/numpy_cython.ipynb>`_.\n \n-.. literalinclude:: ../../examples/userguide/numpy_tutorial/convolve_py.py\n-    :linenos:\n+The code below does the equivalent of this function in numpy::\n \n-This should be compiled to produce :file:`convolve_cy.so` (for Linux systems). We\n+    def compute_np(array_1, array_2, a, b, c):\n+        return np.clip(array_1, 2, 10) * a + array_2 * b + c\n+\n+We'll say that ``array_1`` and ``array_2`` are 2D NumPy arrays of integer type and\n+``a``, ``b`` and ``c`` are three Python integers.\n+\n+This function uses NumPy and is already really fast, so it might be a bit overkill\n+to do it again with Cython. This is for demonstration purposes. Nonetheless, we\n+will show that we achieve a better speed and memory efficiency than NumPy at the cost of more verbosity.",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r200074325",
            "id": 200074325,
            "in_reply_to_id": 199938098,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDA3NDMyNQ==",
            "original_commit_id": "2054772371408ca1fcd3f879635e1af0faa9196b",
            "original_position": 25,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 24,
            "pull_request_review_id": 134316453,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-07-23T20:52:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/200074325",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
                "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
                "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
                "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gabrieldemarmiesse",
                "id": 12891691,
                "login": "gabrieldemarmiesse",
                "node_id": "MDQ6VXNlcjEyODkxNjkx",
                "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
                "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
                "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gabrieldemarmiesse"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209420945"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209420945"
                }
            },
            "author_association": "MEMBER",
            "body": "\"presents\", better: \"computes\"",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:33:38Z",
            "diff_hunk": "@@ -138,14 +138,27 @@ Python by using a normal ``import yourmod`` statement.\n The first Cython program\n ==========================\n \n-The code below does 2D discrete convolution of an image with a filter (and I'm\n-sure you can do better!, let it serve for demonstration purposes). It is both\n-valid Python and valid Cython code. I'll refer to it as both\n-:file:`convolve_py.py` for the Python version and :file:`convolve_cy.pyx` for the\n-Cython version -- Cython uses \".pyx\" as its file suffix.\n+You can easily execute the code of this tutorial by\n+downloading `the Jupyter notebook <https://github.com/cython/cython/blob/master/docs/examples/userguide/numpy_tutorial/numpy_cython.ipynb>`_.\n \n-.. literalinclude:: ../../examples/userguide/numpy_tutorial/convolve_py.py\n-    :linenos:\n+The code below does the equivalent of this function in numpy::\n+\n+    def compute_np(array_1, array_2, a, b, c):\n+        return np.clip(array_1, 2, 10) * a + array_2 * b + c\n+\n+We'll say that ``array_1`` and ``array_2`` are 2D NumPy arrays of integer type and\n+``a``, ``b`` and ``c`` are three Python integers.\n+\n+This function uses NumPy and is already really fast, so it might be a bit overkill\n+to do it again with Cython. This is for demonstration purposes. Nonetheless, we\n+will show that we achieve a better speed and memory efficiency than NumPy at the cost of more verbosity.\n+\n+This code present the function with the loops over the two dimensions being unrolled.",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209420945",
            "id": 209420945,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMDk0NQ==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 26,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 26,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209420945",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209420957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209420957"
                }
            },
            "author_association": "MEMBER",
            "body": "Although it is worth noting that Cython can also compile `.py` files.",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:34:23Z",
            "diff_hunk": "@@ -138,14 +138,27 @@ Python by using a normal ``import yourmod`` statement.\n The first Cython program\n ==========================\n \n-The code below does 2D discrete convolution of an image with a filter (and I'm\n-sure you can do better!, let it serve for demonstration purposes). It is both\n-valid Python and valid Cython code. I'll refer to it as both\n-:file:`convolve_py.py` for the Python version and :file:`convolve_cy.pyx` for the\n-Cython version -- Cython uses \".pyx\" as its file suffix.\n+You can easily execute the code of this tutorial by\n+downloading `the Jupyter notebook <https://github.com/cython/cython/blob/master/docs/examples/userguide/numpy_tutorial/numpy_cython.ipynb>`_.\n \n-.. literalinclude:: ../../examples/userguide/numpy_tutorial/convolve_py.py\n-    :linenos:\n+The code below does the equivalent of this function in numpy::\n+\n+    def compute_np(array_1, array_2, a, b, c):\n+        return np.clip(array_1, 2, 10) * a + array_2 * b + c\n+\n+We'll say that ``array_1`` and ``array_2`` are 2D NumPy arrays of integer type and\n+``a``, ``b`` and ``c`` are three Python integers.\n+\n+This function uses NumPy and is already really fast, so it might be a bit overkill\n+to do it again with Cython. This is for demonstration purposes. Nonetheless, we\n+will show that we achieve a better speed and memory efficiency than NumPy at the cost of more verbosity.\n+\n+This code present the function with the loops over the two dimensions being unrolled.\n+It is both valid Python and valid Cython code. I'll refer to it as both\n+:file:`compute_py.py` for the Python version and :file:`compute_cy.pyx` for the\n+Cython version -- Cython uses ``.pyx`` as its file suffix.",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209420957",
            "id": 209420957,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMDk1Nw==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 29,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 29,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209420957",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209421040"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209421040"
                }
            },
            "author_association": "MEMBER",
            "body": "\"in the following lines\"",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:38:38Z",
            "diff_hunk": "@@ -193,44 +202,46 @@ Adding types\n =============\n \n To add types we use custom Cython syntax, so we are now breaking Python source\n-compatibility. Here's :file:`convolve_typed.pyx`. *Read the comments!*\n+compatibility. Here's :file:`compute_typed.pyx`. *Read the comments!*\n \n-.. literalinclude:: ../../examples/userguide/numpy_tutorial/convolve_typed.pyx\n-    :linenos:\n+.. literalinclude:: ../../examples/userguide/numpy_tutorial/compute_typed.pyx\n \n-.. figure:: convolve_types_html.png\n+.. figure:: compute_typed_html.jpg\n \n-At this point, have a look at the generated C code for :file:`convolve_cy.pyx` and\n-:file:`convolve_typed.pyx`. Click on the lines to expand them and see corresponding C.\n+At this point, have a look at the generated C code for :file:`compute_cy.pyx` and\n+:file:`compute_typed.pyx`. Click on the lines to expand them and see corresponding C.\n \n-Especially have a look at the ``for-loops``: In :file:`convolve_cy.c`, these are ~20 lines\n-of C code to set up while in :file:`convolve_typed.c` a normal C for loop is used.\n+Especially have a look at the ``for-loops``: In :file:`compute_cy.c`, these are ~20 lines\n+of C code to set up while in :file:`compute_typed.c` a normal C for loop is used.\n \n After building this and continuing my (very informal) benchmarks, I get:\n \n .. sourcecode:: ipython\n \n-    In [22]: %timeit convolve_typed.naive_convolve(f, g)\n-    55.8 s ± 199 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n+    In [13]: %timeit compute_typed.compute(array_1, array_2, a, b, c)\n+    10.1 s ± 50.9 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n \n-So in the end, adding types make the Cython code slower?\n+So adding types does make the code faster, but nowhere\n+near the speed of NumPy?\n \n-What happened is that most of the time spend in this code is spent on line\n-54. ::\n+What happened is that most of the time spend in this code is spent those lines,",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209421040",
            "id": 209421040,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTA0MA==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 128,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 128,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209421040",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209421090"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209421090"
                }
            },
            "author_association": "MEMBER",
            "body": "\"because we can execute the operations in a single run over the data.\"",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:41:57Z",
            "diff_hunk": "@@ -315,15 +326,18 @@ information.\n \n .. sourcecode:: ipython\n \n-    In [23]: %timeit convolve_index.naive_convolve(f, g)\n-    19.8 ms ± 299 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n+    In [23]: %timeit compute_index.compute(array_1, array_2, a, b, c)\n+    6.04 ms ± 12.2 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n \n-We're now 800 times faster than the interpreted Python version.\n+We're now faster than the NumPy version, not by much (1.3x). NumPy is really well written,\n+but does not performs operation lazily, meaning a lot\n+of back and forth in memory. Our version is very memory efficient and\n+cache friendly because we know the operations in advance.",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209421090",
            "id": 209421090,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTA5MA==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 224,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 224,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209421090",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209421110"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209421110"
                }
            },
            "author_association": "MEMBER",
            "body": "\", resulting in a lot of intermediate copy operations in memory.\"",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:43:29Z",
            "diff_hunk": "@@ -315,15 +326,18 @@ information.\n \n .. sourcecode:: ipython\n \n-    In [23]: %timeit convolve_index.naive_convolve(f, g)\n-    19.8 ms ± 299 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n+    In [23]: %timeit compute_index.compute(array_1, array_2, a, b, c)\n+    6.04 ms ± 12.2 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n \n-We're now 800 times faster than the interpreted Python version.\n+We're now faster than the NumPy version, not by much (1.3x). NumPy is really well written,\n+but does not performs operation lazily, meaning a lot",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209421110",
            "id": 209421110,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTExMA==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 222,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 222,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209421110",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209421152"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209421152"
                }
            },
            "author_association": "MEMBER",
            "body": "\"constrains the usage of your functions as it rejects array slices as input.\"",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:45:24Z",
            "diff_hunk": "@@ -350,8 +364,9 @@ you have to declare the memoryview like this::\n \n     cdef int [::1, :, :] a\n \n-If all this makes no sense to you, you can skip this part, the performance gains are\n-not that important. If you still want to understand what contiguous arrays are\n+If all this makes no sense to you, you can skip this part, declaring\n+arrays as contiguous constrain the usage of your function.",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209421152",
            "id": 209421152,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTE1Mg==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 241,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 241,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209421152",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209421209"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209421209"
                }
            },
            "author_association": "MEMBER",
            "body": "This is not true. It should be fixed at compile time. Probably worth investigating why this really is slower.",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:49:16Z",
            "diff_hunk": "@@ -417,31 +432,55 @@ know what NumPy data type we should use for our output array.\n \n In this case, our function now works for ints, doubles and floats.\n \n-.. literalinclude:: ../../examples/userguide/numpy_tutorial/convolve_fused_types.pyx\n-    :linenos:\n+.. literalinclude:: ../../examples/userguide/numpy_tutorial/compute_fused_types.pyx\n \n We can check that the output type is the right one::\n \n-    >>>naive_convolve_fused_types(f, g).dtype\n+    >>>compute(array_1, array_2, a, b, c).dtype\n     dtype('int32')\n-    >>>naive_convolve_fused_types(f.astype(np.double), g.astype(np.double)).dtype\n+    >>>compute(array_1.astype(np.double), array_2.astype(np.double), a, b, c).dtype\n     dtype('float64')\n \n We now do a speed test:\n \n .. sourcecode:: ipython\n \n-    In [25]: %timeit convolve_fused_types.naive_convolve(f, g)\n-    20 ms ± 392 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n+    In [25]: %timeit compute_fused_types.compute(array_1, array_2, a, b, c)\n+    6.17 ms ± 164 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n+\n+We're a bit slower than before, because of the right call to the clip function\n+must be found at runtime and adds a bit of overhead.",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209421209",
            "id": 209421209,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTIwOQ==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 317,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 317,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209421209",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209421216"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209421216"
                }
            },
            "author_association": "MEMBER",
            "body": "This should read use the `is` operator.",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:49:41Z",
            "diff_hunk": "@@ -0,0 +1,44 @@\n+# cython: infer_types=True\r\n+import numpy as np\r\n+cimport cython\r\n+\r\n+ctypedef fused my_type:\r\n+    int\r\n+    double\r\n+    long\r\n+\r\n+\r\n+cdef my_type clip(my_type a, my_type min_value, my_type max_value):\r\n+    return min(max(a, min_value), max_value)\r\n+\r\n+\r\n+@cython.boundscheck(False)\r\n+@cython.wraparound(False)\r\n+def compute(my_type[:, ::1] array_1, my_type[:, ::1] array_2, my_type a, my_type b, my_type c):\r\n+     \r\n+    x_max = array_1.shape[0]\r\n+    y_max = array_1.shape[1]\r\n+    \r\n+    assert tuple(array_1.shape) == tuple(array_2.shape)\r\n+    \r\n+    if my_type == int:\r",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209421216",
            "id": 209421216,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTIxNg==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 24,
            "path": "docs/examples/userguide/numpy_tutorial/compute_fused_types.pyx",
            "position": 24,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209421216",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209421288"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209421288"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd rather see these passed as `distutils` compiler directive comments in the file.",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:53:21Z",
            "diff_hunk": "@@ -417,31 +432,55 @@ know what NumPy data type we should use for our output array.\n \n In this case, our function now works for ints, doubles and floats.\n \n-.. literalinclude:: ../../examples/userguide/numpy_tutorial/convolve_fused_types.pyx\n-    :linenos:\n+.. literalinclude:: ../../examples/userguide/numpy_tutorial/compute_fused_types.pyx\n \n We can check that the output type is the right one::\n \n-    >>>naive_convolve_fused_types(f, g).dtype\n+    >>>compute(array_1, array_2, a, b, c).dtype\n     dtype('int32')\n-    >>>naive_convolve_fused_types(f.astype(np.double), g.astype(np.double)).dtype\n+    >>>compute(array_1.astype(np.double), array_2.astype(np.double), a, b, c).dtype\n     dtype('float64')\n \n We now do a speed test:\n \n .. sourcecode:: ipython\n \n-    In [25]: %timeit convolve_fused_types.naive_convolve(f, g)\n-    20 ms ± 392 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n+    In [25]: %timeit compute_fused_types.compute(array_1, array_2, a, b, c)\n+    6.17 ms ± 164 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n+\n+We're a bit slower than before, because of the right call to the clip function\n+must be found at runtime and adds a bit of overhead.\n+\n+Using multiple threads\n+======================\n+\n+Cython have support for OpenMP. It have also some nice wrappers around it,\n+like the function :func:`prange`. You can see more information about Cython and\n+parralelism in :ref:`parallel`. Since we do elementwise operations, we can easily\n+distribute the work among multiple threads. It's important not to forget to pass the\n+correct arguments to the compiler to enable OpenMP. When using the Jupyter notebook,\n+you should use the cell magic like this::\n+\n+    %%cython --compile-args=-fopenmp --link-args=-fopenmp --force",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209421288",
            "id": 209421288,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTI4OA==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 329,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 329,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209421288",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2465#discussion_r209421379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2465"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/209421379"
                }
            },
            "author_association": "MEMBER",
            "body": "This would probably improve further with larger arrays and/or more CPU cores. 4ms are already so short that the thread startup time and all that becomes visible overhead. I understand that it's not easy to have this example scale up because the Python code runtimes are already half a minute, but maybe 5x the array size would give more impressive numbers?",
            "commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "created_at": "2018-08-11T08:57:36Z",
            "diff_hunk": "@@ -417,31 +432,55 @@ know what NumPy data type we should use for our output array.\n \n In this case, our function now works for ints, doubles and floats.\n \n-.. literalinclude:: ../../examples/userguide/numpy_tutorial/convolve_fused_types.pyx\n-    :linenos:\n+.. literalinclude:: ../../examples/userguide/numpy_tutorial/compute_fused_types.pyx\n \n We can check that the output type is the right one::\n \n-    >>>naive_convolve_fused_types(f, g).dtype\n+    >>>compute(array_1, array_2, a, b, c).dtype\n     dtype('int32')\n-    >>>naive_convolve_fused_types(f.astype(np.double), g.astype(np.double)).dtype\n+    >>>compute(array_1.astype(np.double), array_2.astype(np.double), a, b, c).dtype\n     dtype('float64')\n \n We now do a speed test:\n \n .. sourcecode:: ipython\n \n-    In [25]: %timeit convolve_fused_types.naive_convolve(f, g)\n-    20 ms ± 392 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n+    In [25]: %timeit compute_fused_types.compute(array_1, array_2, a, b, c)\n+    6.17 ms ± 164 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n+\n+We're a bit slower than before, because of the right call to the clip function\n+must be found at runtime and adds a bit of overhead.\n+\n+Using multiple threads\n+======================\n+\n+Cython have support for OpenMP. It have also some nice wrappers around it,\n+like the function :func:`prange`. You can see more information about Cython and\n+parralelism in :ref:`parallel`. Since we do elementwise operations, we can easily\n+distribute the work among multiple threads. It's important not to forget to pass the\n+correct arguments to the compiler to enable OpenMP. When using the Jupyter notebook,\n+you should use the cell magic like this::\n+\n+    %%cython --compile-args=-fopenmp --link-args=-fopenmp --force\n+\n+The GIL must be released (see :ref:`Releasing the GIL <nogil>`), so this is why we\n+declare our :func:`clip` function ``nogil``.\n+\n+.. literalinclude:: ../../examples/userguide/numpy_tutorial/compute_prange.pyx\n+\n+We can have substantial speed gains for minimal effort:\n+\n+.. sourcecode:: ipython\n+\n+    In [25]: %timeit compute_prange.compute(array_1, array_2, a, b, c)\n+    3.55 ms ± 80.6 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n \n-We're still around 800 times faster than the interpreted Python version.\n+We're now 7858 times faster than the pure Python version and 2.3 times faster\n+than NumPy!",
            "html_url": "https://github.com/cython/cython/pull/2465#discussion_r209421379",
            "id": 209421379,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTM3OQ==",
            "original_commit_id": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "original_position": 345,
            "path": "docs/src/userguide/numpy_tutorial.rst",
            "position": 345,
            "pull_request_review_id": 145440809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2465",
            "updated_at": "2018-08-11T08:59:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/209421379",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2465/comments",
    "commit_data": [
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2054772371408ca1fcd3f879635e1af0faa9196b/comments",
            "commit": {
                "author": {
                    "date": "2018-07-02T15:55:59Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-07-03T08:58:42Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "message": "Changed the numpy tutorial to make is faster to understand. Added prange example.",
                "tree": {
                    "sha": "f34902fb291fc91d8c7c8f295b871dc816e3c79c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f34902fb291fc91d8c7c8f295b871dc816e3c79c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2054772371408ca1fcd3f879635e1af0faa9196b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/2054772371408ca1fcd3f879635e1af0faa9196b",
            "node_id": "MDY6Q29tbWl0MTI0NzQ0NjI4OjIwNTQ3NzIzNzE0MDhjYTFmY2QzZjg3OTYzNWUxYWYwZmFhOTE5NmI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/084a25f55d0b4cf8b4c3cd496ec57bb3e2f57f71",
                    "sha": "084a25f55d0b4cf8b4c3cd496ec57bb3e2f57f71",
                    "url": "https://api.github.com/repos/cython/cython/commits/084a25f55d0b4cf8b4c3cd496ec57bb3e2f57f71"
                }
            ],
            "sha": "2054772371408ca1fcd3f879635e1af0faa9196b",
            "url": "https://api.github.com/repos/cython/cython/commits/2054772371408ca1fcd3f879635e1af0faa9196b"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c03b0bcac47f16c04a0948f21f079de9a6c0b6e1/comments",
            "commit": {
                "author": {
                    "date": "2018-07-05T16:26:28Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-07-05T16:27:54Z",
                    "email": "gabriel.demarmiesse@teraki.com",
                    "name": "gabrieldemarmiesse"
                },
                "message": "docs: Emphasized the speedups of Cython vs NumPy in both the notebook and the docs.",
                "tree": {
                    "sha": "2ad78306cf77f179a6c482f2a07d7a3a6acb6769",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2ad78306cf77f179a6c482f2a07d7a3a6acb6769"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c03b0bcac47f16c04a0948f21f079de9a6c0b6e1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/c03b0bcac47f16c04a0948f21f079de9a6c0b6e1",
            "node_id": "MDY6Q29tbWl0MTI0NzQ0NjI4OmMwM2IwYmNhYzQ3ZjE2YzA0YTA5NDhmMjFmMDc5ZGU5YTZjMGI2ZTE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2054772371408ca1fcd3f879635e1af0faa9196b",
                    "sha": "2054772371408ca1fcd3f879635e1af0faa9196b",
                    "url": "https://api.github.com/repos/cython/cython/commits/2054772371408ca1fcd3f879635e1af0faa9196b"
                }
            ],
            "sha": "c03b0bcac47f16c04a0948f21f079de9a6c0b6e1",
            "url": "https://api.github.com/repos/cython/cython/commits/c03b0bcac47f16c04a0948f21f079de9a6c0b6e1"
        },
        {
            "author": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
                "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
                "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
                "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gabrieldemarmiesse",
                "id": 12891691,
                "login": "gabrieldemarmiesse",
                "node_id": "MDQ6VXNlcjEyODkxNjkx",
                "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
                "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
                "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gabrieldemarmiesse"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ce63bebc8e54a16f4e5f581a4c570c17e9814884/comments",
            "commit": {
                "author": {
                    "date": "2018-07-23T20:52:08Z",
                    "email": "gabrieldemarmiesse@gmail.com",
                    "name": "Gabriel de Marmiesse"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-07-23T20:52:08Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into simplifying_memoryview_numpy",
                "tree": {
                    "sha": "f116cde598d70e95019f16d3ccddcdddfad24e86",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f116cde598d70e95019f16d3ccddcdddfad24e86"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ce63bebc8e54a16f4e5f581a4c570c17e9814884",
                "verification": {
                    "payload": "tree f116cde598d70e95019f16d3ccddcdddfad24e86\nparent c03b0bcac47f16c04a0948f21f079de9a6c0b6e1\nparent cffb63d39c74c2c3ee0e3cc077c5a770b1818c21\nauthor Gabriel de Marmiesse <gabrieldemarmiesse@gmail.com> 1532379128 +0200\ncommitter GitHub <noreply@github.com> 1532379128 +0200\n\nMerge branch 'master' into simplifying_memoryview_numpy",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbVj/4CRBK7hj4Ov3rIwAAdHIIAKnj10WmuQ9mmojVL2UHV8e4\ngPywa61a4Y2Ip/zb0WWCvruHCf3/m8r3MIMRSGvnVF2P7p7GG/ZAvOIy33ZcjNoy\nMYLQ3Krp+ZEh/vkNXoaHqubjQlGA14BA2Msh91slA4E2qITXGnRqen9KfE1b3Qer\nyOY37Z6puud/ORp3MV6q1t4L7uwqHVLotAKV6PPaCw0AMrfLlzo5u81CEajtFeE3\n5CrxpxBWE+M966oaAfaZnb/wnFQEom+3n9BnE71JqQXhwg0yH4NR9yRyKajDa7qz\n/8QIkESIBPKH2WVZZFpQ+lwqoI6DZhtfFpNC8Uq2R2jdCasBxd/1G/T8HvOxjIA=\n=EdKV\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "node_id": "MDY6Q29tbWl0MTI0NzQ0NjI4OmNlNjNiZWJjOGU1NGExNmY0ZTVmNTgxYTRjNTcwYzE3ZTk4MTQ4ODQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c03b0bcac47f16c04a0948f21f079de9a6c0b6e1",
                    "sha": "c03b0bcac47f16c04a0948f21f079de9a6c0b6e1",
                    "url": "https://api.github.com/repos/cython/cython/commits/c03b0bcac47f16c04a0948f21f079de9a6c0b6e1"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/cffb63d39c74c2c3ee0e3cc077c5a770b1818c21",
                    "sha": "cffb63d39c74c2c3ee0e3cc077c5a770b1818c21",
                    "url": "https://api.github.com/repos/cython/cython/commits/cffb63d39c74c2c3ee0e3cc077c5a770b1818c21"
                }
            ],
            "sha": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
            "url": "https://api.github.com/repos/cython/cython/commits/ce63bebc8e54a16f4e5f581a4c570c17e9814884"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/2465/commits",
    "created_at": "2018-07-02T22:01:28Z",
    "diff_url": "https://github.com/cython/cython/pull/2465.diff",
    "head": {
        "label": "gabrieldemarmiesse:simplifying_memoryview_numpy",
        "ref": "simplifying_memoryview_numpy",
        "repo": {
            "archive_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/branches{/branch}",
            "clone_url": "https://github.com/gabrieldemarmiesse/cython.git",
            "collaborators_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/contributors",
            "created_at": "2018-03-11T10:14:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "downloads_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/downloads",
            "events_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/forks",
            "full_name": "gabrieldemarmiesse/cython",
            "git_commits_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/tags{/sha}",
            "git_url": "git://github.com/gabrieldemarmiesse/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/hooks",
            "html_url": "https://github.com/gabrieldemarmiesse/cython",
            "id": 124744628,
            "issue_comment_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": null,
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/merges",
            "milestones_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ3NDQ2Mjg=",
            "notifications_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
                "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
                "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
                "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gabrieldemarmiesse",
                "id": 12891691,
                "login": "gabrieldemarmiesse",
                "node_id": "MDQ6VXNlcjEyODkxNjkx",
                "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
                "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
                "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gabrieldemarmiesse"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/pulls{/number}",
            "pushed_at": "2018-08-12T10:36:54Z",
            "releases_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/releases{/id}",
            "size": 51918,
            "ssh_url": "git@github.com:gabrieldemarmiesse/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/subscription",
            "svn_url": "https://github.com/gabrieldemarmiesse/cython",
            "tags_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/tags",
            "teams_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/teams",
            "trees_url": "https://api.github.com/repos/gabrieldemarmiesse/cython/git/trees{/sha}",
            "updated_at": "2018-08-12T10:16:19Z",
            "url": "https://api.github.com/repos/gabrieldemarmiesse/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "ce63bebc8e54a16f4e5f581a4c570c17e9814884",
        "user": {
            "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
            "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
            "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
            "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
            "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gabrieldemarmiesse",
            "id": 12891691,
            "login": "gabrieldemarmiesse",
            "node_id": "MDQ6VXNlcjEyODkxNjkx",
            "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
            "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
            "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gabrieldemarmiesse"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/2465",
    "id": 198800602,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/2465",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "0371b2d39ea9b3d644373ff9c6ce082fec87cc53",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4ODAwNjAy",
    "number": 2465,
    "patch_url": "https://github.com/cython/cython/pull/2465.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/2465/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/ce63bebc8e54a16f4e5f581a4c570c17e9814884",
    "title": "Changed the numpy tutorial to make is faster to understand.",
    "updated_at": "2018-08-15T04:57:30Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/2465",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
        "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
        "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
        "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
        "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gabrieldemarmiesse",
        "id": 12891691,
        "login": "gabrieldemarmiesse",
        "node_id": "MDQ6VXNlcjEyODkxNjkx",
        "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
        "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
        "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gabrieldemarmiesse"
    }
}