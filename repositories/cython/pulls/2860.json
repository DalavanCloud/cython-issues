{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/2860/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2860/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/2860"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/2860"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2860/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2860"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/5dc832d3e298534e159601b69f0956a2f6963e16"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 807,
            "forks_count": 807,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 623,
            "open_issues_count": 623,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2019-02-27T12:24:01Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 54663,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 3866,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2019-02-27T09:04:19Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 3866,
            "watchers_count": 3866
        },
        "sha": "b07ee5064d3862cabfb075a1f6c7e6386e1c7ce5",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "@scoder \r\n\r\nImplementation for [issue 2579](https://github.com/cython/cython/issues/2579).\r\nAllowing statements such as:\r\n\r\n```\r\nwith nogil(numeric is int):\r\n  <some code>\r\n```\r\n\r\nwhich will either run inside a nogil block if condition is True, or will run without a nogil block if the condition is False.\r\n\r\nOriginal form still works the same (`with nogil: ...`).\r\n\r\n**Still missing: errors tests.**",
    "closed_at": "2019-02-26T18:41:22Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259569573"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259569573"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd spell this\r\n`child_attrs = [\"condition\"] + NogilTryFinallyStatNode.child_attrs`\r\nJust to avoid accidental inconsistencies in the future.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T07:25:53Z",
            "diff_hunk": "@@ -7794,10 +7794,12 @@ class GILStatNode(NogilTryFinallyStatNode):\n     #\n     #   state   string   'gil' or 'nogil'\n \n+    child_attrs = [\"body\", \"condition\", \"finally_clause\", \"finally_except_clause\"]",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259569573",
            "id": 259569573,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU2OTU3Mw==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 4,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 207099929,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259569573",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259569602"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259569602"
                }
            },
            "author_association": "MEMBER",
            "body": "typo (changing changing)",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T07:26:57Z",
            "diff_hunk": "@@ -4688,6 +4688,30 @@ def visit_ExprStatNode(self, node):\n             return None\n         return node\n \n+    def visit_GILStatNode(self, node):\n+        self.visitchildren(node)\n+        if node.condition is None:\n+            return node\n+\n+        if node.condition.has_constant_result():\n+            # Condition is True - Modify node to be a normal\n+            # GILStatNode with condition=None\n+            if node.condition.constant_result:\n+                node.condition = None\n+\n+            # Condition is False - the body of the GILStatNode\n+            # should run without changing changing the state of the gil",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259569602",
            "id": 259569602,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU2OTYwMg==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 16,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 207099929,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259569602",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259569644"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259569644"
                }
            },
            "author_association": "MEMBER",
            "body": "Nice. You could also use `node.condition.pos` instead of `node.pos` here, which then points directly to the non-constant condition.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T07:29:22Z",
            "diff_hunk": "@@ -2915,6 +2915,11 @@ def visit_FuncDefNode(self, node):\n         return node\n \n     def visit_GILStatNode(self, node):\n+        if node.condition is not None:\n+            error(node.pos, \"Non-constant condition in a \"\n+                            \"`with %s(<condition>)` statement\" % node.state)",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259569644",
            "id": 259569644,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU2OTY0NA==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 6,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 207099929,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259569644",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259569697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259569697"
                }
            },
            "author_association": "MEMBER",
            "body": "Note that this is not a function that _needs_ the GIL. It's one that _acquires_ the GIL itself, on entry. Just use a normal Python function instead.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T07:31:27Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259569697",
            "id": 259569697,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU2OTY5Nw==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 17,
            "path": "tests/run/nogil_conditional.pyx",
            "position": 17,
            "pull_request_review_id": 207099929,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259569697",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259569935"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259569935"
                }
            },
            "author_association": "MEMBER",
            "body": "`except 0` is a bit dangerous since `0` is also the default success value to return from a `cdef int` function when there is no explicit `return x`.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T07:39:47Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)\n+    return x\n+\n+\n+cdef int f_nogil(int x) nogil:\n+    cdef int y\n+    y = x + 10\n+    return y\n+\n+\n+cdef int f_gil(int x) with gil:\n+    cdef int y\n+    y = x + 100\n+    return y\n+\n+\n+cdef int with_gil_func() except 0 with gil:",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259569935",
            "id": 259569935,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU2OTkzNQ==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 33,
            "path": "tests/run/nogil_conditional.pyx",
            "position": null,
            "pull_request_review_id": 207099929,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259569935",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259570147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259570147"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this condition makes the test a bit boring, because it discards all nogil tests in the `int` case without even looking at them, so the two alternative cases are not actually tested. Maybe you could add a third fused types test that tries to actually use the GIL differently based on the type?",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T07:49:38Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)\n+    return x\n+\n+\n+cdef int f_nogil(int x) nogil:\n+    cdef int y\n+    y = x + 10\n+    return y\n+\n+\n+cdef int f_gil(int x) with gil:\n+    cdef int y\n+    y = x + 100\n+    return y\n+\n+\n+cdef int with_gil_func() except 0 with gil:\n+    raise Exception(\"error!\")\n+\n+\n+cdef int nogil_func() nogil except 0:\n+    with_gil_func()\n+\n+\n+def test_nogil_exception_propagation():\n+    \"\"\"\n+    >>> test_nogil_exception_propagation()\n+    Traceback (most recent call last):\n+       ...\n+    Exception: error!\n+    \"\"\"\n+    with nogil:\n+        with gil:\n+            with nogil(True):\n+                nogil_func()\n+\n+\n+cdef int write_unraisable() nogil:\n+    with gil:\n+        raise ValueError()\n+\n+\n+def test_unraisable():\n+    \"\"\"\n+    >>> print(test_unraisable())  # doctest: +ELLIPSIS\n+    ValueError\n+    Exception...ignored...\n+    \"\"\"\n+    import sys\n+    old_stderr = sys.stderr\n+    stderr = sys.stderr = StringIO()\n+    try:\n+        write_unraisable()\n+    finally:\n+        sys.stderr = old_stderr\n+    return stderr.getvalue().strip()\n+\n+\n+def test_nested():\n+    \"\"\"\n+    >>> test_nested()\n+    240\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with nogil(True):\n+        res = f_nogil(res)\n+        with gil(1 < 2):\n+            res = f_gil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+        with gil:\n+            res = f_gil(res)\n+            with nogil(True):\n+                res = f_nogil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+    return res\n+\n+\n+def test_nested_condition_false():\n+    \"\"\"\n+    >>> test_nested_condition_false()\n+    220\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with gil(False):\n+        res = f_gil(res)\n+        with nogil(False):\n+            res = f_gil(res)\n+\n+        with nogil(True):\n+            res = f_nogil(res)\n+            with gil(False):\n+                res = f_nogil(res)\n+\n+    return res\n+\n+def test_try_finally():\n+    \"\"\"\n+    >>> test_try_finally()\n+    113\n+    \"\"\"\n+    cdef int res = 0\n+\n+    try:\n+        with nogil(True):\n+            try:\n+                res = f_nogil(res)\n+                with gil(1 < 2):\n+                    try:\n+                        res = f_gil(res)\n+                    finally:\n+                        res += 1\n+            finally:\n+                res = res + 1\n+    finally:\n+        res += 1\n+\n+    return res\n+\n+\n+ctypedef fused fused_with_object:\n+    int\n+    object\n+\n+\n+def test_fused_object(fused_with_object x):\n+    \"\"\"\n+    >>> test_fused_object[object](\"spam\")\n+    456\n+    >>> test_fused_object[int](1000)\n+    1000\n+    \"\"\"\n+    cdef int res = 0\n+\n+    if fused_with_object is object:",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259570147",
            "id": 259570147,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MDE0Nw==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 156,
            "path": "tests/run/nogil_conditional.pyx",
            "position": null,
            "pull_request_review_id": 207099929,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259570147",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259571711"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259571711"
                }
            },
            "author_association": "NONE",
            "body": "When adding a test for different behavior based on the actual fused type I see that in these cases, the condition (e.g. `numeric is float`) is not constant during GilCheck which fails the test.\r\n\r\nShould I add logic to check for these special kind of expressions (reuse the logic from `ReplaceFusedTypeChecks`) or should I change some previous transform so that these expressions become constant?",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T08:48:33Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)\n+    return x\n+\n+\n+cdef int f_nogil(int x) nogil:\n+    cdef int y\n+    y = x + 10\n+    return y\n+\n+\n+cdef int f_gil(int x) with gil:\n+    cdef int y\n+    y = x + 100\n+    return y\n+\n+\n+cdef int with_gil_func() except 0 with gil:\n+    raise Exception(\"error!\")\n+\n+\n+cdef int nogil_func() nogil except 0:\n+    with_gil_func()\n+\n+\n+def test_nogil_exception_propagation():\n+    \"\"\"\n+    >>> test_nogil_exception_propagation()\n+    Traceback (most recent call last):\n+       ...\n+    Exception: error!\n+    \"\"\"\n+    with nogil:\n+        with gil:\n+            with nogil(True):\n+                nogil_func()\n+\n+\n+cdef int write_unraisable() nogil:\n+    with gil:\n+        raise ValueError()\n+\n+\n+def test_unraisable():\n+    \"\"\"\n+    >>> print(test_unraisable())  # doctest: +ELLIPSIS\n+    ValueError\n+    Exception...ignored...\n+    \"\"\"\n+    import sys\n+    old_stderr = sys.stderr\n+    stderr = sys.stderr = StringIO()\n+    try:\n+        write_unraisable()\n+    finally:\n+        sys.stderr = old_stderr\n+    return stderr.getvalue().strip()\n+\n+\n+def test_nested():\n+    \"\"\"\n+    >>> test_nested()\n+    240\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with nogil(True):\n+        res = f_nogil(res)\n+        with gil(1 < 2):\n+            res = f_gil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+        with gil:\n+            res = f_gil(res)\n+            with nogil(True):\n+                res = f_nogil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+    return res\n+\n+\n+def test_nested_condition_false():\n+    \"\"\"\n+    >>> test_nested_condition_false()\n+    220\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with gil(False):\n+        res = f_gil(res)\n+        with nogil(False):\n+            res = f_gil(res)\n+\n+        with nogil(True):\n+            res = f_nogil(res)\n+            with gil(False):\n+                res = f_nogil(res)\n+\n+    return res\n+\n+def test_try_finally():\n+    \"\"\"\n+    >>> test_try_finally()\n+    113\n+    \"\"\"\n+    cdef int res = 0\n+\n+    try:\n+        with nogil(True):\n+            try:\n+                res = f_nogil(res)\n+                with gil(1 < 2):\n+                    try:\n+                        res = f_gil(res)\n+                    finally:\n+                        res += 1\n+            finally:\n+                res = res + 1\n+    finally:\n+        res += 1\n+\n+    return res\n+\n+\n+ctypedef fused fused_with_object:\n+    int\n+    object\n+\n+\n+def test_fused_object(fused_with_object x):\n+    \"\"\"\n+    >>> test_fused_object[object](\"spam\")\n+    456\n+    >>> test_fused_object[int](1000)\n+    1000\n+    \"\"\"\n+    cdef int res = 0\n+\n+    if fused_with_object is object:",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259571711",
            "id": 259571711,
            "in_reply_to_id": 259570147,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MTcxMQ==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 156,
            "path": "tests/run/nogil_conditional.pyx",
            "position": null,
            "pull_request_review_id": 207102160,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259571711",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
                "events_url": "https://api.github.com/users/noamher/events{/privacy}",
                "followers_url": "https://api.github.com/users/noamher/followers",
                "following_url": "https://api.github.com/users/noamher/following{/other_user}",
                "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noamher",
                "id": 6236499,
                "login": "noamher",
                "node_id": "MDQ6VXNlcjYyMzY0OTk=",
                "organizations_url": "https://api.github.com/users/noamher/orgs",
                "received_events_url": "https://api.github.com/users/noamher/received_events",
                "repos_url": "https://api.github.com/users/noamher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noamher"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259572067"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259572067"
                }
            },
            "author_association": "MEMBER",
            "body": "It looks like a simple `.visit_GILStatNode()` in that transform that works like `.visit_IfStatNode()` should suffice.\r\n(Actually, I wonder if it wouldn't have been best to make `RepFTCh` inherit from `ConstFold`, but that's not something to fix up right now.)",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T09:02:31Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)\n+    return x\n+\n+\n+cdef int f_nogil(int x) nogil:\n+    cdef int y\n+    y = x + 10\n+    return y\n+\n+\n+cdef int f_gil(int x) with gil:\n+    cdef int y\n+    y = x + 100\n+    return y\n+\n+\n+cdef int with_gil_func() except 0 with gil:\n+    raise Exception(\"error!\")\n+\n+\n+cdef int nogil_func() nogil except 0:\n+    with_gil_func()\n+\n+\n+def test_nogil_exception_propagation():\n+    \"\"\"\n+    >>> test_nogil_exception_propagation()\n+    Traceback (most recent call last):\n+       ...\n+    Exception: error!\n+    \"\"\"\n+    with nogil:\n+        with gil:\n+            with nogil(True):\n+                nogil_func()\n+\n+\n+cdef int write_unraisable() nogil:\n+    with gil:\n+        raise ValueError()\n+\n+\n+def test_unraisable():\n+    \"\"\"\n+    >>> print(test_unraisable())  # doctest: +ELLIPSIS\n+    ValueError\n+    Exception...ignored...\n+    \"\"\"\n+    import sys\n+    old_stderr = sys.stderr\n+    stderr = sys.stderr = StringIO()\n+    try:\n+        write_unraisable()\n+    finally:\n+        sys.stderr = old_stderr\n+    return stderr.getvalue().strip()\n+\n+\n+def test_nested():\n+    \"\"\"\n+    >>> test_nested()\n+    240\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with nogil(True):\n+        res = f_nogil(res)\n+        with gil(1 < 2):\n+            res = f_gil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+        with gil:\n+            res = f_gil(res)\n+            with nogil(True):\n+                res = f_nogil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+    return res\n+\n+\n+def test_nested_condition_false():\n+    \"\"\"\n+    >>> test_nested_condition_false()\n+    220\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with gil(False):\n+        res = f_gil(res)\n+        with nogil(False):\n+            res = f_gil(res)\n+\n+        with nogil(True):\n+            res = f_nogil(res)\n+            with gil(False):\n+                res = f_nogil(res)\n+\n+    return res\n+\n+def test_try_finally():\n+    \"\"\"\n+    >>> test_try_finally()\n+    113\n+    \"\"\"\n+    cdef int res = 0\n+\n+    try:\n+        with nogil(True):\n+            try:\n+                res = f_nogil(res)\n+                with gil(1 < 2):\n+                    try:\n+                        res = f_gil(res)\n+                    finally:\n+                        res += 1\n+            finally:\n+                res = res + 1\n+    finally:\n+        res += 1\n+\n+    return res\n+\n+\n+ctypedef fused fused_with_object:\n+    int\n+    object\n+\n+\n+def test_fused_object(fused_with_object x):\n+    \"\"\"\n+    >>> test_fused_object[object](\"spam\")\n+    456\n+    >>> test_fused_object[int](1000)\n+    1000\n+    \"\"\"\n+    cdef int res = 0\n+\n+    if fused_with_object is object:",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259572067",
            "id": 259572067,
            "in_reply_to_id": 259570147,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MjA2Nw==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 156,
            "path": "tests/run/nogil_conditional.pyx",
            "position": null,
            "pull_request_review_id": 207102551,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259572067",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259572274"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259572274"
                }
            },
            "author_association": "NONE",
            "body": "> in that transform\r\n\r\nYou are referring to `ReplaceFusedTypeChecks`, right?",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T09:09:27Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)\n+    return x\n+\n+\n+cdef int f_nogil(int x) nogil:\n+    cdef int y\n+    y = x + 10\n+    return y\n+\n+\n+cdef int f_gil(int x) with gil:\n+    cdef int y\n+    y = x + 100\n+    return y\n+\n+\n+cdef int with_gil_func() except 0 with gil:\n+    raise Exception(\"error!\")\n+\n+\n+cdef int nogil_func() nogil except 0:\n+    with_gil_func()\n+\n+\n+def test_nogil_exception_propagation():\n+    \"\"\"\n+    >>> test_nogil_exception_propagation()\n+    Traceback (most recent call last):\n+       ...\n+    Exception: error!\n+    \"\"\"\n+    with nogil:\n+        with gil:\n+            with nogil(True):\n+                nogil_func()\n+\n+\n+cdef int write_unraisable() nogil:\n+    with gil:\n+        raise ValueError()\n+\n+\n+def test_unraisable():\n+    \"\"\"\n+    >>> print(test_unraisable())  # doctest: +ELLIPSIS\n+    ValueError\n+    Exception...ignored...\n+    \"\"\"\n+    import sys\n+    old_stderr = sys.stderr\n+    stderr = sys.stderr = StringIO()\n+    try:\n+        write_unraisable()\n+    finally:\n+        sys.stderr = old_stderr\n+    return stderr.getvalue().strip()\n+\n+\n+def test_nested():\n+    \"\"\"\n+    >>> test_nested()\n+    240\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with nogil(True):\n+        res = f_nogil(res)\n+        with gil(1 < 2):\n+            res = f_gil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+        with gil:\n+            res = f_gil(res)\n+            with nogil(True):\n+                res = f_nogil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+    return res\n+\n+\n+def test_nested_condition_false():\n+    \"\"\"\n+    >>> test_nested_condition_false()\n+    220\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with gil(False):\n+        res = f_gil(res)\n+        with nogil(False):\n+            res = f_gil(res)\n+\n+        with nogil(True):\n+            res = f_nogil(res)\n+            with gil(False):\n+                res = f_nogil(res)\n+\n+    return res\n+\n+def test_try_finally():\n+    \"\"\"\n+    >>> test_try_finally()\n+    113\n+    \"\"\"\n+    cdef int res = 0\n+\n+    try:\n+        with nogil(True):\n+            try:\n+                res = f_nogil(res)\n+                with gil(1 < 2):\n+                    try:\n+                        res = f_gil(res)\n+                    finally:\n+                        res += 1\n+            finally:\n+                res = res + 1\n+    finally:\n+        res += 1\n+\n+    return res\n+\n+\n+ctypedef fused fused_with_object:\n+    int\n+    object\n+\n+\n+def test_fused_object(fused_with_object x):\n+    \"\"\"\n+    >>> test_fused_object[object](\"spam\")\n+    456\n+    >>> test_fused_object[int](1000)\n+    1000\n+    \"\"\"\n+    cdef int res = 0\n+\n+    if fused_with_object is object:",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259572274",
            "id": 259572274,
            "in_reply_to_id": 259570147,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MjI3NA==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 156,
            "path": "tests/run/nogil_conditional.pyx",
            "position": null,
            "pull_request_review_id": 207102768,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259572274",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
                "events_url": "https://api.github.com/users/noamher/events{/privacy}",
                "followers_url": "https://api.github.com/users/noamher/followers",
                "following_url": "https://api.github.com/users/noamher/following{/other_user}",
                "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noamher",
                "id": 6236499,
                "login": "noamher",
                "node_id": "MDQ6VXNlcjYyMzY0OTk=",
                "organizations_url": "https://api.github.com/users/noamher/orgs",
                "received_events_url": "https://api.github.com/users/noamher/received_events",
                "repos_url": "https://api.github.com/users/noamher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noamher"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259572629"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259572629"
                }
            },
            "author_association": "NONE",
            "body": "Added it to `ReplaceFusedTypeChecks`, worked like a charm.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T09:20:25Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)\n+    return x\n+\n+\n+cdef int f_nogil(int x) nogil:\n+    cdef int y\n+    y = x + 10\n+    return y\n+\n+\n+cdef int f_gil(int x) with gil:\n+    cdef int y\n+    y = x + 100\n+    return y\n+\n+\n+cdef int with_gil_func() except 0 with gil:\n+    raise Exception(\"error!\")\n+\n+\n+cdef int nogil_func() nogil except 0:\n+    with_gil_func()\n+\n+\n+def test_nogil_exception_propagation():\n+    \"\"\"\n+    >>> test_nogil_exception_propagation()\n+    Traceback (most recent call last):\n+       ...\n+    Exception: error!\n+    \"\"\"\n+    with nogil:\n+        with gil:\n+            with nogil(True):\n+                nogil_func()\n+\n+\n+cdef int write_unraisable() nogil:\n+    with gil:\n+        raise ValueError()\n+\n+\n+def test_unraisable():\n+    \"\"\"\n+    >>> print(test_unraisable())  # doctest: +ELLIPSIS\n+    ValueError\n+    Exception...ignored...\n+    \"\"\"\n+    import sys\n+    old_stderr = sys.stderr\n+    stderr = sys.stderr = StringIO()\n+    try:\n+        write_unraisable()\n+    finally:\n+        sys.stderr = old_stderr\n+    return stderr.getvalue().strip()\n+\n+\n+def test_nested():\n+    \"\"\"\n+    >>> test_nested()\n+    240\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with nogil(True):\n+        res = f_nogil(res)\n+        with gil(1 < 2):\n+            res = f_gil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+        with gil:\n+            res = f_gil(res)\n+            with nogil(True):\n+                res = f_nogil(res)\n+            with nogil:\n+                res = f_nogil(res)\n+\n+    return res\n+\n+\n+def test_nested_condition_false():\n+    \"\"\"\n+    >>> test_nested_condition_false()\n+    220\n+    \"\"\"\n+    cdef int res = 0\n+\n+    with gil(False):\n+        res = f_gil(res)\n+        with nogil(False):\n+            res = f_gil(res)\n+\n+        with nogil(True):\n+            res = f_nogil(res)\n+            with gil(False):\n+                res = f_nogil(res)\n+\n+    return res\n+\n+def test_try_finally():\n+    \"\"\"\n+    >>> test_try_finally()\n+    113\n+    \"\"\"\n+    cdef int res = 0\n+\n+    try:\n+        with nogil(True):\n+            try:\n+                res = f_nogil(res)\n+                with gil(1 < 2):\n+                    try:\n+                        res = f_gil(res)\n+                    finally:\n+                        res += 1\n+            finally:\n+                res = res + 1\n+    finally:\n+        res += 1\n+\n+    return res\n+\n+\n+ctypedef fused fused_with_object:\n+    int\n+    object\n+\n+\n+def test_fused_object(fused_with_object x):\n+    \"\"\"\n+    >>> test_fused_object[object](\"spam\")\n+    456\n+    >>> test_fused_object[int](1000)\n+    1000\n+    \"\"\"\n+    cdef int res = 0\n+\n+    if fused_with_object is object:",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259572629",
            "id": 259572629,
            "in_reply_to_id": 259570147,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MjYyOQ==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 156,
            "path": "tests/run/nogil_conditional.pyx",
            "position": null,
            "pull_request_review_id": 207103055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259572629",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
                "events_url": "https://api.github.com/users/noamher/events{/privacy}",
                "followers_url": "https://api.github.com/users/noamher/followers",
                "following_url": "https://api.github.com/users/noamher/following{/other_user}",
                "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noamher",
                "id": 6236499,
                "login": "noamher",
                "node_id": "MDQ6VXNlcjYyMzY0OTk=",
                "organizations_url": "https://api.github.com/users/noamher/orgs",
                "received_events_url": "https://api.github.com/users/noamher/received_events",
                "repos_url": "https://api.github.com/users/noamher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noamher"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259572660"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259572660"
                }
            },
            "author_association": "NONE",
            "body": "changed to -1.\r\nNote that in tests/run/nogil.pyx it is still 0.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T09:21:22Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)\n+    return x\n+\n+\n+cdef int f_nogil(int x) nogil:\n+    cdef int y\n+    y = x + 10\n+    return y\n+\n+\n+cdef int f_gil(int x) with gil:\n+    cdef int y\n+    y = x + 100\n+    return y\n+\n+\n+cdef int with_gil_func() except 0 with gil:",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259572660",
            "id": 259572660,
            "in_reply_to_id": 259569935,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MjY2MA==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 33,
            "path": "tests/run/nogil_conditional.pyx",
            "position": null,
            "pull_request_review_id": 207103083,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259572660",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
                "events_url": "https://api.github.com/users/noamher/events{/privacy}",
                "followers_url": "https://api.github.com/users/noamher/followers",
                "following_url": "https://api.github.com/users/noamher/following{/other_user}",
                "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noamher",
                "id": 6236499,
                "login": "noamher",
                "node_id": "MDQ6VXNlcjYyMzY0OTk=",
                "organizations_url": "https://api.github.com/users/noamher/orgs",
                "received_events_url": "https://api.github.com/users/noamher/received_events",
                "repos_url": "https://api.github.com/users/noamher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noamher"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259572678"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259572678"
                }
            },
            "author_association": "NONE",
            "body": "changed f_gil to normal Python function.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T09:21:44Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259572678",
            "id": 259572678,
            "in_reply_to_id": 259569697,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MjY3OA==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 17,
            "path": "tests/run/nogil_conditional.pyx",
            "position": 17,
            "pull_request_review_id": 207103098,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259572678",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
                "events_url": "https://api.github.com/users/noamher/events{/privacy}",
                "followers_url": "https://api.github.com/users/noamher/followers",
                "following_url": "https://api.github.com/users/noamher/following{/other_user}",
                "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noamher",
                "id": 6236499,
                "login": "noamher",
                "node_id": "MDQ6VXNlcjYyMzY0OTk=",
                "organizations_url": "https://api.github.com/users/noamher/orgs",
                "received_events_url": "https://api.github.com/users/noamher/received_events",
                "repos_url": "https://api.github.com/users/noamher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noamher"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259572684"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259572684"
                }
            },
            "author_association": "NONE",
            "body": "Changed to `node.condtion.pos`.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T09:21:56Z",
            "diff_hunk": "@@ -2915,6 +2915,11 @@ def visit_FuncDefNode(self, node):\n         return node\n \n     def visit_GILStatNode(self, node):\n+        if node.condition is not None:\n+            error(node.pos, \"Non-constant condition in a \"\n+                            \"`with %s(<condition>)` statement\" % node.state)",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259572684",
            "id": 259572684,
            "in_reply_to_id": 259569644,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MjY4NA==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 6,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 207103101,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259572684",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
                "events_url": "https://api.github.com/users/noamher/events{/privacy}",
                "followers_url": "https://api.github.com/users/noamher/followers",
                "following_url": "https://api.github.com/users/noamher/following{/other_user}",
                "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noamher",
                "id": 6236499,
                "login": "noamher",
                "node_id": "MDQ6VXNlcjYyMzY0OTk=",
                "organizations_url": "https://api.github.com/users/noamher/orgs",
                "received_events_url": "https://api.github.com/users/noamher/received_events",
                "repos_url": "https://api.github.com/users/noamher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noamher"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259572691"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259572691"
                }
            },
            "author_association": "NONE",
            "body": "Typo fixed.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T09:22:07Z",
            "diff_hunk": "@@ -4688,6 +4688,30 @@ def visit_ExprStatNode(self, node):\n             return None\n         return node\n \n+    def visit_GILStatNode(self, node):\n+        self.visitchildren(node)\n+        if node.condition is None:\n+            return node\n+\n+        if node.condition.has_constant_result():\n+            # Condition is True - Modify node to be a normal\n+            # GILStatNode with condition=None\n+            if node.condition.constant_result:\n+                node.condition = None\n+\n+            # Condition is False - the body of the GILStatNode\n+            # should run without changing changing the state of the gil",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259572691",
            "id": 259572691,
            "in_reply_to_id": 259569602,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MjY5MQ==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 16,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 207103109,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259572691",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
                "events_url": "https://api.github.com/users/noamher/events{/privacy}",
                "followers_url": "https://api.github.com/users/noamher/followers",
                "following_url": "https://api.github.com/users/noamher/following{/other_user}",
                "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noamher",
                "id": 6236499,
                "login": "noamher",
                "node_id": "MDQ6VXNlcjYyMzY0OTk=",
                "organizations_url": "https://api.github.com/users/noamher/orgs",
                "received_events_url": "https://api.github.com/users/noamher/received_events",
                "repos_url": "https://api.github.com/users/noamher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noamher"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259572695"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259572695"
                }
            },
            "author_association": "NONE",
            "body": "Fixed.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T09:22:13Z",
            "diff_hunk": "@@ -7794,10 +7794,12 @@ class GILStatNode(NogilTryFinallyStatNode):\n     #\n     #   state   string   'gil' or 'nogil'\n \n+    child_attrs = [\"body\", \"condition\", \"finally_clause\", \"finally_except_clause\"]",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259572695",
            "id": 259572695,
            "in_reply_to_id": 259569573,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MjY5NQ==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 4,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 207103114,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259572695",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
                "events_url": "https://api.github.com/users/noamher/events{/privacy}",
                "followers_url": "https://api.github.com/users/noamher/followers",
                "following_url": "https://api.github.com/users/noamher/following{/other_user}",
                "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noamher",
                "id": 6236499,
                "login": "noamher",
                "node_id": "MDQ6VXNlcjYyMzY0OTk=",
                "organizations_url": "https://api.github.com/users/noamher/orgs",
                "received_events_url": "https://api.github.com/users/noamher/received_events",
                "repos_url": "https://api.github.com/users/noamher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noamher"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2860#discussion_r259573472"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2860"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/259573472"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, thanks. I fixed these tests and also added a compiler warning for this case.",
            "commit_id": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "created_at": "2019-02-23T09:47:55Z",
            "diff_hunk": "@@ -0,0 +1,242 @@\n+# mode: run\n+\n+try:\n+    from StringIO import StringIO\n+except ImportError:\n+    from io import StringIO\n+\n+\n+def test(int x):\n+    \"\"\"\n+    >>> test(0)\n+    110\n+    \"\"\"\n+    with nogil(True):\n+        x = f_nogil(x)\n+        with gil(True):\n+            x = f_gil(x)\n+    return x\n+\n+\n+cdef int f_nogil(int x) nogil:\n+    cdef int y\n+    y = x + 10\n+    return y\n+\n+\n+cdef int f_gil(int x) with gil:\n+    cdef int y\n+    y = x + 100\n+    return y\n+\n+\n+cdef int with_gil_func() except 0 with gil:",
            "html_url": "https://github.com/cython/cython/pull/2860#discussion_r259573472",
            "id": 259573472,
            "in_reply_to_id": 259569935,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MzQ3Mg==",
            "original_commit_id": "6a45480cb5167177ea852c73f5f20a4b983e2c29",
            "original_position": 33,
            "path": "tests/run/nogil_conditional.pyx",
            "position": null,
            "pull_request_review_id": 207103886,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2860",
            "updated_at": "2019-02-25T19:16:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/259573472",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2860/comments",
    "commit_data": [
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5ff75cdabb810221cbb656643e07031651a55757/comments",
            "commit": {
                "author": {
                    "date": "2019-02-22T21:38:56Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-02-23T09:18:04Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "message": "Allow condition in GILStatNode",
                "tree": {
                    "sha": "970a06e3df18375b5293b85559f73f430c9809b4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/970a06e3df18375b5293b85559f73f430c9809b4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5ff75cdabb810221cbb656643e07031651a55757",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/5ff75cdabb810221cbb656643e07031651a55757",
            "node_id": "MDY6Q29tbWl0MTcyMTM4MjUzOjVmZjc1Y2RhYmI4MTAyMjFjYmI2NTY2NDNlMDcwMzE2NTFhNTU3NTc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/605cc2143259e07ecd7df7aad79a37197fd011a2",
                    "sha": "605cc2143259e07ecd7df7aad79a37197fd011a2",
                    "url": "https://api.github.com/repos/cython/cython/commits/605cc2143259e07ecd7df7aad79a37197fd011a2"
                }
            ],
            "sha": "5ff75cdabb810221cbb656643e07031651a55757",
            "url": "https://api.github.com/repos/cython/cython/commits/5ff75cdabb810221cbb656643e07031651a55757"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/73133f68bf9ce72b77d0a54662af18834860bc1b/comments",
            "commit": {
                "author": {
                    "date": "2019-02-23T00:27:21Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-02-23T20:13:56Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "message": "Create run tests for conditional GILStatNode",
                "tree": {
                    "sha": "c31cf669b5fd046f52156d44172c4a74e6abd14c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c31cf669b5fd046f52156d44172c4a74e6abd14c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/73133f68bf9ce72b77d0a54662af18834860bc1b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/73133f68bf9ce72b77d0a54662af18834860bc1b",
            "node_id": "MDY6Q29tbWl0MTcyMTM4MjUzOjczMTMzZjY4YmY5Y2U3MmI3N2QwYTU0NjYyYWYxODgzNDg2MGJjMWI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5ff75cdabb810221cbb656643e07031651a55757",
                    "sha": "5ff75cdabb810221cbb656643e07031651a55757",
                    "url": "https://api.github.com/repos/cython/cython/commits/5ff75cdabb810221cbb656643e07031651a55757"
                }
            ],
            "sha": "73133f68bf9ce72b77d0a54662af18834860bc1b",
            "url": "https://api.github.com/repos/cython/cython/commits/73133f68bf9ce72b77d0a54662af18834860bc1b"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/412b232e252329e2320e171fd94625a52594b18c/comments",
            "commit": {
                "author": {
                    "date": "2019-02-23T20:11:22Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-02-23T20:14:11Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "message": "Create errors tests for conditional GILStatNode",
                "tree": {
                    "sha": "abfec451784bcf6b923e9f39b37a343b5237666d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/abfec451784bcf6b923e9f39b37a343b5237666d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/412b232e252329e2320e171fd94625a52594b18c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/412b232e252329e2320e171fd94625a52594b18c",
            "node_id": "MDY6Q29tbWl0MTcyMTM4MjUzOjQxMmIyMzJlMjUyMzI5ZTIzMjBlMTcxZmQ5NDYyNWE1MjU5NGIxOGM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/73133f68bf9ce72b77d0a54662af18834860bc1b",
                    "sha": "73133f68bf9ce72b77d0a54662af18834860bc1b",
                    "url": "https://api.github.com/repos/cython/cython/commits/73133f68bf9ce72b77d0a54662af18834860bc1b"
                }
            ],
            "sha": "412b232e252329e2320e171fd94625a52594b18c",
            "url": "https://api.github.com/repos/cython/cython/commits/412b232e252329e2320e171fd94625a52594b18c"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f8e58c5eff854bdafdb403977c033d223053a17d/comments",
            "commit": {
                "author": {
                    "date": "2019-02-24T20:22:17Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-02-25T18:28:17Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "message": "Test conditional GILStatNode with compile-time constant as condition",
                "tree": {
                    "sha": "d79221862b2cc98cf955e63f66e566b8206889d8",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d79221862b2cc98cf955e63f66e566b8206889d8"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f8e58c5eff854bdafdb403977c033d223053a17d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/f8e58c5eff854bdafdb403977c033d223053a17d",
            "node_id": "MDY6Q29tbWl0MTcyMTM4MjUzOmY4ZTU4YzVlZmY4NTRiZGFmZGI0MDM5NzdjMDMzZDIyMzA1M2ExN2Q=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/412b232e252329e2320e171fd94625a52594b18c",
                    "sha": "412b232e252329e2320e171fd94625a52594b18c",
                    "url": "https://api.github.com/repos/cython/cython/commits/412b232e252329e2320e171fd94625a52594b18c"
                }
            ],
            "sha": "f8e58c5eff854bdafdb403977c033d223053a17d",
            "url": "https://api.github.com/repos/cython/cython/commits/f8e58c5eff854bdafdb403977c033d223053a17d"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5dc832d3e298534e159601b69f0956a2f6963e16/comments",
            "commit": {
                "author": {
                    "date": "2019-02-25T19:12:34Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-02-25T19:16:34Z",
                    "email": "noam@beeeye.co",
                    "name": "Noam Hershtig"
                },
                "message": "Add conditional GILStatNode usage to documentation",
                "tree": {
                    "sha": "f358b8c54971edd73ad3107e5cd5bea0e2311da2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f358b8c54971edd73ad3107e5cd5bea0e2311da2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5dc832d3e298534e159601b69f0956a2f6963e16",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/cython/cython/commit/5dc832d3e298534e159601b69f0956a2f6963e16",
            "node_id": "MDY6Q29tbWl0MTcyMTM4MjUzOjVkYzgzMmQzZTI5ODUzNGUxNTk2MDFiNjlmMDk1NmEyZjY5NjNlMTY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f8e58c5eff854bdafdb403977c033d223053a17d",
                    "sha": "f8e58c5eff854bdafdb403977c033d223053a17d",
                    "url": "https://api.github.com/repos/cython/cython/commits/f8e58c5eff854bdafdb403977c033d223053a17d"
                }
            ],
            "sha": "5dc832d3e298534e159601b69f0956a2f6963e16",
            "url": "https://api.github.com/repos/cython/cython/commits/5dc832d3e298534e159601b69f0956a2f6963e16"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/2860/commits",
    "created_at": "2019-02-22T21:47:05Z",
    "diff_url": "https://github.com/cython/cython/pull/2860.diff",
    "head": {
        "label": "noamher:conditional-gilstatnode",
        "ref": "conditional-gilstatnode",
        "repo": {
            "archive_url": "https://api.github.com/repos/noamher/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/noamher/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/noamher/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/noamher/cython/branches{/branch}",
            "clone_url": "https://github.com/noamher/cython.git",
            "collaborators_url": "https://api.github.com/repos/noamher/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/noamher/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/noamher/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/noamher/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/noamher/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/noamher/cython/contributors",
            "created_at": "2019-02-22T21:39:49Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/noamher/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "downloads_url": "https://api.github.com/repos/noamher/cython/downloads",
            "events_url": "https://api.github.com/repos/noamher/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/noamher/cython/forks",
            "full_name": "noamher/cython",
            "git_commits_url": "https://api.github.com/repos/noamher/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/noamher/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/noamher/cython/git/tags{/sha}",
            "git_url": "git://github.com/noamher/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/noamher/cython/hooks",
            "html_url": "https://github.com/noamher/cython",
            "id": 172138253,
            "issue_comment_url": "https://api.github.com/repos/noamher/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/noamher/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/noamher/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/noamher/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/noamher/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/noamher/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/noamher/cython/merges",
            "milestones_url": "https://api.github.com/repos/noamher/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzIxMzgyNTM=",
            "notifications_url": "https://api.github.com/repos/noamher/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
                "events_url": "https://api.github.com/users/noamher/events{/privacy}",
                "followers_url": "https://api.github.com/users/noamher/followers",
                "following_url": "https://api.github.com/users/noamher/following{/other_user}",
                "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noamher",
                "id": 6236499,
                "login": "noamher",
                "node_id": "MDQ6VXNlcjYyMzY0OTk=",
                "organizations_url": "https://api.github.com/users/noamher/orgs",
                "received_events_url": "https://api.github.com/users/noamher/received_events",
                "repos_url": "https://api.github.com/users/noamher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noamher"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/noamher/cython/pulls{/number}",
            "pushed_at": "2019-02-25T19:16:39Z",
            "releases_url": "https://api.github.com/repos/noamher/cython/releases{/id}",
            "size": 54387,
            "ssh_url": "git@github.com:noamher/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/noamher/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/noamher/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/noamher/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/noamher/cython/subscription",
            "svn_url": "https://github.com/noamher/cython",
            "tags_url": "https://api.github.com/repos/noamher/cython/tags",
            "teams_url": "https://api.github.com/repos/noamher/cython/teams",
            "trees_url": "https://api.github.com/repos/noamher/cython/git/trees{/sha}",
            "updated_at": "2019-02-22T21:39:55Z",
            "url": "https://api.github.com/repos/noamher/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "5dc832d3e298534e159601b69f0956a2f6963e16",
        "user": {
            "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
            "events_url": "https://api.github.com/users/noamher/events{/privacy}",
            "followers_url": "https://api.github.com/users/noamher/followers",
            "following_url": "https://api.github.com/users/noamher/following{/other_user}",
            "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/noamher",
            "id": 6236499,
            "login": "noamher",
            "node_id": "MDQ6VXNlcjYyMzY0OTk=",
            "organizations_url": "https://api.github.com/users/noamher/orgs",
            "received_events_url": "https://api.github.com/users/noamher/received_events",
            "repos_url": "https://api.github.com/users/noamher/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/noamher"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/2860",
    "id": 255543044,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/2860",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425559948,
            "name": "Cython Language Feature",
            "node_id": "MDU6TGFiZWw0MjU1NTk5NDg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Cython%20Language%20Feature"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "locked": false,
    "merge_commit_sha": "1112a9cb8361481bd710f3636011b941f6070874",
    "merged_at": "2019-02-26T18:41:22Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 40,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 20,
        "state": "open",
        "title": "3.0",
        "updated_at": "2019-02-26T18:41:57Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU1NTQzMDQ0",
    "number": 2860,
    "patch_url": "https://github.com/cython/cython/pull/2860.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/2860/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/5dc832d3e298534e159601b69f0956a2f6963e16",
    "title": "Allow condition in GILStatNode",
    "updated_at": "2019-02-26T18:41:22Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/2860",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/6236499?v=4",
        "events_url": "https://api.github.com/users/noamher/events{/privacy}",
        "followers_url": "https://api.github.com/users/noamher/followers",
        "following_url": "https://api.github.com/users/noamher/following{/other_user}",
        "gists_url": "https://api.github.com/users/noamher/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/noamher",
        "id": 6236499,
        "login": "noamher",
        "node_id": "MDQ6VXNlcjYyMzY0OTk=",
        "organizations_url": "https://api.github.com/users/noamher/orgs",
        "received_events_url": "https://api.github.com/users/noamher/received_events",
        "repos_url": "https://api.github.com/users/noamher/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/noamher/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/noamher/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/noamher"
    }
}