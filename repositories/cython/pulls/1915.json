{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/1915/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/1915/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/1915"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/1915"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/1915/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/1915"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/a58a7dab71facb57ef8264144bdb8b7de76b9c7a"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "A Python to C compiler",
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 596,
            "forks_count": 596,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 445,
            "open_issues_count": 445,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2017-11-04T12:12:27Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 49170,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 2624,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2017-11-03T21:30:14Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 2624,
            "watchers_count": 2624
        },
        "sha": "109f07b96f382247e0816df06334c509d57479be",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Allow including snippets of C code in a `cdef extern from *` block using docstring syntax:\r\n```\r\ncdef extern from *:\r\n    \"\"\"\r\n    static long square(long x)\r\n    {\r\n        return x * x;\r\n    }\r\n    \"\"\"\r\n    long square(long)\r\n```\r\n\r\nThis is an alternative to adding an external `.h` file containing the C code. This would be useful especially for simple things, like a one-line macro.\r\n\r\nI still have to write documentation, but I'll wait for feedback first.\r\n\r\nEdit: This is currently a syntax error and thus cannot conflict with existing code.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r146105498"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/146105498"
                }
            },
            "author_association": "OWNER",
            "body": "You're probably aware that this is a hack, right?",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-21T13:25:13Z",
            "diff_hunk": "@@ -54,6 +54,15 @@ def generate_c_code_config(env, options):\n         c_line_in_traceback=options.c_line_in_traceback)\n \n \n+class VerbatimString(_unicode):",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r146105498",
            "id": 146105498,
            "original_commit_id": "86d48734d49107f2e48f0ebc9e986ced4dc96f62",
            "original_position": 13,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 71007466,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/146105498",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r146105509"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/146105509"
                }
            },
            "author_association": "OWNER",
            "body": "This can raise a `UnicodeEncodeError` for non-ASCII content in Py2.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-21T13:25:48Z",
            "diff_hunk": "@@ -741,12 +750,13 @@ def generate_includes(self, env, cimported_modules, code, early=True, late=True)\n             includes += [include for include in env.include_files_late\n                          if include not in env.include_files_early]\n         for filename in includes:\n-            byte_decoded_filenname = str(filename)\n-\n-            if byte_decoded_filenname[0] == '<' and byte_decoded_filenname[-1] == '>':\n-                code.putln('#include %s' % byte_decoded_filenname)\n+            f = str(filename)",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r146105509",
            "id": 146105509,
            "original_commit_id": "86d48734d49107f2e48f0ebc9e986ced4dc96f62",
            "original_position": 33,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 71007477,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/146105509",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147912452"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147912452"
                }
            },
            "author_association": "OWNER",
            "body": "This can also be done in `__init__()`. No need to implement `__new__()`.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T07:33:22Z",
            "diff_hunk": "@@ -54,6 +54,75 @@ def generate_c_code_config(env, options):\n         c_line_in_traceback=options.c_line_in_traceback)\n \n \n+class IncludeCode(object):\n+    \"\"\"\n+    An include file and/or verbatim C code to be included in the\n+    generated sources.\n+    \"\"\"\n+    # attributes:\n+    #\n+    #  text      unicode: C code to be generated\n+    #  location  int: where to put this include in the C sources, one\n+    #            of the constants INITIAL, EARLY, LATE\n+    #  order     int: sorting order (automatically set)\n+\n+    # Constants for location. If the same include occurs with different\n+    # locations, the earliest one takes precedense.\n+    INITIAL = 0\n+    EARLY = 1\n+    LATE = 2\n+\n+    number = 1  # Counter for \"order\"\n+\n+    def __new__(cls, *args, **kwds):\n+        self = object.__new__(cls)\n+        self.order = cls.number\n+        cls.number += 1",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147912452",
            "id": 147912452,
            "original_commit_id": "21712376cdd02280a95dc23219b17050fb9ddcbf",
            "original_position": 27,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 73073700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147912452",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147912974"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147912974"
                }
            },
            "author_association": "OWNER",
            "body": "It's usually the other way round: `inc` would have a method to write its code contribution, receiving `code` as an argument. I specifically dislike calling `str()` on something non-trivial for code generation.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T07:37:25Z",
            "diff_hunk": "@@ -620,8 +688,9 @@ def generate_module_preamble(self, env, options, cimported_modules, metadata, co\n             code.putln(\"\")\n         code.putln(\"#define PY_SSIZE_T_CLEAN\")\n \n-        for filename in env.python_include_files:\n-            code.putln('#include \"%s\"' % filename)\n+        for inc in sorted(env.c_includes.values(), key=IncludeCode.sortkey):\n+            if inc.location == inc.INITIAL:\n+                code.putln(str(inc))",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147912974",
            "id": 147912974,
            "original_commit_id": "21712376cdd02280a95dc23219b17050fb9ddcbf",
            "original_position": 104,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 73073700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147912974",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147913745"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147913745"
                }
            },
            "author_association": "OWNER",
            "body": "These sprinkled imports suggest that `ModuleNode` might not be the perfect place to put the include files class. Why not put it in `Code.py`?",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T07:41:59Z",
            "diff_hunk": "@@ -1250,23 +1247,20 @@ def lookup_submodule(self, name):\n         return module\n \n     def add_include_file(self, filename, late=False):\n-        if filename in self.python_include_files:\n-            return\n-        # Possibly, the same include appears both as early and as late\n-        # include. We'll deal with this at code generation time.\n-        if late:\n-            incs = self.include_files_late\n+        from .ModuleNode import IncludeCode",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147913745",
            "id": 147913745,
            "original_commit_id": "21712376cdd02280a95dc23219b17050fb9ddcbf",
            "original_position": 42,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 73073700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147913745",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147914256"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147914256"
                }
            },
            "author_association": "OWNER",
            "body": "Wouldn't this leak a reference? I'd rather do without such a test.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T07:45:23Z",
            "diff_hunk": "@@ -0,0 +1,62 @@\n+cdef extern from *:\n+    \"\"\"\n+    static long square(long x)\n+    {\n+        return x * x;\n+    }\n+    \"\"\"\n+    long square(long)\n+\n+\n+cdef extern from \"verbatiminclude.h\":\n+    long cube(long)\n+\n+cdef extern from \"verbatiminclude.h\":\n+    \"typedef int myint;\"\n+    ctypedef int myint\n+\n+\n+cdef class C:\n+    cdef myint val\n+\n+\n+cdef extern from \"Python.h\":\n+    \"\"\"\n+    #define Py_SET_SIZE(obj, size)  Py_SIZE((obj)) = (size)\n+    \"\"\"\n+    void Py_SET_SIZE(object, Py_ssize_t)\n+\n+\n+def test_square(x):\n+    \"\"\"\n+    >>> test_square(4)\n+    16\n+    \"\"\"\n+    return square(x)\n+\n+\n+def test_cube(x):\n+    \"\"\"\n+    >>> test_cube(4)\n+    64\n+    \"\"\"\n+    return cube(x)\n+\n+\n+def test_class():\n+    \"\"\"\n+    >>> test_class()\n+    42\n+    \"\"\"\n+    cdef C x = C()\n+    x.val = 42\n+    return x.val\n+\n+\n+def test_set_size(x, size):\n+    \"\"\"\n+    >>> test_set_size((1, 2, 3), 2)\n+    (1, 2)\n+    \"\"\"\n+    Py_SET_SIZE(x, size)",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147914256",
            "id": 147914256,
            "original_commit_id": "21712376cdd02280a95dc23219b17050fb9ddcbf",
            "original_position": 61,
            "path": "tests/run/verbatiminclude.pyx",
            "position": null,
            "pull_request_review_id": 73073700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147914256",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147915388"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147915388"
                }
            },
            "author_association": "OWNER",
            "body": "I found it difficult and confusing to read the code where this is used. Renaming it to `update_from_dict()` might help, but in fact, this doesn't care about the dict at all, only one of its entries. I don't think it would hurt much to pass key and (potentially None) value instead, but it might make it clearer what's happening.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T07:53:11Z",
            "diff_hunk": "@@ -54,6 +54,75 @@ def generate_c_code_config(env, options):\n         c_line_in_traceback=options.c_line_in_traceback)\n \n \n+class IncludeCode(object):\n+    \"\"\"\n+    An include file and/or verbatim C code to be included in the\n+    generated sources.\n+    \"\"\"\n+    # attributes:\n+    #\n+    #  text      unicode: C code to be generated\n+    #  location  int: where to put this include in the C sources, one\n+    #            of the constants INITIAL, EARLY, LATE\n+    #  order     int: sorting order (automatically set)\n+\n+    # Constants for location. If the same include occurs with different\n+    # locations, the earliest one takes precedense.\n+    INITIAL = 0\n+    EARLY = 1\n+    LATE = 2\n+\n+    number = 1  # Counter for \"order\"\n+\n+    def __new__(cls, *args, **kwds):\n+        self = object.__new__(cls)\n+        self.order = cls.number\n+        cls.number += 1\n+        return self\n+\n+    def __init__(self, include, late=True, initial=False):\n+        if not include:\n+            self.text = u\"\"\n+        elif include[0] == '<' and include[-1] == '>':\n+            self.text = u'#include {0}\\n'.format(include)\n+            late = False  # system include is never late\n+        else:\n+            self.text = u'#include \"{0}\"\\n'.format(include)\n+        if initial:\n+            self.location = self.INITIAL\n+        elif late:\n+            self.location = self.LATE\n+        else:\n+            self.location = self.EARLY\n+\n+    def append(self, text):\n+        self.text += text\n+\n+    def dict_update(self, d, key):",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147915388",
            "id": 147915388,
            "original_commit_id": "21712376cdd02280a95dc23219b17050fb9ddcbf",
            "original_position": 48,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 73073700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147915388",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147915545"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147915545"
                }
            },
            "author_association": "OWNER",
            "body": "This feels like it should be merged into `add_include_file()` as an optional argument. That would avoid the need to return `inc` from it.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T07:54:15Z",
            "diff_hunk": "@@ -470,18 +471,22 @@ def analyse_declarations(self, env):\n         env.in_cinclude = 1\n         self.body.analyse_declarations(env)\n         env.in_cinclude = old_cinclude_flag\n-        inc = self.include_file\n-        if inc:\n-            stats = self.body.stats\n-            if inc[0] == '<' and inc[-1] == '>':\n-                # System include => always early\n-                env.add_include_file(inc)\n-            elif stats and all(isinstance(node, CVarDefNode) for node in stats):\n-                # Generate a late include if the body is not empty and\n-                # all statements are variable or function declarations.\n-                env.add_include_file(inc, late=True)\n-            else:\n-                env.add_include_file(inc)\n+\n+        # Determine whether include should be late\n+        stats = self.body.stats\n+        if not stats:\n+            # Special case: empty 'cdef extern' blocks are early\n+            late = False\n+        else:\n+            late = all(isinstance(node, CVarDefNode) for node in stats)\n+\n+        inc = None\n+        if self.include_file:\n+            inc = env.add_include_file(self.include_file, late)\n+        if self.verbatim_include:\n+            if inc is None:\n+                inc = env.add_include_file(\"\", late)\n+            inc.append(self.verbatim_include)",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147915545",
            "id": 147915545,
            "original_commit_id": "21712376cdd02280a95dc23219b17050fb9ddcbf",
            "original_position": 43,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 73073700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147915545",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147917148"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147917148"
                }
            },
            "author_association": "OWNER",
            "body": "Shouldn't happen here. The code writer takes Unicode strings and does the encoding on the way out.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T08:06:48Z",
            "diff_hunk": "@@ -54,6 +54,75 @@ def generate_c_code_config(env, options):\n         c_line_in_traceback=options.c_line_in_traceback)\n \n \n+class IncludeCode(object):\n+    \"\"\"\n+    An include file and/or verbatim C code to be included in the\n+    generated sources.\n+    \"\"\"\n+    # attributes:\n+    #\n+    #  text      unicode: C code to be generated\n+    #  location  int: where to put this include in the C sources, one\n+    #            of the constants INITIAL, EARLY, LATE\n+    #  order     int: sorting order (automatically set)\n+\n+    # Constants for location. If the same include occurs with different\n+    # locations, the earliest one takes precedense.\n+    INITIAL = 0\n+    EARLY = 1\n+    LATE = 2\n+\n+    number = 1  # Counter for \"order\"\n+\n+    def __new__(cls, *args, **kwds):\n+        self = object.__new__(cls)\n+        self.order = cls.number\n+        cls.number += 1\n+        return self\n+\n+    def __init__(self, include, late=True, initial=False):\n+        if not include:\n+            self.text = u\"\"\n+        elif include[0] == '<' and include[-1] == '>':\n+            self.text = u'#include {0}\\n'.format(include)\n+            late = False  # system include is never late\n+        else:\n+            self.text = u'#include \"{0}\"\\n'.format(include)\n+        if initial:\n+            self.location = self.INITIAL\n+        elif late:\n+            self.location = self.LATE\n+        else:\n+            self.location = self.EARLY\n+\n+    def append(self, text):\n+        self.text += text\n+\n+    def dict_update(self, d, key):\n+        \"\"\"\n+        Insert `self` in dict `d` with key `key`. If an element with\n+        that key already exists, update only the `location` attribute\n+        where the smallest number takes precedence. Return `d[key]`.\n+        \"\"\"\n+        if key in d:\n+            other = d[key]\n+            other.location = min(self.location, other.location)\n+            return other\n+        else:\n+            d[key] = self\n+            return self\n+\n+    def sortkey(self):\n+        return self.order\n+\n+    def __str__(self):\n+        text = self.text\n+        if not isinstance(text, str):\n+            # Python 2: encode unicode -> str\n+            text = text.encode('utf-8')",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147917148",
            "id": 147917148,
            "original_commit_id": "21712376cdd02280a95dc23219b17050fb9ddcbf",
            "original_position": 69,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 73073700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147917148",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147917318"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147917318"
                }
            },
            "author_association": "OWNER",
            "body": "This should get rid of the trailing backslash. `code.putln()` does that for us.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T08:07:56Z",
            "diff_hunk": "@@ -54,6 +54,75 @@ def generate_c_code_config(env, options):\n         c_line_in_traceback=options.c_line_in_traceback)\n \n \n+class IncludeCode(object):\n+    \"\"\"\n+    An include file and/or verbatim C code to be included in the\n+    generated sources.\n+    \"\"\"\n+    # attributes:\n+    #\n+    #  text      unicode: C code to be generated\n+    #  location  int: where to put this include in the C sources, one\n+    #            of the constants INITIAL, EARLY, LATE\n+    #  order     int: sorting order (automatically set)\n+\n+    # Constants for location. If the same include occurs with different\n+    # locations, the earliest one takes precedense.\n+    INITIAL = 0\n+    EARLY = 1\n+    LATE = 2\n+\n+    number = 1  # Counter for \"order\"\n+\n+    def __new__(cls, *args, **kwds):\n+        self = object.__new__(cls)\n+        self.order = cls.number\n+        cls.number += 1\n+        return self\n+\n+    def __init__(self, include, late=True, initial=False):\n+        if not include:\n+            self.text = u\"\"\n+        elif include[0] == '<' and include[-1] == '>':\n+            self.text = u'#include {0}\\n'.format(include)",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147917318",
            "id": 147917318,
            "original_commit_id": "21712376cdd02280a95dc23219b17050fb9ddcbf",
            "original_position": 34,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 73073700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147917318",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147917489"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147917489"
                }
            },
            "author_association": "OWNER",
            "body": "I'd rather store and serialise the parts separately.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T08:09:09Z",
            "diff_hunk": "@@ -54,6 +54,75 @@ def generate_c_code_config(env, options):\n         c_line_in_traceback=options.c_line_in_traceback)\n \n \n+class IncludeCode(object):\n+    \"\"\"\n+    An include file and/or verbatim C code to be included in the\n+    generated sources.\n+    \"\"\"\n+    # attributes:\n+    #\n+    #  text      unicode: C code to be generated\n+    #  location  int: where to put this include in the C sources, one\n+    #            of the constants INITIAL, EARLY, LATE\n+    #  order     int: sorting order (automatically set)\n+\n+    # Constants for location. If the same include occurs with different\n+    # locations, the earliest one takes precedense.\n+    INITIAL = 0\n+    EARLY = 1\n+    LATE = 2\n+\n+    number = 1  # Counter for \"order\"\n+\n+    def __new__(cls, *args, **kwds):\n+        self = object.__new__(cls)\n+        self.order = cls.number\n+        cls.number += 1\n+        return self\n+\n+    def __init__(self, include, late=True, initial=False):\n+        if not include:\n+            self.text = u\"\"\n+        elif include[0] == '<' and include[-1] == '>':\n+            self.text = u'#include {0}\\n'.format(include)\n+            late = False  # system include is never late\n+        else:\n+            self.text = u'#include \"{0}\"\\n'.format(include)\n+        if initial:\n+            self.location = self.INITIAL\n+        elif late:\n+            self.location = self.LATE\n+        else:\n+            self.location = self.EARLY\n+\n+    def append(self, text):\n+        self.text += text",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147917489",
            "id": 147917489,
            "original_commit_id": "21712376cdd02280a95dc23219b17050fb9ddcbf",
            "original_position": 46,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 73073700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147917489",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147957512"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147957512"
                }
            },
            "author_association": "OWNER",
            "body": "`suborder` as key?",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T11:02:08Z",
            "diff_hunk": "@@ -1249,24 +1268,30 @@ def lookup_submodule(self, name):\n             module = module.lookup_submodule(submodule)\n         return module\n \n-    def add_include_file(self, filename, late=False):\n-        if filename in self.python_include_files:\n-            return\n-        # Possibly, the same include appears both as early and as late\n-        # include. We'll deal with this at code generation time.\n-        if late:\n-            incs = self.include_files_late\n-        else:\n-            incs = self.include_files_early\n-        if filename not in incs:\n-            incs.append(filename)\n+    def add_include_file(self, filename, verbatim_include=None, late=False):\n+        \"\"\"\n+        Add `filename` as include file. Add `verbatim_include` as\n+        verbatim text in the C file.\n+        Both `filename` and `verbatim_include` can be `None` or empty.\n+        \"\"\"\n+        # If filename is None or empty, this is just a template for\n+        # verbatim_include below.\n+        inc = Code.IncludeCode(filename, late=late)\n+        if filename:\n+            inc = inc.dict_update(self.c_includes, filename)\n+        if verbatim_include:\n+            # Add verbatim_include with the same location and order such\n+            # that it comes right after the include \"inc\" in the\n+            # generated file.\n+            verb = Code.IncludeCode(verbatim_include, verbatim=True,\n+                    location=inc.location, order=inc.order)\n+            # Use verb.suborder as unique dict key\n+            verb.dict_update(self.c_includes, verb.suborder)",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147957512",
            "id": 147957512,
            "original_commit_id": "2e0f99107a4b3ac469f6a519c9764905eb106af6",
            "original_position": 85,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 73124213,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147957512",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/1915#discussion_r147959267"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/1915"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/147959267"
                }
            },
            "author_association": "OWNER",
            "body": "Since both `location` and `order` can change later, the values used here seem arbitrary.",
            "commit_id": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "created_at": "2017-10-31T11:09:02Z",
            "diff_hunk": "@@ -1249,24 +1268,30 @@ def lookup_submodule(self, name):\n             module = module.lookup_submodule(submodule)\n         return module\n \n-    def add_include_file(self, filename, late=False):\n-        if filename in self.python_include_files:\n-            return\n-        # Possibly, the same include appears both as early and as late\n-        # include. We'll deal with this at code generation time.\n-        if late:\n-            incs = self.include_files_late\n-        else:\n-            incs = self.include_files_early\n-        if filename not in incs:\n-            incs.append(filename)\n+    def add_include_file(self, filename, verbatim_include=None, late=False):\n+        \"\"\"\n+        Add `filename` as include file. Add `verbatim_include` as\n+        verbatim text in the C file.\n+        Both `filename` and `verbatim_include` can be `None` or empty.\n+        \"\"\"\n+        # If filename is None or empty, this is just a template for\n+        # verbatim_include below.\n+        inc = Code.IncludeCode(filename, late=late)\n+        if filename:\n+            inc = inc.dict_update(self.c_includes, filename)\n+        if verbatim_include:\n+            # Add verbatim_include with the same location and order such\n+            # that it comes right after the include \"inc\" in the\n+            # generated file.\n+            verb = Code.IncludeCode(verbatim_include, verbatim=True,\n+                    location=inc.location, order=inc.order)",
            "html_url": "https://github.com/cython/cython/pull/1915#discussion_r147959267",
            "id": 147959267,
            "original_commit_id": "2e0f99107a4b3ac469f6a519c9764905eb106af6",
            "original_position": 83,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 73126273,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/1915",
            "updated_at": "2017-11-03T13:44:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/147959267",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1915/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a58a7dab71facb57ef8264144bdb8b7de76b9c7a/comments",
            "commit": {
                "author": {
                    "date": "2017-10-06T15:30:50Z",
                    "email": "jdemeyer@cage.ugent.be",
                    "name": "Jeroen Demeyer"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2017-11-03T13:41:33Z",
                    "email": "jdemeyer@cage.ugent.be",
                    "name": "Jeroen Demeyer"
                },
                "message": "Verbatim C code using docstring syntax.",
                "tree": {
                    "sha": "fca9051dc63d0c74191c2e9a0444c99f8d3a4c40",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fca9051dc63d0c74191c2e9a0444c99f8d3a4c40"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            },
            "html_url": "https://github.com/cython/cython/commit/a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/109f07b96f382247e0816df06334c509d57479be",
                    "sha": "109f07b96f382247e0816df06334c509d57479be",
                    "url": "https://api.github.com/repos/cython/cython/commits/109f07b96f382247e0816df06334c509d57479be"
                }
            ],
            "sha": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
            "url": "https://api.github.com/repos/cython/cython/commits/a58a7dab71facb57ef8264144bdb8b7de76b9c7a"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/1915/commits",
    "created_at": "2017-10-06T15:52:32Z",
    "diff_url": "https://github.com/cython/cython/pull/1915.diff",
    "head": {
        "label": "jdemeyer:include_string",
        "ref": "include_string",
        "repo": {
            "archive_url": "https://api.github.com/repos/jdemeyer/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/jdemeyer/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/jdemeyer/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/jdemeyer/cython/branches{/branch}",
            "clone_url": "https://github.com/jdemeyer/cython.git",
            "collaborators_url": "https://api.github.com/repos/jdemeyer/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/jdemeyer/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/jdemeyer/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/jdemeyer/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/jdemeyer/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/jdemeyer/cython/contributors",
            "created_at": "2015-01-26T10:54:42Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/jdemeyer/cython/deployments",
            "description": "A Python to C compiler",
            "downloads_url": "https://api.github.com/repos/jdemeyer/cython/downloads",
            "events_url": "https://api.github.com/repos/jdemeyer/cython/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/jdemeyer/cython/forks",
            "full_name": "jdemeyer/cython",
            "git_commits_url": "https://api.github.com/repos/jdemeyer/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/jdemeyer/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/jdemeyer/cython/git/tags{/sha}",
            "git_url": "git://github.com/jdemeyer/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/jdemeyer/cython/hooks",
            "html_url": "https://github.com/jdemeyer/cython",
            "id": 29857031,
            "issue_comment_url": "https://api.github.com/repos/jdemeyer/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/jdemeyer/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/jdemeyer/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/jdemeyer/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/jdemeyer/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/jdemeyer/cython/languages",
            "merges_url": "https://api.github.com/repos/jdemeyer/cython/merges",
            "milestones_url": "https://api.github.com/repos/jdemeyer/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "notifications_url": "https://api.github.com/repos/jdemeyer/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/jdemeyer/cython/pulls{/number}",
            "pushed_at": "2017-11-03T13:44:19Z",
            "releases_url": "https://api.github.com/repos/jdemeyer/cython/releases{/id}",
            "size": 49234,
            "ssh_url": "git@github.com:jdemeyer/cython.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/jdemeyer/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/jdemeyer/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/jdemeyer/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/jdemeyer/cython/subscription",
            "svn_url": "https://github.com/jdemeyer/cython",
            "tags_url": "https://api.github.com/repos/jdemeyer/cython/tags",
            "teams_url": "https://api.github.com/repos/jdemeyer/cython/teams",
            "trees_url": "https://api.github.com/repos/jdemeyer/cython/git/trees{/sha}",
            "updated_at": "2017-07-20T09:00:56Z",
            "url": "https://api.github.com/repos/jdemeyer/cython",
            "watchers": 1,
            "watchers_count": 1
        },
        "sha": "a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
            "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
            "followers_url": "https://api.github.com/users/jdemeyer/followers",
            "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/jdemeyer",
            "id": 3625785,
            "login": "jdemeyer",
            "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
            "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
            "repos_url": "https://api.github.com/users/jdemeyer/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/jdemeyer"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/1915",
    "id": 145187287,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/1915",
    "locked": false,
    "merge_commit_sha": "dadc9b8158f956eafa1392401e9e157daa494f15",
    "merged_at": null,
    "milestone": null,
    "number": 1915,
    "patch_url": "https://github.com/cython/cython/pull/1915.patch",
    "requested_reviewers": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/1915/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/a58a7dab71facb57ef8264144bdb8b7de76b9c7a",
    "title": "Verbatim C code using docstring syntax.",
    "updated_at": "2017-11-03T14:07:08Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/1915",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
        "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
        "followers_url": "https://api.github.com/users/jdemeyer/followers",
        "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
        "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jdemeyer",
        "id": 3625785,
        "login": "jdemeyer",
        "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
        "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
        "repos_url": "https://api.github.com/users/jdemeyer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jdemeyer"
    }
}