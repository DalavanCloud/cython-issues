{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/2067/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2067/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/2067"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/2067"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2067/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/2067"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/7b6dda4028f45db23c94feb7c0eccce8e626149f"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "A Python to C compiler",
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 626,
            "forks_count": 626,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": null,
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 471,
            "open_issues_count": 471,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2018-01-24T21:20:05Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 49545,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 2805,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2018-01-25T14:45:12Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 2805,
            "watchers_count": 2805
        },
        "sha": "800e699c0a91d5abb2ff05e77049d65c098ecbb1",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "A common use case for extension types is to instantiate them from existing C/C++ pointers without copying. The documentation is not very clear on how to do this - there is a mention of 'factory function' in [extension type reference documentation](http://cython.readthedocs.io/en/latest/src/reference/extension_types.html?highlight=factory) but no example.\r\n\r\nThis is one of the most frequently asked questions on Q/A forums and websites like stack overflow with many new users struggling to get this right the first time, or why it doesn't work for extension types from pointers but does for extension types from native types. I also struggled with this when first starting to use Cython.\r\n\r\nThis example should help with this common question. The example code works as-is and can be compiled directly with cython to see how it works. Also added a link to the guide section from the reference document.\r\n\r\nLet me know if anything else is needed and many thanks for the awesome project.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2067#discussion_r161144387"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2067"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/161144387"
                }
            },
            "author_association": "OWNER",
            "body": "There should be discussion here about pointer ownership, possibly tracked by a boolean. ",
            "commit_id": "7b6dda4028f45db23c94feb7c0eccce8e626149f",
            "created_at": "2018-01-12T05:44:49Z",
            "diff_hunk": "@@ -484,6 +484,76 @@ statically sized freelist of ``N`` instances for a given type.  Example::\n     penguin = Penguin('fish 2')  # does not need to allocate memory!\n \n \n+.. _existing-pointers-instantiation:\n+\n+Instantiation from existing C/C++ pointers\n+===========================================\n+\n+It is quite common to want to instantiate an extension class from an existing\n+(pointer to a) data structure, often as returned by external C/C++ functions.\n+\n+As extension classes can only accept Python objects as arguments in their\n+contructors, this necessitates the use of factory functions. For example, ::\n+\n+    from libc.stdlib cimport malloc, free\n+\n+    # Example C struct\n+    ctypedef struct my_c_struct:\n+        int a\n+        int b\n+\n+\n+    cdef class WrapperClass:\n+        \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+        cdef my_c_struct *_ptr\n+\n+        def __cinit__(self):\n+            # On cinit, do not create new structure but set pointer to NULL\n+            self._ptr = NULL\n+\n+        def __dealloc__(self):\n+            # De-allocate if we have a non-null pointer",
            "html_url": "https://github.com/cython/cython/pull/2067#discussion_r161144387",
            "id": 161144387,
            "original_commit_id": "de72d44066228e6c2229922f5f0148f802321cbc",
            "original_position": 32,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 88384327,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2067",
            "updated_at": "2018-01-18T14:40:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/161144387",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2067#discussion_r161144446"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2067"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/161144446"
                }
            },
            "author_association": "OWNER",
            "body": "These could also be static members on the class itself, which might be more natural than free functions. ",
            "commit_id": "7b6dda4028f45db23c94feb7c0eccce8e626149f",
            "created_at": "2018-01-12T05:45:27Z",
            "diff_hunk": "@@ -484,6 +484,76 @@ statically sized freelist of ``N`` instances for a given type.  Example::\n     penguin = Penguin('fish 2')  # does not need to allocate memory!\n \n \n+.. _existing-pointers-instantiation:\n+\n+Instantiation from existing C/C++ pointers\n+===========================================\n+\n+It is quite common to want to instantiate an extension class from an existing\n+(pointer to a) data structure, often as returned by external C/C++ functions.\n+\n+As extension classes can only accept Python objects as arguments in their\n+contructors, this necessitates the use of factory functions. For example, ::\n+\n+    from libc.stdlib cimport malloc, free\n+\n+    # Example C struct\n+    ctypedef struct my_c_struct:\n+        int a\n+        int b\n+\n+\n+    cdef class WrapperClass:\n+        \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+        cdef my_c_struct *_ptr\n+\n+        def __cinit__(self):\n+            # On cinit, do not create new structure but set pointer to NULL\n+            self._ptr = NULL\n+\n+        def __dealloc__(self):\n+            # De-allocate if we have a non-null pointer\n+            if self._ptr is not NULL:\n+                free(self._ptr)\n+\n+\n+    cdef WrapperClass PyWrapperClass(my_c_struct *_ptr):",
            "html_url": "https://github.com/cython/cython/pull/2067#discussion_r161144446",
            "id": 161144446,
            "original_commit_id": "de72d44066228e6c2229922f5f0148f802321cbc",
            "original_position": 37,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 88384327,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2067",
            "updated_at": "2018-01-18T14:40:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/161144446",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2067#discussion_r161197180"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2067"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/161197180"
                }
            },
            "author_association": "NONE",
            "body": "Can you explain a little bit what you mean by pointer ownership? Like the class has a flag that if set, means it 'owns' the pointer and should de-allocate it?",
            "commit_id": "7b6dda4028f45db23c94feb7c0eccce8e626149f",
            "created_at": "2018-01-12T11:16:39Z",
            "diff_hunk": "@@ -484,6 +484,76 @@ statically sized freelist of ``N`` instances for a given type.  Example::\n     penguin = Penguin('fish 2')  # does not need to allocate memory!\n \n \n+.. _existing-pointers-instantiation:\n+\n+Instantiation from existing C/C++ pointers\n+===========================================\n+\n+It is quite common to want to instantiate an extension class from an existing\n+(pointer to a) data structure, often as returned by external C/C++ functions.\n+\n+As extension classes can only accept Python objects as arguments in their\n+contructors, this necessitates the use of factory functions. For example, ::\n+\n+    from libc.stdlib cimport malloc, free\n+\n+    # Example C struct\n+    ctypedef struct my_c_struct:\n+        int a\n+        int b\n+\n+\n+    cdef class WrapperClass:\n+        \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+        cdef my_c_struct *_ptr\n+\n+        def __cinit__(self):\n+            # On cinit, do not create new structure but set pointer to NULL\n+            self._ptr = NULL\n+\n+        def __dealloc__(self):\n+            # De-allocate if we have a non-null pointer",
            "html_url": "https://github.com/cython/cython/pull/2067#discussion_r161197180",
            "id": 161197180,
            "in_reply_to_id": 161144387,
            "original_commit_id": "de72d44066228e6c2229922f5f0148f802321cbc",
            "original_position": 32,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 88446965,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2067",
            "updated_at": "2018-01-18T14:40:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/161197180",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
                "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
                "followers_url": "https://api.github.com/users/pkittenis/followers",
                "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
                "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pkittenis",
                "id": 1391208,
                "login": "pkittenis",
                "organizations_url": "https://api.github.com/users/pkittenis/orgs",
                "received_events_url": "https://api.github.com/users/pkittenis/received_events",
                "repos_url": "https://api.github.com/users/pkittenis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pkittenis"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2067#discussion_r161199582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2067"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/161199582"
                }
            },
            "author_association": "NONE",
            "body": "I don't think static methods would be appropriate in this case. `PyWrapperClass` could well be a `cpdef` function to be used in both C and Python space, which static methods do not currently allow. Making it a regular python function then results in it having to be called via Python even when used in C code. A `def` staticmethod also raises compiler warnings about it not being a prototype due to the `PyObject*` return type without `void` arguments.\r\n\r\nHappy to add a note that they could be written as `@staticmethods` if you'd like, depending on developer preference and how they will be used.",
            "commit_id": "7b6dda4028f45db23c94feb7c0eccce8e626149f",
            "created_at": "2018-01-12T11:30:33Z",
            "diff_hunk": "@@ -484,6 +484,76 @@ statically sized freelist of ``N`` instances for a given type.  Example::\n     penguin = Penguin('fish 2')  # does not need to allocate memory!\n \n \n+.. _existing-pointers-instantiation:\n+\n+Instantiation from existing C/C++ pointers\n+===========================================\n+\n+It is quite common to want to instantiate an extension class from an existing\n+(pointer to a) data structure, often as returned by external C/C++ functions.\n+\n+As extension classes can only accept Python objects as arguments in their\n+contructors, this necessitates the use of factory functions. For example, ::\n+\n+    from libc.stdlib cimport malloc, free\n+\n+    # Example C struct\n+    ctypedef struct my_c_struct:\n+        int a\n+        int b\n+\n+\n+    cdef class WrapperClass:\n+        \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+        cdef my_c_struct *_ptr\n+\n+        def __cinit__(self):\n+            # On cinit, do not create new structure but set pointer to NULL\n+            self._ptr = NULL\n+\n+        def __dealloc__(self):\n+            # De-allocate if we have a non-null pointer\n+            if self._ptr is not NULL:\n+                free(self._ptr)\n+\n+\n+    cdef WrapperClass PyWrapperClass(my_c_struct *_ptr):",
            "html_url": "https://github.com/cython/cython/pull/2067#discussion_r161199582",
            "id": 161199582,
            "in_reply_to_id": 161144446,
            "original_commit_id": "de72d44066228e6c2229922f5f0148f802321cbc",
            "original_position": 37,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 88449975,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2067",
            "updated_at": "2018-01-18T14:40:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/161199582",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
                "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
                "followers_url": "https://api.github.com/users/pkittenis/followers",
                "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
                "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pkittenis",
                "id": 1391208,
                "login": "pkittenis",
                "organizations_url": "https://api.github.com/users/pkittenis/orgs",
                "received_events_url": "https://api.github.com/users/pkittenis/received_events",
                "repos_url": "https://api.github.com/users/pkittenis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pkittenis"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2067#discussion_r161353504"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2067"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/161353504"
                }
            },
            "author_association": "OWNER",
            "body": "It can't be a cpdef method, for the same reason it can't just be the constructor, it must be a cdef method. I was suggesting something like\r\n\r\n```\r\ncdef class WrapperClass:\r\n    ...\r\n    @staticmethod\r\n    cdef WrapperClass create(c_data *ptr):\r\n        ...\r\n\r\n\r\ncdef WrapperClass o = WrapperClass.create(&c_data)\r\n```\r\n\r\n",
            "commit_id": "7b6dda4028f45db23c94feb7c0eccce8e626149f",
            "created_at": "2018-01-13T00:15:43Z",
            "diff_hunk": "@@ -484,6 +484,76 @@ statically sized freelist of ``N`` instances for a given type.  Example::\n     penguin = Penguin('fish 2')  # does not need to allocate memory!\n \n \n+.. _existing-pointers-instantiation:\n+\n+Instantiation from existing C/C++ pointers\n+===========================================\n+\n+It is quite common to want to instantiate an extension class from an existing\n+(pointer to a) data structure, often as returned by external C/C++ functions.\n+\n+As extension classes can only accept Python objects as arguments in their\n+contructors, this necessitates the use of factory functions. For example, ::\n+\n+    from libc.stdlib cimport malloc, free\n+\n+    # Example C struct\n+    ctypedef struct my_c_struct:\n+        int a\n+        int b\n+\n+\n+    cdef class WrapperClass:\n+        \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+        cdef my_c_struct *_ptr\n+\n+        def __cinit__(self):\n+            # On cinit, do not create new structure but set pointer to NULL\n+            self._ptr = NULL\n+\n+        def __dealloc__(self):\n+            # De-allocate if we have a non-null pointer\n+            if self._ptr is not NULL:\n+                free(self._ptr)\n+\n+\n+    cdef WrapperClass PyWrapperClass(my_c_struct *_ptr):",
            "html_url": "https://github.com/cython/cython/pull/2067#discussion_r161353504",
            "id": 161353504,
            "in_reply_to_id": 161144446,
            "original_commit_id": "de72d44066228e6c2229922f5f0148f802321cbc",
            "original_position": 37,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 88637525,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2067",
            "updated_at": "2018-01-18T14:40:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/161353504",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2067#discussion_r161353518"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2067"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/161353518"
                }
            },
            "author_association": "OWNER",
            "body": "Yep. ",
            "commit_id": "7b6dda4028f45db23c94feb7c0eccce8e626149f",
            "created_at": "2018-01-13T00:15:48Z",
            "diff_hunk": "@@ -484,6 +484,76 @@ statically sized freelist of ``N`` instances for a given type.  Example::\n     penguin = Penguin('fish 2')  # does not need to allocate memory!\n \n \n+.. _existing-pointers-instantiation:\n+\n+Instantiation from existing C/C++ pointers\n+===========================================\n+\n+It is quite common to want to instantiate an extension class from an existing\n+(pointer to a) data structure, often as returned by external C/C++ functions.\n+\n+As extension classes can only accept Python objects as arguments in their\n+contructors, this necessitates the use of factory functions. For example, ::\n+\n+    from libc.stdlib cimport malloc, free\n+\n+    # Example C struct\n+    ctypedef struct my_c_struct:\n+        int a\n+        int b\n+\n+\n+    cdef class WrapperClass:\n+        \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+        cdef my_c_struct *_ptr\n+\n+        def __cinit__(self):\n+            # On cinit, do not create new structure but set pointer to NULL\n+            self._ptr = NULL\n+\n+        def __dealloc__(self):\n+            # De-allocate if we have a non-null pointer",
            "html_url": "https://github.com/cython/cython/pull/2067#discussion_r161353518",
            "id": 161353518,
            "in_reply_to_id": 161144387,
            "original_commit_id": "de72d44066228e6c2229922f5f0148f802321cbc",
            "original_position": 32,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 88637540,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2067",
            "updated_at": "2018-01-18T14:40:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/161353518",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/2067#discussion_r162308890"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/2067"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/162308890"
                }
            },
            "author_association": "NONE",
            "body": "Sure, will make that change.",
            "commit_id": "7b6dda4028f45db23c94feb7c0eccce8e626149f",
            "created_at": "2018-01-18T10:57:18Z",
            "diff_hunk": "@@ -484,6 +484,76 @@ statically sized freelist of ``N`` instances for a given type.  Example::\n     penguin = Penguin('fish 2')  # does not need to allocate memory!\n \n \n+.. _existing-pointers-instantiation:\n+\n+Instantiation from existing C/C++ pointers\n+===========================================\n+\n+It is quite common to want to instantiate an extension class from an existing\n+(pointer to a) data structure, often as returned by external C/C++ functions.\n+\n+As extension classes can only accept Python objects as arguments in their\n+contructors, this necessitates the use of factory functions. For example, ::\n+\n+    from libc.stdlib cimport malloc, free\n+\n+    # Example C struct\n+    ctypedef struct my_c_struct:\n+        int a\n+        int b\n+\n+\n+    cdef class WrapperClass:\n+        \"\"\"A wrapper class for a C/C++ data structure\"\"\"\n+        cdef my_c_struct *_ptr\n+\n+        def __cinit__(self):\n+            # On cinit, do not create new structure but set pointer to NULL\n+            self._ptr = NULL\n+\n+        def __dealloc__(self):\n+            # De-allocate if we have a non-null pointer\n+            if self._ptr is not NULL:\n+                free(self._ptr)\n+\n+\n+    cdef WrapperClass PyWrapperClass(my_c_struct *_ptr):",
            "html_url": "https://github.com/cython/cython/pull/2067#discussion_r162308890",
            "id": 162308890,
            "in_reply_to_id": 161144446,
            "original_commit_id": "de72d44066228e6c2229922f5f0148f802321cbc",
            "original_position": 37,
            "path": "docs/src/userguide/extension_types.rst",
            "position": null,
            "pull_request_review_id": 89741646,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/2067",
            "updated_at": "2018-01-18T14:40:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/162308890",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
                "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
                "followers_url": "https://api.github.com/users/pkittenis/followers",
                "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
                "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pkittenis",
                "id": 1391208,
                "login": "pkittenis",
                "organizations_url": "https://api.github.com/users/pkittenis/orgs",
                "received_events_url": "https://api.github.com/users/pkittenis/received_events",
                "repos_url": "https://api.github.com/users/pkittenis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pkittenis"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2067/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
                "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
                "followers_url": "https://api.github.com/users/pkittenis/followers",
                "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
                "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pkittenis",
                "id": 1391208,
                "login": "pkittenis",
                "organizations_url": "https://api.github.com/users/pkittenis/orgs",
                "received_events_url": "https://api.github.com/users/pkittenis/received_events",
                "repos_url": "https://api.github.com/users/pkittenis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pkittenis"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/de72d44066228e6c2229922f5f0148f802321cbc/comments",
            "commit": {
                "author": {
                    "date": "2018-01-11T11:14:40Z",
                    "email": "zuboci@yandex.com",
                    "name": "Pan"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-01-11T11:21:52Z",
                    "email": "zuboci@yandex.com",
                    "name": "Pan"
                },
                "message": "Added documentation on extension class instantiation from existing pointer",
                "tree": {
                    "sha": "7aab12aeb1c1ef03432f068f614b5ba2dbad32e5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7aab12aeb1c1ef03432f068f614b5ba2dbad32e5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/de72d44066228e6c2229922f5f0148f802321cbc",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
                "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
                "followers_url": "https://api.github.com/users/pkittenis/followers",
                "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
                "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pkittenis",
                "id": 1391208,
                "login": "pkittenis",
                "organizations_url": "https://api.github.com/users/pkittenis/orgs",
                "received_events_url": "https://api.github.com/users/pkittenis/received_events",
                "repos_url": "https://api.github.com/users/pkittenis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pkittenis"
            },
            "html_url": "https://github.com/cython/cython/commit/de72d44066228e6c2229922f5f0148f802321cbc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/800e699c0a91d5abb2ff05e77049d65c098ecbb1",
                    "sha": "800e699c0a91d5abb2ff05e77049d65c098ecbb1",
                    "url": "https://api.github.com/repos/cython/cython/commits/800e699c0a91d5abb2ff05e77049d65c098ecbb1"
                }
            ],
            "sha": "de72d44066228e6c2229922f5f0148f802321cbc",
            "url": "https://api.github.com/repos/cython/cython/commits/de72d44066228e6c2229922f5f0148f802321cbc"
        },
        {
            "author": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
                "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
                "followers_url": "https://api.github.com/users/pkittenis/followers",
                "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
                "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pkittenis",
                "id": 1391208,
                "login": "pkittenis",
                "organizations_url": "https://api.github.com/users/pkittenis/orgs",
                "received_events_url": "https://api.github.com/users/pkittenis/received_events",
                "repos_url": "https://api.github.com/users/pkittenis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pkittenis"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7b6dda4028f45db23c94feb7c0eccce8e626149f/comments",
            "commit": {
                "author": {
                    "date": "2018-01-16T19:53:10Z",
                    "email": "zuboci@yandex.com",
                    "name": "Pan"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2018-01-18T14:40:39Z",
                    "email": "zuboci@yandex.com",
                    "name": "Pan"
                },
                "message": "fixup! Added documentation on extension class instantiation from existing pointer",
                "tree": {
                    "sha": "9de2cd4c4ae3b748b4389884482d5db582edcd90",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9de2cd4c4ae3b748b4389884482d5db582edcd90"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7b6dda4028f45db23c94feb7c0eccce8e626149f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
                "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
                "followers_url": "https://api.github.com/users/pkittenis/followers",
                "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
                "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pkittenis",
                "id": 1391208,
                "login": "pkittenis",
                "organizations_url": "https://api.github.com/users/pkittenis/orgs",
                "received_events_url": "https://api.github.com/users/pkittenis/received_events",
                "repos_url": "https://api.github.com/users/pkittenis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pkittenis"
            },
            "html_url": "https://github.com/cython/cython/commit/7b6dda4028f45db23c94feb7c0eccce8e626149f",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/de72d44066228e6c2229922f5f0148f802321cbc",
                    "sha": "de72d44066228e6c2229922f5f0148f802321cbc",
                    "url": "https://api.github.com/repos/cython/cython/commits/de72d44066228e6c2229922f5f0148f802321cbc"
                }
            ],
            "sha": "7b6dda4028f45db23c94feb7c0eccce8e626149f",
            "url": "https://api.github.com/repos/cython/cython/commits/7b6dda4028f45db23c94feb7c0eccce8e626149f"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/2067/commits",
    "created_at": "2018-01-11T11:23:14Z",
    "diff_url": "https://github.com/cython/cython/pull/2067.diff",
    "head": {
        "label": "pkittenis:ext_class_pointer_example",
        "ref": "ext_class_pointer_example",
        "repo": {
            "archive_url": "https://api.github.com/repos/pkittenis/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/pkittenis/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/pkittenis/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/pkittenis/cython/branches{/branch}",
            "clone_url": "https://github.com/pkittenis/cython.git",
            "collaborators_url": "https://api.github.com/repos/pkittenis/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/pkittenis/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/pkittenis/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/pkittenis/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/pkittenis/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/pkittenis/cython/contributors",
            "created_at": "2017-08-11T22:59:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/pkittenis/cython/deployments",
            "description": "A Python to C compiler",
            "downloads_url": "https://api.github.com/repos/pkittenis/cython/downloads",
            "events_url": "https://api.github.com/repos/pkittenis/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/pkittenis/cython/forks",
            "full_name": "pkittenis/cython",
            "git_commits_url": "https://api.github.com/repos/pkittenis/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/pkittenis/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/pkittenis/cython/git/tags{/sha}",
            "git_url": "git://github.com/pkittenis/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/pkittenis/cython/hooks",
            "html_url": "https://github.com/pkittenis/cython",
            "id": 100075556,
            "issue_comment_url": "https://api.github.com/repos/pkittenis/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/pkittenis/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/pkittenis/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/pkittenis/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/pkittenis/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/pkittenis/cython/languages",
            "license": null,
            "merges_url": "https://api.github.com/repos/pkittenis/cython/merges",
            "milestones_url": "https://api.github.com/repos/pkittenis/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "notifications_url": "https://api.github.com/repos/pkittenis/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
                "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
                "followers_url": "https://api.github.com/users/pkittenis/followers",
                "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
                "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pkittenis",
                "id": 1391208,
                "login": "pkittenis",
                "organizations_url": "https://api.github.com/users/pkittenis/orgs",
                "received_events_url": "https://api.github.com/users/pkittenis/received_events",
                "repos_url": "https://api.github.com/users/pkittenis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pkittenis"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/pkittenis/cython/pulls{/number}",
            "pushed_at": "2018-01-18T14:40:58Z",
            "releases_url": "https://api.github.com/repos/pkittenis/cython/releases{/id}",
            "size": 49518,
            "ssh_url": "git@github.com:pkittenis/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/pkittenis/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/pkittenis/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/pkittenis/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/pkittenis/cython/subscription",
            "svn_url": "https://github.com/pkittenis/cython",
            "tags_url": "https://api.github.com/repos/pkittenis/cython/tags",
            "teams_url": "https://api.github.com/repos/pkittenis/cython/teams",
            "trees_url": "https://api.github.com/repos/pkittenis/cython/git/trees{/sha}",
            "updated_at": "2017-08-11T22:59:48Z",
            "url": "https://api.github.com/repos/pkittenis/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "7b6dda4028f45db23c94feb7c0eccce8e626149f",
        "user": {
            "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
            "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
            "followers_url": "https://api.github.com/users/pkittenis/followers",
            "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
            "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/pkittenis",
            "id": 1391208,
            "login": "pkittenis",
            "organizations_url": "https://api.github.com/users/pkittenis/orgs",
            "received_events_url": "https://api.github.com/users/pkittenis/received_events",
            "repos_url": "https://api.github.com/users/pkittenis/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/pkittenis"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/2067",
    "id": 162356741,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/2067",
    "locked": false,
    "merge_commit_sha": "0b3a9ef947a912c98592388df371727edfd271b7",
    "merged_at": null,
    "milestone": null,
    "number": 2067,
    "patch_url": "https://github.com/cython/cython/pull/2067.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/2067/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/7b6dda4028f45db23c94feb7c0eccce8e626149f",
    "title": "[Docs] Added documentation on extension class instanciation from existing pointer",
    "updated_at": "2018-01-24T14:02:50Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/2067",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/1391208?v=4",
        "events_url": "https://api.github.com/users/pkittenis/events{/privacy}",
        "followers_url": "https://api.github.com/users/pkittenis/followers",
        "following_url": "https://api.github.com/users/pkittenis/following{/other_user}",
        "gists_url": "https://api.github.com/users/pkittenis/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pkittenis",
        "id": 1391208,
        "login": "pkittenis",
        "organizations_url": "https://api.github.com/users/pkittenis/orgs",
        "received_events_url": "https://api.github.com/users/pkittenis/received_events",
        "repos_url": "https://api.github.com/users/pkittenis/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pkittenis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pkittenis/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pkittenis"
    }
}