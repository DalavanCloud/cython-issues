{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Trying to transition [this](https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/join_helper.pxi.in#L98) function to use fused types instead of tempita:\r\n\r\n```\r\n# @cython.wraparound(False)\r\n# @cython.boundscheck(False)\r\ndef left_join_indexer(ndarray[join_t] left, ndarray[join_t] right):\r\n     [...]\r\n\r\nleft_join_indexer_float64 = left_join_indexer[\"float64_t\"]\r\nleft_join_indexer_float32 = left_join_indexer[\"float32_t\"]\r\nleft_join_indexer_object = left_join_indexer[\"object\"]\r\nleft_join_indexer_int32 = left_join_indexer[\"int32_t\"]\r\nleft_join_indexer_int64 = left_join_indexer[\"int64_t\"]\r\nleft_join_indexer_uint64 = left_join_indexer[\"uint64_t\"]\r\n```\r\n\r\nThis is causing test failures e.g.\r\n\r\n```\r\n____________________________________ TestJoin.test_join_mixed_non_unique_index ____________________________________\r\n\r\nself = <pandas.tests.reshape.merge.test_join.TestJoin object at 0x141ed7750>\r\n\r\n    def test_join_mixed_non_unique_index(self):\r\n        # GH 12814, unorderable types in py3 with a non-unique index\r\n        df1 = DataFrame({'a': [1, 2, 3, 4]}, index=[1, 2, 3, 'a'])\r\n        df2 = DataFrame({'b': [5, 6, 7, 8]}, index=[1, 3, 3, 4])\r\n>       result = df1.join(df2)\r\n\r\npandas/tests/reshape/merge/test_join.py:542: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\npandas/core/frame.py:6562: in join\r\n    rsuffix=rsuffix, sort=sort)\r\npandas/core/frame.py:6577: in _join_compat\r\n    suffixes=(lsuffix, rsuffix), sort=sort)\r\npandas/core/reshape/merge.py:63: in merge\r\n    return op.get_result()\r\npandas/core/reshape/merge.py:564: in get_result\r\n    join_index, left_indexer, right_indexer = self._get_join_info()\r\npandas/core/reshape/merge.py:761: in _get_join_info\r\n    sort=self.sort)\r\npandas/core/indexes/base.py:3867: in join\r\n    return this.join(other, how=how, return_indexers=return_indexers)\r\npandas/core/indexes/base.py:3877: in join\r\n    return_indexers=return_indexers)\r\npandas/core/indexes/base.py:4137: in _join_monotonic\r\n    join_index, lidx, ridx = self._left_indexer(sv, ov)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n>   def left_join_indexer(ndarray[join_t] left, ndarray[join_t] right):\r\nE   TypeError: left_join_indexer() takes exactly 2 positional arguments (3 given)\r\n```\r\n\r\nAny idea what would cause it to think 3 arguments were passed?",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`self` maybe ? Is `self._left_indexer` a function that was assigned to a class attribute?",
            "created_at": "2018-10-14T09:08:43Z",
            "html_url": "https://github.com/cython/cython/issues/2647#issuecomment-429608701",
            "id": 429608701,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2647",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTYwODcwMQ==",
            "updated_at": "2018-10-14T09:08:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/429608701",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> a function that was assigned to a class attribute?\r\n\r\nWow, yah.  In pandas.core.indexes.base its pinned to the `Index` class `_left_indexer = libjoin.left_join_indexer_object`",
            "created_at": "2018-10-14T15:09:39Z",
            "html_url": "https://github.com/cython/cython/issues/2647#issuecomment-429634115",
            "id": 429634115,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2647",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTYzNDExNQ==",
            "updated_at": "2018-10-14T15:09:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/429634115",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "node_id": "MDQ6VXNlcjgwNzg5Njg=",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2647/comments",
    "created_at": "2018-10-07T04:06:46Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2647/events",
    "html_url": "https://github.com/cython/cython/issues/2647",
    "id": 367519231,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2647/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNjc1MTkyMzE=",
    "number": 2647,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "BUG: fused types incorrectly raising TypeError by miscounting arguments",
    "updated_at": "2018-10-14T15:09:39Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2647",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
        "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
        "followers_url": "https://api.github.com/users/jbrockmendel/followers",
        "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
        "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jbrockmendel",
        "id": 8078968,
        "login": "jbrockmendel",
        "node_id": "MDQ6VXNlcjgwNzg5Njg=",
        "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
        "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
        "repos_url": "https://api.github.com/users/jbrockmendel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jbrockmendel"
    }
}