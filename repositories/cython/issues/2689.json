{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "```\r\n@cython.boundscheck(False)\r\n@cython.wraparound(False)\r\ndef row_bool_subset_object(object[:, :] values,\r\n                           ndarray[uint8_t, cast=True] mask):\r\n    cdef:\r\n        Py_ssize_t i, j, n, k, pos = 0\r\n        object[:, :] out\r\n\r\n    n, k = values.shape\r\n\r\npandas/_libs/lib.pyx:709:17: Assignment to/from slice of wrong length, expected 8, got 2\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 727, in <module>\r\n    ext_modules=maybe_cythonize(extensions, compiler_directives=directives),\r\n  File \"setup.py\", line 479, in maybe_cythonize\r\n    return cythonize(extensions, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/Cython/Build/Dependencies.py\", line 1026, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/usr/local/lib/python2.7/site-packages/Cython/Build/Dependencies.py\", line 1146, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: pandas/_libs/lib.pyx\r\n```\r\n\r\n\r\nAnother error I'm getting in the same file:\r\n\r\nThis works:\r\n```\r\ndef has_infs_f4(float32_t[:] arr) -> bint:\r\n```\r\n\r\nChanging it to this raises:\r\n```\r\ndef has_infs_f4(arr: float32_t[:]) -> bint:\r\n```\r\n\r\n---\r\nAnd last a question as long as I'm stretching my luck:\r\nAre py3-style type annotations actually _used_ by cython on non-cdef/cpdef functions?  I incorrectly wrote a return type as `bint` instead of `str` and it didn't cause any test/compile failures, making me wary.\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2689/comments",
    "created_at": "2018-10-27T18:10:02Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2689/events",
    "html_url": "https://github.com/cython/cython/issues/2689",
    "id": 374672725,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2689/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNzQ2NzI3MjU=",
    "number": 2689,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Accessing memoryview .shape raises at compile-time",
    "updated_at": "2018-10-27T18:10:02Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2689",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
        "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
        "followers_url": "https://api.github.com/users/jbrockmendel/followers",
        "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
        "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jbrockmendel",
        "id": 8078968,
        "login": "jbrockmendel",
        "node_id": "MDQ6VXNlcjgwNzg5Njg=",
        "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
        "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
        "repos_url": "https://api.github.com/users/jbrockmendel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jbrockmendel"
    }
}