{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I have a C++ class (mostly a simple struct) that I'd like to mirror in Python:\r\n```c++\r\nstruct ParseOptions {\r\n  // Parsing options\r\n\r\n  // Field delimiter\r\n  char delimiter = ',';\r\n  // Whether quoting is used\r\n  bool quoting = true;\r\n  // Quoting character (if `quoting` is true)\r\n  char quote_char = '\"';\r\n  // Whether a quote inside a value is double-quoted\r\n  bool double_quote = true;\r\n  // Whether escaping is used\r\n  bool escaping = false;\r\n  // Escaping character (if `escaping` is true)\r\n  char escape_char = '\\\\';\r\n\r\n  static ParseOptions Defaults();\r\n};\r\n```\r\n\r\nI find myself writing something like the below:\r\n```cython\r\n\r\ncdef class CSVParseOptions:\r\n    cdef:\r\n        ParseOptions options\r\n\r\n    @property\r\n    def delimiter(self):\r\n        return chr(self.options.delimiter)\r\n\r\n    @delimiter.setter\r\n    def delimiter(self, value):\r\n        self.options.delimiter = ord(value)\r\n\r\n    @property\r\n    def double_quote(self):\r\n        return self.options.double_quote\r\n\r\n    @double_quote.setter\r\n    def double_quote(self, value):\r\n        self.options.double_quote = value\r\n\r\n    # etc.\r\n```\r\n\r\nWriting all those properties by hand is quite tedious. If I could call `getattr` and `setattr` (or something similar) on the underlying C struct, I could generate those properties programmatically. Note: I don't exactly care about speed here.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Code generation would be one way of doing it. See #2596.\r\n\r\nIf you really don't care about speed, then Cython's automatic struct-to-dict conversion might be an option. I don't think it's available for C++ classes, though, only for actual structs. Allowing an explicit cast from a C++ object to a `<dict>` could be an option, though.",
            "created_at": "2018-09-13T17:47:43Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-421093502",
            "id": 421093502,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTA5MzUwMg==",
            "updated_at": "2018-09-13T17:47:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/421093502",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, I didn't know about struct-to-dict conversion. Exploiting it sounds a bit hackish (I would have to convert the whole struct back-and-forth just to set an attribute, right?). And it would have to work with C++ classes anyway.",
            "created_at": "2018-09-13T18:05:36Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-421099126",
            "id": 421099126,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTA5OTEyNg==",
            "updated_at": "2018-09-13T18:05:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/421099126",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We /could/ support this in Cython by generating code that checks the name\nagainst all known attributes, raising an attribute error if no match. Not\nsure if this is a good idea. Auto-generation of pyx files might serve well\nhere.\n\nI would also consider whether exposing the C++ class directly this way is\nthe best option, or whether a more Pythonic interface would be to have a\nclass CSVParseOptions that was constructed with keyword arguments and is\notherwise immutable.\n\nOn Thu, Sep 13, 2018 at 8:05 PM Antoine Pitrou <notifications@github.com>\nwrote:\n\n> Hmm, I didn't know about struct-to-dict conversion. Exploiting it sounds a\n> bit hackish (I would have to convert the whole struct back-and-forth just\n> to set an attribute, right?). And it would have to work with C++ classes\n> anyway.\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/2604#issuecomment-421099126>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAdqgTmdYd0nuYfKoFznwKkdcaX0dT5Dks5uap5ygaJpZM4WnG7m>\n> .\n>\n",
            "created_at": "2018-09-13T21:48:34Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-421164226",
            "id": 421164226,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE2NDIyNg==",
            "updated_at": "2018-09-13T21:48:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/421164226",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't see the point of immutability here. Being able to change parameters via attribute setting is convenient.",
            "created_at": "2018-09-15T16:41:09Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-421597014",
            "id": 421597014,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTU5NzAxNA==",
            "updated_at": "2018-09-15T16:41:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/421597014",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry, let me clarify.\n\nIn C/C++ it is standard practice to write\n\n```\nConfigObject config;\nconfig.paramA = x;\nconfig.paramB = y;\n...\ninvokeFunction(config);\n```\n\nThis is due the constraints of the language, where one only has positional\narguments, and so statements like invokeFunction(0, true, 1.5, 2.5, 3, 7,\nfalse, true, \"a\", ...) get difficult to read. This is exacerbated when\nsome, let alone many, of these may have sane defaults (but you may want to\noverride the 7th parameter without overriding the 1-6th) and of course\nmakes it easier to forward them from one function to the next. It's trying\nto fake keyword arguments.\n\nContrast this with Python, which actually has real keywords arguments that\nhandle this perfectly. (If one wants to forward this, it's typically more\nPythonic to use keyword arguments to initialize the config object itself,\nrather than create it then set attributes.) Add to this that in Python,\nunlike C, objects are passed by reference by default, making it more\ndangerous to just mutate them without defensively making a copy. And\nimmutable objects certainly have their benefits [1].\n\nFor these reasons, it's often not the best approach to simply mirror the\nC++ API when wrapping a library.\n\n[1] https://www.google.se/search?q=benefits+of+immutable+objects\n\n\n\nOn Sat, Sep 15, 2018 at 6:41 PM Antoine Pitrou <notifications@github.com>\nwrote:\n\n> I don't see the point of immutability here. Being able to change\n> parameters via attribute setting is convenient.\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/2604#issuecomment-421597014>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAdqgTwaewZHe2TEOe6MFcry6PvGJC7Qks5ubS2mgaJpZM4WnG7m>\n> .\n>\n",
            "created_at": "2018-09-17T07:23:02Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-421912786",
            "id": 421912786,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTkxMjc4Ng==",
            "updated_at": "2018-09-17T07:23:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/421912786",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Let's not exagerate the benefits of immutability here. And just because I can pass parameters by keyword arguments doesn't mean it's always practical to do so. Most Python data structures and objects are actually mutable.",
            "created_at": "2018-09-17T09:10:34Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-421937657",
            "id": 421937657,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTkzNzY1Nw==",
            "updated_at": "2018-09-17T09:10:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/421937657",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "My point was more that using keywords arguments rather than having users\ncreate an object on which they manually set attributes may be both a more\nPythonic API *and* significantly less work on your part. Granted sometimes\nit does make sense to simply mirror a C++ API (often highly influenced by\nthe particular abilities and limitations of the C++ language) when wrapping\nit for Python. That should generally be a conscious decision with\njustification.\n\nOn Mon, Sep 17, 2018 at 11:10 AM Antoine Pitrou <notifications@github.com>\nwrote:\n\n> Let's not exagerate the benefits of immutability here. And just because I\n> can pass parameters by keyword arguments doesn't mean it's always practical\n> to do so. Most Python data structures and objects are actually mutable.\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/2604#issuecomment-421937657>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAdqgZ5fgurF6VXKq-fPitntjcieIY04ks5ub2cQgaJpZM4WnG7m>\n> .\n>\n",
            "created_at": "2018-09-17T11:10:26Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-421971656",
            "id": 421971656,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTk3MTY1Ng==",
            "updated_at": "2018-09-17T11:10:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/421971656",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> My point was more that using keywords arguments rather than having users create an object on which they manually set attributes [...]\r\n\r\nIt's not either/or. I'm doing both. Changing a single parameter is a reasonable need.\r\n",
            "created_at": "2018-09-17T11:12:08Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-421972104",
            "id": 421972104,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTk3MjEwNA==",
            "updated_at": "2018-09-17T11:12:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/421972104",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Calm down, everyone â€¦ I think it is a reasonable feature request to improve this use case.\r\nNot sure if `getattr()` is the right tool, though. And I'm also not sure if it's special enough to not \"just use code generation\".\r\n\r\nMaybe we could special case `(<dict>struct)[fieldname]` somehow? I mean, Python semantics dictate that the dict must be created first because it might have side effects or fail, but I wouldn't really mind bending the rules here, since we control the semantics of the dict coercion.",
            "created_at": "2018-09-17T20:46:05Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-422164975",
            "id": 422164975,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjE2NDk3NQ==",
            "updated_at": "2018-09-17T20:46:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/422164975",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "FWIW, I think the getattr notation is more natural than the dict-casting\none. As for casting, we could let `<T>getattr(o, \"fieldname\")` return\n`<T>o.fieldname` iff o.fieldname is coercable to type T, and throw an\nexception otherwise (and probably an attribute error if the field doesn't\nexist at all).\n\nOn Mon, Sep 17, 2018 at 10:46 PM scoder <notifications@github.com> wrote:\n\n> Calm down, everyone â€¦ I think it is a reasonable feature request to\n> improve this use case.\n> Not sure if getattr() is the right tool, though. And I'm also not sure if\n> it's special enough to not \"just use code generation\".\n>\n> Maybe we could special case (<dict>struct)[fieldname] somehow? I mean,\n> Python semantics dictate that the dict must be created first because it\n> might have side effects or fail, but I wouldn't really mind bending the\n> rules here, since we control the semantics of the dict coercion.\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/2604#issuecomment-422164975>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAdqgXtkt2JSjDTszkHBeU_PKvI0LHw3ks5ucAoQgaJpZM4WnG7m>\n> .\n>\n",
            "created_at": "2018-09-18T12:05:56Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-422366224",
            "id": 422366224,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjM2NjIyNA==",
            "updated_at": "2018-09-18T12:05:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/422366224",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "+1, I ended up thinking the same thing after I write my last reply.\n",
            "created_at": "2018-09-18T14:03:06Z",
            "html_url": "https://github.com/cython/cython/issues/2604#issuecomment-422405681",
            "id": 422405681,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2604",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjQwNTY4MQ==",
            "updated_at": "2018-09-18T14:03:06Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/422405681",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2604/comments",
    "created_at": "2018-09-13T11:57:49Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-09-13T17:48:22Z",
            "event": "labeled",
            "id": 1844264659,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NDQyNjQ2NTk=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1844264659"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-09-13T17:48:22Z",
            "event": "labeled",
            "id": 1844264660,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NDQyNjQ2NjA=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1844264660"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-09-13T17:48:22Z",
            "event": "labeled",
            "id": 1844264662,
            "label": {
                "color": "444444",
                "name": "Cython Language Feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NDQyNjQ2NjI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1844264662"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2604/events",
    "html_url": "https://github.com/cython/cython/issues/2604",
    "id": 359863955,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425559948,
            "name": "Cython Language Feature",
            "node_id": "MDU6TGFiZWw0MjU1NTk5NDg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Cython%20Language%20Feature"
        },
        {
            "color": "444444",
            "default": false,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2604/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNTk4NjM5NTU=",
    "number": 2604,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "getattr() doesn't work on a cppclass",
    "updated_at": "2018-09-18T14:03:06Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2604",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
        "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
        "followers_url": "https://api.github.com/users/pitrou/followers",
        "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
        "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pitrou",
        "id": 1721820,
        "login": "pitrou",
        "node_id": "MDQ6VXNlcjE3MjE4MjA=",
        "organizations_url": "https://api.github.com/users/pitrou/orgs",
        "received_events_url": "https://api.github.com/users/pitrou/received_events",
        "repos_url": "https://api.github.com/users/pitrou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pitrou"
    }
}