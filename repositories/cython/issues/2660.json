{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Not sure if this is feasible, but I had the following situation while working on pandas hashtable code recently (simplified a bit from pandas-dev/pandas#22986 for clarity):\r\n\r\nTwo methods had substantial code overlap, with the difference being easily absorbed into a `bint` parameter - in this case, whether the `unique` method returns an inverse or not. It would be very desirable from a clarity/readability/maintenance perspective to unify the code for those two methods.\r\n\r\nI tried unifying these functions, but there was a perf-hit for the simpler case (no inverse) of about 10%, which is too much for just always calculating it by default for such a central method.\r\n\r\nI then tried (very naively) to get cython to compile the different code branches as follows:\r\n\r\n```\r\n    def _unique(self, ndarray[object] values, bint return_inverse=False):\r\n        [...]\r\n        with nogil:\r\n            for i in range(n):\r\n                [actual computation]\r\n                if return_inverse:\r\n                    [calculate inverse]\r\n\r\n    def unique(self, ndarray[object] values, bint return_inverse=False):\r\n        # define separate functions with/without inverse to force compilation\r\n        # of the different code paths for boolean \"return_inverse\"\r\n        if return_inverse:\r\n            return self._unique_with_inverse(values)\r\n        return self._unique_no_inverse(values)\r\n\r\n    def _unique_no_inverse(self, const {{dtype}}_t[:] values):\r\n        return self._unique(values, return_inverse=False)\r\n\r\n    def _unique_with_inverse(self, const {{dtype}}_t[:] values):\r\n        return self._unique(values, return_inverse=True)\r\n```\r\nbut the perf penalty remained.\r\n\r\nSumming up, it would be awesome to be able to do something like (the example below borrows from `@pytest.mark.parametrize`, but the exact syntax is not relevant to me):\r\n```\r\n    @cython.force_compile('return_inverse', [False])\r\n    def unique(self, ndarray[object] values, bint return_inverse=False):\r\n        [...]\r\n        with nogil:\r\n            for i in range(n):\r\n                [compute]\r\n                if return_inverse:\r\n                    [calculate inverse]\r\n```\r\nwith the idea being to *both* unify the code *and* maintain perf in the case where the `return_inverse`-branch doesn't need to be touched at all.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2660/comments",
    "created_at": "2018-10-15T16:39:43Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2660/events",
    "html_url": "https://github.com/cython/cython/issues/2660",
    "id": 370247685,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2660/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNzAyNDc2ODU=",
    "number": 2660,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Directive for force-compiling code branches for different bint-parameters?",
    "updated_at": "2018-10-15T22:10:03Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2660",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
        "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
        "followers_url": "https://api.github.com/users/h-vetinari/followers",
        "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
        "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/h-vetinari",
        "id": 33685575,
        "login": "h-vetinari",
        "node_id": "MDQ6VXNlcjMzNjg1NTc1",
        "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
        "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
        "repos_url": "https://api.github.com/users/h-vetinari/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/h-vetinari"
    }
}