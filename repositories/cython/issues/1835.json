{
    "assignee": null,
    "assignees": [],
    "body": "There are two code paths in ``__Pyx_PyNumber_IntOrLong``, one with ``CYTHON_USE_TYPE_SLOTS`` used on CPython and the other one used on PyPy. The PyPy one calls ``PyNumber_Int(obj)`` which is equivalent to ``int(obj)`` and will succeed when obj is \"5\", but the one using slots will raise.\r\n\r\nWhich tests exercise this code path, what could a possible fix look like?\r\n\r\nNote that the tests should be run with ``--no-refnanny`` on PyPy to avoid accessing fresh PyTuples with NULL values still not assigned",
    "closed_at": null,
    "comment_data": [
        {
            "body": "Thanks for your continuous input, Matti. I appreciate it.\r\n\r\nGood call about the refnanny, I've disable it not. We had originally disabled it in the tests, but I enabled it at some point because it seemed to work. It does not help much since the distinct code paths for PyPy that it checks are rare, and I can see that it's outright dangerous in some cases.\r\n\r\nI'm a bit unsure regarding your actual question, because the function is definitely used for converting non-int/long object values to numbers. I'll have to take a look. It's part of the normal object to C number conversion.",
            "created_at": "2017-08-23T08:19:41Z",
            "html_url": "https://github.com/cython/cython/issues/1835#issuecomment-324257050",
            "id": 324257050,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1835",
            "updated_at": "2017-08-23T08:19:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/324257050",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "body": "Thanks. FWIW, I am looking into enabling ``CYTHON_USE_TYPE_SLOTS`` for the upcoming PyPy 5.9 release in a few weeks, that might remove much of the incompatibilities and simplify the code paths. I just implemented a always-return-false ``PyType_IS_GC`` on PyPy's HEAD, so tomorrow's nightly might just be ``CYTHON_USE_TYPE_SLOTS`` compatible enough to enable for ``PYPY_VERSION_NUM  >= 0x05090000``",
            "created_at": "2017-08-23T10:22:19Z",
            "html_url": "https://github.com/cython/cython/issues/1835#issuecomment-324287229",
            "id": 324287229,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1835",
            "updated_at": "2017-08-23T10:22:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/324287229",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/823911?v=4",
                "events_url": "https://api.github.com/users/mattip/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattip/followers",
                "following_url": "https://api.github.com/users/mattip/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattip",
                "id": 823911,
                "login": "mattip",
                "organizations_url": "https://api.github.com/users/mattip/orgs",
                "received_events_url": "https://api.github.com/users/mattip/received_events",
                "repos_url": "https://api.github.com/users/mattip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattip"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1835/comments",
    "created_at": "2017-08-22T21:48:50Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1835/events",
    "html_url": "https://github.com/cython/cython/issues/1835",
    "id": 252099600,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1835/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1835,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "__Pyx_PyNumber_IntOrLong(\"5\") does not raise on PyPy",
    "updated_at": "2017-08-23T10:22:19Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1835",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/823911?v=4",
        "events_url": "https://api.github.com/users/mattip/events{/privacy}",
        "followers_url": "https://api.github.com/users/mattip/followers",
        "following_url": "https://api.github.com/users/mattip/following{/other_user}",
        "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mattip",
        "id": 823911,
        "login": "mattip",
        "organizations_url": "https://api.github.com/users/mattip/orgs",
        "received_events_url": "https://api.github.com/users/mattip/received_events",
        "repos_url": "https://api.github.com/users/mattip/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mattip"
    }
}