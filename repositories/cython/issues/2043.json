{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "While testing Astropy with Python 3.7a3 and Numpy 1.14pre I get [failures](https://gist.github.com/saimn/fa76010f83131f525dc747d1dac5840c) with lead me to this [piece of Cython code](https://github.com/astropy/astropy/blob/master/astropy/io/ascii/cparser.pyx#L939-L944):\r\n```\r\n        for key, val in fill_values.items():\r\n            try:\r\n                self.fill_values[int(key)] = val\r\n                self.fill_values[float(key)] = val\r\n            except (ValueError, np.ma.MaskError):\r\n                pass\r\n```\r\nwhere `key` can be a `numpy.ma.core.MaskedConstant` subclass (with a `__hash__` value). And I get this traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 11, in <module>\r\n    t.write('test.csv', overwrite=True)\r\n  File \"/home/simon/dev/astropy/astropy/table/table.py\", line 2536, in write\r\n    io_registry.write(self, *args, **kwargs)\r\n  File \"/home/simon/dev/astropy/astropy/io/registry.py\", line 564, in write\r\n    writer(data, *args, **kwargs)\r\n  File \"/home/simon/dev/astropy/astropy/io/ascii/connect.py\", line 86, in write_csv\r\n    return write(table, filename, **kwargs)\r\n  File \"/home/simon/dev/astropy/astropy/io/ascii/ui.py\", line 880, in write\r\n    writer.write(table, output)\r\n  File \"/home/simon/dev/astropy/astropy/io/ascii/fastbasic.py\", line 194, in write\r\n    self._write(table, output, {'fill_values': [(core.masked, '')]})\r\n  File \"/home/simon/dev/astropy/astropy/io/ascii/fastbasic.py\", line 170, in _write\r\n    writer = cparser.FastWriter(table, **write_kwargs)\r\nSystemError: <class 'astropy.io.ascii.cparser.FastWriter'> returned NULL without setting an error\r\n```\r\nI found a number of workarounds that avoid the crash, like printing the `fill_values` dict before the loop, or printing a random number or str in the except clause (before `pass`), or maybe more interesting getting a local reference for `MaskError` before the loop and using `except (ValueError, MaskError)`.\r\n\r\nIs there a known reason for this error, which happen only with Python 3.7 ?",
    "closed_at": "2017-12-15T08:41:52Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Using a Python recompiled in debug mode, I managed to get a crash (it is not systematic, especially when running inside gdb):\r\n```\r\n(gdb) bt\r\n#0  0x00007ffff70e3860 in raise () from /usr/lib/libc.so.6\r\n#1  0x00007ffff70e4ec9 in abort () from /usr/lib/libc.so.6\r\n#2  0x00007ffff70dc0bc in __assert_fail_base () from /usr/lib/libc.so.6\r\n#3  0x00007ffff70dc133 in __assert_fail () from /usr/lib/libc.so.6\r\n#4  0x00005555556980e5 in _PyType_Lookup (type=0x555555b1f1c0 <PyModule_Type>, \r\n    name=0x7ffff0625d60) at Objects/typeobject.c:3037\r\n#5  0x00005555556781da in _PyObject_GenericGetAttrWithDict (\r\n    obj=0x7ffff06202d8, name=0x7ffff0625d60, dict=0x0) at Objects/object.c:1127\r\n#6  0x0000555555678667 in PyObject_GenericGetAttr (obj=0x7ffff06202d8, \r\n    name=0x7ffff0625d60) at Objects/object.c:1195\r\n#7  0x0000555555674438 in module_getattro (m=0x7ffff06202d8, \r\n    name=0x7ffff0625d60) at Objects/moduleobject.c:683\r\n#8  0x00007fffed2b237c in __Pyx_PyObject_GetAttrStr (obj=0x7ffff06202d8, \r\n    attr_name=0x7ffff0625d60) at astropy/io/ascii/cparser.c:1302\r\n#9  0x00007fffed30604e in __pyx_pf_7astropy_2io_5ascii_7cparser_10FastWriter___cinit__ (__pyx_v_self=0x7fffec70b948, __pyx_v_table=0x7fffed55f670, \r\n    __pyx_v_delimiter=0x7ffff6dd0178, \r\n    __pyx_v_comment=0x555555b1f820 <_Py_NoneStruct>, \r\n    __pyx_v_quotechar=0x7ffff66b0040, __pyx_v_expchar=0x7ffff7e5c318, \r\n    __pyx_v_formats=0x555555b1f820 <_Py_NoneStruct>, \r\n    __pyx_v_strip_whitespace=0x555555b08c80 <_Py_TrueStruct>, \r\n    __pyx_v_names=0x555555b1f820 <_Py_NoneStruct>, \r\n    __pyx_v_include_names=0x555555b1f820 <_Py_NoneStruct>, \r\n    =0x555555b1f820 <_Py_NoneStruct>, __pyx_v_fill_values=0x7fffec48a3a0, __pyx_v_fill_include_names=0x555555b1f820 <_Py_NoneStruct>, \r\n    __pyx_v_fill_exclude_names=0x555555b1f820 <_Py_NoneStruct>, __pyx_v_fast_writer=0x7fffec47d850) at astropy/io/ascii/cparser.c:17865\r\n#10 0x00007fffed301af3 in __pyx_pw_7astropy_2io_5ascii_7cparser_10FastWriter_1__cinit__ (__pyx_v_self=0x7fffec70b948, __pyx_args=0x7ffff7e04260, __pyx_kwds=0x7fffec47d238)\r\n    at astropy/io/ascii/cparser.c:17228\r\n#11 0x00007fffed3297d9 in __pyx_tp_new_7astropy_2io_5ascii_7cparser_FastWriter (t=0x7fffed54cda0 <__pyx_type_7astropy_2io_5ascii_7cparser_FastWriter>, a=0x7ffff7e04260, k=0x7fffec47d238)\r\n    at astropy/io/ascii/cparser.c:24891\r\n```\r\nThe #9 (cparser.c:17865) matches the `except (..., np.ma.MaskError)` line, and more specifically getting `MaskError` from `np.ma` (crashes on the last line from the excerpt below):\r\n```\r\n      __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 943, __pyx_L15_except_error)\r\n      __Pyx_GOTREF(__pyx_t_5);\r\n      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_ma); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 943, __pyx_L15_except_error)\r\n      __Pyx_GOTREF(__pyx_t_3);\r\n      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\r\n      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_MaskError); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 943, __pyx_L15_except_error)\r\n```",
            "created_at": "2017-12-14T13:58:35Z",
            "html_url": "https://github.com/cython/cython/issues/2043#issuecomment-351717805",
            "id": 351717805,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTcxNzgwNQ==",
            "updated_at": "2017-12-14T14:00:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/351717805",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/311639?v=4",
                "events_url": "https://api.github.com/users/saimn/events{/privacy}",
                "followers_url": "https://api.github.com/users/saimn/followers",
                "following_url": "https://api.github.com/users/saimn/following{/other_user}",
                "gists_url": "https://api.github.com/users/saimn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/saimn",
                "id": 311639,
                "login": "saimn",
                "node_id": "MDQ6VXNlcjMxMTYzOQ==",
                "organizations_url": "https://api.github.com/users/saimn/orgs",
                "received_events_url": "https://api.github.com/users/saimn/received_events",
                "repos_url": "https://api.github.com/users/saimn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/saimn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/saimn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/saimn"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The generated code doesn't seem to be correctly handling exceptions raised while processing the `except` clauses. \r\nHere's a snippet which causes this error, and also the opposite (value returned but an error set):\r\n\r\n```python\r\nimport threading  # Module with an exception class.\r\ncdef exc(): raise SyntaxError()  # cdef, so directly called. \r\n\r\ndef null_without_error():\r\n    try:\r\n        raise Exception\r\n    except threading.ThreadError:\r\n        pass\r\n\r\ndef value_with_error():\r\n    try:\r\n        raise Exception\r\n    except exc():\r\n        print('Crash')\r\n```\r\nIn the first original error, I suspect something in the process of the module `getattr` is catching and resetting the error value, then returning the right value. The version-specific crash probably relates to how exceptions are now stored in thread storage. \r\n\r\nThe second crashes in 3.6 as well as 3.7.\r\n\r\nIn both cases, I think the caught exception needs to be saved off into local variables, not read directly from Python's global state (in addition to exceptions 'running' from outside the `try` block). Otherwise any external code could overwrite it. `ceval.c` stores it in the stack, so it doesn't have this problem.",
            "created_at": "2017-12-14T22:31:36Z",
            "html_url": "https://github.com/cython/cython/issues/2043#issuecomment-351856339",
            "id": 351856339,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTg1NjMzOQ==",
            "updated_at": "2017-12-14T22:31:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/351856339",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Already fixed in latest master.",
            "created_at": "2017-12-15T08:41:52Z",
            "html_url": "https://github.com/cython/cython/issues/2043#issuecomment-351946764",
            "id": 351946764,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTk0Njc2NA==",
            "updated_at": "2017-12-15T08:41:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/351946764",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Great, thanks!",
            "created_at": "2017-12-15T08:43:40Z",
            "html_url": "https://github.com/cython/cython/issues/2043#issuecomment-351947098",
            "id": 351947098,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTk0NzA5OA==",
            "updated_at": "2017-12-15T08:43:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/351947098",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/311639?v=4",
                "events_url": "https://api.github.com/users/saimn/events{/privacy}",
                "followers_url": "https://api.github.com/users/saimn/followers",
                "following_url": "https://api.github.com/users/saimn/following{/other_user}",
                "gists_url": "https://api.github.com/users/saimn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/saimn",
                "id": 311639,
                "login": "saimn",
                "node_id": "MDQ6VXNlcjMxMTYzOQ==",
                "organizations_url": "https://api.github.com/users/saimn/orgs",
                "received_events_url": "https://api.github.com/users/saimn/received_events",
                "repos_url": "https://api.github.com/users/saimn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/saimn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/saimn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/saimn"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hello. Exactly which commit to `master` fixed this? I am curious on why this error still happens on Astropy for Cython 0.28.5. Thanks!",
            "created_at": "2018-09-10T15:54:53Z",
            "html_url": "https://github.com/cython/cython/issues/2043#issuecomment-419964196",
            "id": 419964196,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk2NDE5Ng==",
            "updated_at": "2018-09-10T15:54:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/419964196",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/2090236?v=4",
                "events_url": "https://api.github.com/users/pllim/events{/privacy}",
                "followers_url": "https://api.github.com/users/pllim/followers",
                "following_url": "https://api.github.com/users/pllim/following{/other_user}",
                "gists_url": "https://api.github.com/users/pllim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pllim",
                "id": 2090236,
                "login": "pllim",
                "node_id": "MDQ6VXNlcjIwOTAyMzY=",
                "organizations_url": "https://api.github.com/users/pllim/orgs",
                "received_events_url": "https://api.github.com/users/pllim/received_events",
                "repos_url": "https://api.github.com/users/pllim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pllim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pllim/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pllim"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2043/comments",
    "created_at": "2017-12-13T22:00:30Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-12-15T08:41:52Z",
            "event": "closed",
            "id": 1389189832,
            "node_id": "MDExOkNsb3NlZEV2ZW50MTM4OTE4OTgzMg==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1389189832"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2043/events",
    "html_url": "https://github.com/cython/cython/issues/2043",
    "id": 281911788,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2043/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyODE5MTE3ODg=",
    "number": 2043,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Exception catching failure with Python 3.7a3",
    "updated_at": "2018-09-10T15:54:54Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2043",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/311639?v=4",
        "events_url": "https://api.github.com/users/saimn/events{/privacy}",
        "followers_url": "https://api.github.com/users/saimn/followers",
        "following_url": "https://api.github.com/users/saimn/following{/other_user}",
        "gists_url": "https://api.github.com/users/saimn/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/saimn",
        "id": 311639,
        "login": "saimn",
        "node_id": "MDQ6VXNlcjMxMTYzOQ==",
        "organizations_url": "https://api.github.com/users/saimn/orgs",
        "received_events_url": "https://api.github.com/users/saimn/received_events",
        "repos_url": "https://api.github.com/users/saimn/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/saimn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/saimn/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/saimn"
    }
}