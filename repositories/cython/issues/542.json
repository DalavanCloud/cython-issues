{
    "assignee": null,
    "assignees": [],
    "body": "```\r\n$ cat /etc/*-release | grep \\^NAME; python --version; cython --version    \r\nNAME=\"Arch Linux\"\r\nPython 3.5.2\r\nCython version 0.24.1\r\n```\r\n\r\nLet's allocate some memory, either for one type or generically (you can imagine similar stuff to allocate memoryviews).\r\n```\r\n$ cat foo.pyx && cythonize -b foo.pyx >/dev/null\r\nfrom libc.stdlib cimport malloc\r\nfrom cython cimport numeric\r\n\r\ncdef double[::1] alloc_double(double* (*alloc)(size_t)):\r\n    return <double[:1:1]>alloc(sizeof(double))\r\n\r\ndef example_use():\r\n    return alloc_double(<double* (*)(size_t)>&malloc)\r\n\r\ncdef numeric[::1] alloc_generic(numeric* (*alloc)(size_t)):\r\n    return <numeric[:1:1]>alloc(sizeof(numeric))\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\ndef example_use():\r\n    return alloc_double(<double* (*)(size_t)>&malloc)\r\n\r\ncdef numeric[::1] alloc_generic(numeric* (*alloc)(size_t)):\r\n    return <numeric[:1:1]>alloc(sizeof(numeric))\r\n                               ^\r\n------------------------------------------------------------\r\n\r\nfoo.pyx:11:32: Compiler crash in AnalyseExpressionsTransform\r\n\r\nModuleNode.body = StatListNode(foo.pyx:1:0)\r\nStatListNode.stats[3] = CFuncDefNode(foo.pyx:10:5,\r\n    args = [...]/1,\r\n    modifiers = [...]/0,\r\n    visibility = 'private')\r\nFile 'Nodes.py', line 429, in analyse_expressions: StatListNode(foo.pyx:11:4,\r\n    is_terminator = True)\r\nFile 'Nodes.py', line 5550, in analyse_expressions: ReturnStatNode(foo.pyx:11:4,\r\n    is_terminator = True)\r\nFile 'ExprNodes.py', line 9879, in analyse_types: CythonArrayNode(foo.pyx:11:11,\r\n    is_temp = True,\r\n    mode = 'c',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 5048, in analyse_types: SimpleCallNode(foo.pyx:11:31,\r\n    analysed = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 10140, in analyse_types: SizeofVarNode(foo.pyx:11:32,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/usr/lib/python3.5/site-packages/Cython/Compiler/ExprNodes.py\", line 10140, in analyse_types\r\n    self.arg_type = self.arg_type.specialize(env.fused_to_specific)\r\n  File \"/usr/lib/python3.5/site-packages/Cython/Compiler/PyrexTypes.py\", line 1491, in specialize\r\n    return values[self]\r\nTypeError: 'NoneType' object is not subscriptable\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/cythonize\", line 9, in <module>\r\n    load_entry_point('Cython==0.24.1', 'console_scripts', 'cythonize')()\r\n  File \"/usr/lib/python3.5/site-packages/Cython/Build/Cythonize.py\", line 196, in main\r\n    cython_compile(path, options)\r\n  File \"/usr/lib/python3.5/site-packages/Cython/Build/Cythonize.py\", line 90, in cython_compile\r\n    **options.options)\r\n  File \"/usr/lib/python3.5/site-packages/Cython/Build/Dependencies.py\", line 915, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/usr/lib/python3.5/site-packages/Cython/Build/Dependencies.py\", line 1037, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: /tmp/foo/foo.pyx\r\n```\r\n\r\n(Initially reported (a while ago) on cython-users.)",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/542/comments",
    "created_at": "2016-07-28T07:01:27Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/542/events",
    "html_url": "https://github.com/cython/cython/issues/542",
    "id": 168027041,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/542/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 542,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "sizeof(fusedtype) crashes Cython when fusedtype is given via a function pointer",
    "updated_at": "2016-07-28T07:01:27Z",
    "url": "https://api.github.com/repos/cython/cython/issues/542",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1322974?v=3",
        "events_url": "https://api.github.com/users/anntzer/events{/privacy}",
        "followers_url": "https://api.github.com/users/anntzer/followers",
        "following_url": "https://api.github.com/users/anntzer/following{/other_user}",
        "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/anntzer",
        "id": 1322974,
        "login": "anntzer",
        "organizations_url": "https://api.github.com/users/anntzer/orgs",
        "received_events_url": "https://api.github.com/users/anntzer/received_events",
        "repos_url": "https://api.github.com/users/anntzer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/anntzer"
    }
}