{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "http://bugs.python.org/issue25791 introduced a new warning when an import is attempted with neither `__package__` nor `__spec__` defined in the current globals dict.  This warning now appears with many Cython-compiled extension modules (such as Pandas or multidict).\r\n\r\nDiagnosing this is a bit tedious, but Andrew Svetlov's multidict package (https://github.com/aio-libs/multidict/issues/79) is a good starting point.  Apparently the warning isn't displayed when importing the Cythonized module itself but *when importing another module* from the Cython module's top-level.  Case-in-point:\r\n\r\n```\r\n$ python -We -c \"import multidict\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/antoine/multidict/multidict/__init__.py\", line 24, in <module>\r\n    __import__('_multidict', globals=globals(), level=1)\r\n  File \"multidict/_multidict.pyx\", line 1, in init multidict._multidict (multidict/_multidict.c:14817)\r\n    import sys\r\nImportWarning: can't resolve package from __spec__ or __package__, falling back on __name__ and __path__\r\n```\r\n\r\nIf I move around the \"import sys\" line in `_multidict.pyx` and re-compile the package, the line number in the traceback above also changes.\r\n\r\nCython may therefore need to define `__spec__` or `__package__` when executing top-level module code. The problem is where it should get it from, so perhaps this is really a CPython issue.",
    "closed_at": "2017-06-26T22:43:37Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "@asvetlov @brettcannon @ncoghlan",
            "created_at": "2017-05-28T08:31:37Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-304500489",
            "id": 304500489,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-05-28T08:31:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/304500489",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "NONE",
            "body": "`__package__` is just a pre-calculated result for `__name__ if '__path__' in globals() else __name__.rpartition('.')[0]` (hence the \"falling back on ...\" wording in the warning), so the simplest way to get the warning to go away would be for Cython to start setting that attribute automatically during module initialisation.\r\n\r\nSetting `__spec__` is trickier, and would probably entail switching Cython over to using multi-phase initialisation on 3.5+: https://github.com/cython/cython/issues/1715",
            "created_at": "2017-05-29T00:50:07Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-304551427",
            "id": 304551427,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-05-29T00:50:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/304551427",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
                "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ncoghlan/followers",
                "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ncoghlan",
                "id": 1026649,
                "login": "ncoghlan",
                "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
                "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
                "repos_url": "https://api.github.com/users/ncoghlan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ncoghlan"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ok, @ncoghlan and I managed to diagnose the issue: Cython emulates Python 2-style implicit relative imports on Python 3 (see https://bugs.python.org/issue25791#msg294668). To disable the Python 3.6 warning, one has to add `from __future__ import absolute_import` at the top of every Cython source file.",
            "created_at": "2017-05-29T07:16:13Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-304590138",
            "id": 304590138,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-05-29T07:16:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/304590138",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "NONE",
            "body": "Maybe to note, probably had to add those future imports, but in the end on two cases had to do this change on top of that (there was no future import before):\r\n```diff\r\n-from . import _ufuncs\r\n+from scipy.special import _ufuncs\r\n```",
            "created_at": "2017-06-26T21:15:04Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311184001",
            "id": 311184001,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T21:15:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311184001",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/61977?v=4",
                "events_url": "https://api.github.com/users/seberg/events{/privacy}",
                "followers_url": "https://api.github.com/users/seberg/followers",
                "following_url": "https://api.github.com/users/seberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seberg",
                "id": 61977,
                "login": "seberg",
                "organizations_url": "https://api.github.com/users/seberg/orgs",
                "received_events_url": "https://api.github.com/users/seberg/received_events",
                "repos_url": "https://api.github.com/users/seberg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seberg"
            }
        },
        {
            "author_association": "OWNER",
            "body": "From a user perspective, it's best to switch on `__future__.absolute_import` and use explicit relative imports (or write Py3 code), because it reduces the overhead at import time. So the warning has its merits. ;-)\r\nI hope to find some time soon to look into multi-phase module initialisation. That should resolve the underlying problem (and then some).",
            "created_at": "2017-06-26T21:49:20Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311192098",
            "id": 311192098,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T21:49:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311192098",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, it's a bit surprising to have to add a `__future__` import for a functionality that's actually standard in the Python version you're using ;-)",
            "created_at": "2017-06-26T21:51:42Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311192572",
            "id": 311192572,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T21:51:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311192572",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "NONE",
            "body": "@scoder but the relative import with `form . import _ufuncs` did not seem to work for python modules? Then again, probably I completely misunderstood :).",
            "created_at": "2017-06-26T21:54:21Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311193146",
            "id": 311193146,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T21:54:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311193146",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/61977?v=4",
                "events_url": "https://api.github.com/users/seberg/events{/privacy}",
                "followers_url": "https://api.github.com/users/seberg/followers",
                "following_url": "https://api.github.com/users/seberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seberg",
                "id": 61977,
                "login": "seberg",
                "organizations_url": "https://api.github.com/users/seberg/orgs",
                "received_events_url": "https://api.github.com/users/seberg/received_events",
                "repos_url": "https://api.github.com/users/seberg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seberg"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Once Cython code is translated to C, its semantics are fixed. They should not change based on the *Python* version that you build/import the module into. CPython only avoids this issue by not allowing byte code to be reused across the Python 2/3 boundary.",
            "created_at": "2017-06-26T21:55:40Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311193395",
            "id": 311193395,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T21:55:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311193395",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "You could use preprocessor macros to switch between the 2.x and 3.x variants, no?",
            "created_at": "2017-06-26T21:56:39Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311193615",
            "id": 311193615,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T21:56:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311193615",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "OWNER",
            "body": "We obviously do :-)\r\nWith \"semantics\" I meant Python code semantics, not C code semantics. If the Cython code was written with Python 2.x semantics (and without future import), then the generated C code must emulate those semantics also in Python 3.x. Otherwise, the C code would no longer be platform independent.",
            "created_at": "2017-06-26T22:00:09Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311194323",
            "id": 311194323,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:00:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311194323",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "OWNER",
            "body": "(and before you ask: yes, there are cases where users still have to care about Py2/3 semantics and compatibility in Cython code themselves, but imports are not on that list.)",
            "created_at": "2017-06-26T22:01:37Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311194620",
            "id": 311194620,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:01:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311194620",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm not sure what you mean by \"platform independent\" here. Obviously if I'm running a Cython-compiled module under Py3 I'm expecting it to adopt Py3 semantics, no?",
            "created_at": "2017-06-26T22:02:44Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311194842",
            "id": 311194842,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:02:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311194842",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Cython code uses Python 2 syntax and semantics by default, but you can switch to Python 3 syntax/semantics with a compiler option. That means that Cython will translate your code with Python 2 *or* Python 3 semantics, and once it's translated and the C code is generated, these semantics must not change anymore, whether you import your module into Python 2 or Python 3.\r\n\r\nChanging *source code* semantics based on the *runtime* platform *after* compilation would be very surprising for users. Imagine a C compiler that compiles your code in C89 mode, and then the binary code is executed with C99 semantics because there happens to be a new libc installed in the runtime system.\r\n\r\nA side effect of that requirement is that Cython handles many of the Py2/3 differences behind the scenes for you. Take it as a feature.",
            "created_at": "2017-06-26T22:10:24Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311196453",
            "id": 311196453,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:10:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311196453",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "I am still a bit puzzled though, am I mistaking semantics? Why is the `from . import _ufunc` semantics causing a warning (with the `from __future__ import absolute_import`) and the `from scipy.special import _ufunc` is not? Really just curious, I am fine with just changing it I think ;).",
            "created_at": "2017-06-26T22:15:04Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311197378",
            "id": 311197378,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:15:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311197378",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/61977?v=4",
                "events_url": "https://api.github.com/users/seberg/events{/privacy}",
                "followers_url": "https://api.github.com/users/seberg/followers",
                "following_url": "https://api.github.com/users/seberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seberg",
                "id": 61977,
                "login": "seberg",
                "organizations_url": "https://api.github.com/users/seberg/orgs",
                "received_events_url": "https://api.github.com/users/seberg/received_events",
                "repos_url": "https://api.github.com/users/seberg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seberg"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Changing source code semantics based on the runtime platform after compilation would be very surprising for users\r\n\r\nWhy so? What's surprising me is that it doesn't.\r\n\r\n>  Imagine a C compiler that compiles your code in C89 mode, and then the binary code is executed with C99 semantics because there happens to be a new libc installed in the runtime system.\r\n\r\nTrying to reason about Python (a language without explicit compliation step) by making analogies with C feels misleading to me. Since Cython claims to be compatible with Python semantics (not C semantics), it should follow the Python model of selecting semantics based on whatever runtime is executing the code.\r\n\r\n> A side effect of that requirement is that Cython handles many of the Py2/3 differences behind the scenes for you. Take it as a feature.\r\n\r\nNot if that displays warnings that are not expected for the given runtime...",
            "created_at": "2017-06-26T22:17:18Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311197820",
            "id": 311197820,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:17:18Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311197820",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "NONE",
            "body": "@pitrou that seems dangerous to me as well. In Python we do this, but that is just a hack because having two code bases is harder then doing the dance of having a single that tries to do the same in two different environments.\r\nWhy should cython copy that difficulty when it can provide compatibility without forcing the user to think about both python semantics at the same time? The cython model seems much more sensible to me. With cython you can't get the problem of trying to run a script that has been written in python 2 in your python 3 env, and then get hideous incompatibilities.",
            "created_at": "2017-06-26T22:22:55Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311198888",
            "id": 311198888,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:22:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311198888",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/61977?v=4",
                "events_url": "https://api.github.com/users/seberg/events{/privacy}",
                "followers_url": "https://api.github.com/users/seberg/followers",
                "following_url": "https://api.github.com/users/seberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seberg",
                "id": 61977,
                "login": "seberg",
                "organizations_url": "https://api.github.com/users/seberg/orgs",
                "received_events_url": "https://api.github.com/users/seberg/received_events",
                "repos_url": "https://api.github.com/users/seberg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seberg"
            }
        },
        {
            "author_association": "OWNER",
            "body": "> Why is the from . import _ufunc semantics causing a warning\r\n\r\nYou get the warning in that case because it's Python executing the relative import, and for that, it now requires the module to look a certain way, which extension modules don't (at least not while their module init function is executing). This can be changed, and there is an infrastructure for that, but Cython does not use that infrastructure yet. The reason is not the import but the difference between Python modules and extension modules here. This only really shows in Cython modules, because manually written extension modules do not tend to have a similar level of complexity as Cython translated ones. Especially the module level code can have an arbitrary complexity, which is unusual for non-Cython modules.",
            "created_at": "2017-06-26T22:23:32Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311198998",
            "id": 311198998,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:23:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311198998",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> In Python we do this, but that is just a hack because having two code bases is harder then doing the dance of having a single that tries to do the same in two different environments.\r\n\r\nThe thing is, people are _used_ to write dual py2/py3 code. Those people would be familiar with such semantics and not be surprised if Cython worked the same way.\r\n\r\nBut for some strange reason, Cython goes out of its way to behave differently. That doesn't make sense to me: Cython generally goes to great efforts to try and reproduce CPython semantics (which can be very painful from C), but on this very point it decides to do something else that's completely unexpected *and* produces unduly warnings that are a pain to diagnose (because, first, I didn't expect Cython to do something so ridiculous; second, I had to dig in the generated C code -- not a pretty sight -- to finally understand what was happening).\r\n\r\n> Why should cython copy that difficulty when it can provide compatibility without forcing the user to think about both python semantics at the same time?\r\n\r\n*I* would rather have to think about Python semantics -- something I'm used to since I do it on a daily basis, like everyone who uses Cython probably -- than about Cython idiosyncracies (which do not seem documented anywhere).\r\n\r\n> The cython model seems much more sensible to me. \r\n\r\nNo, it's not sensible, it's ridiculous. Python 3 has been _designed_ to break compatibility in many ways. Claiming to bridge the gap using a superset (rather than a subset) of Python is doomed to failure.",
            "created_at": "2017-06-26T22:31:43Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311200482",
            "id": 311200482,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:31:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311200482",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "OWNER",
            "body": "> Since Cython claims to be compatible with Python semantics (not C semantics), it should follow the Python model of selecting semantics based on whatever runtime is executing the code.\r\n\r\nPython actually does the same thing. When you run code in Python 2, it uses the Python 2 parser and generates Python 2 byte code. If you run it in Python 3, it uses a Python 3 parser and generates Python 3 byte code. If you ported the Python 2 parser to Python 3, you could pass Python 2 code into the Python 2 parser, and it could generate Python 3 byte code that runs on Python 3. If the byte code wasn't incompatible, you could also import Python 2 byte code into Python 3 and execute it there. That this has not been done yet is not my fault. ;-)\r\n\r\nIt's not true that Python has no compilation step. It compiles Python source code to Python byte code. Once that's done, the original source code semantics of that code should not change anymore, regardless of the Python version that you import that byte code into.",
            "created_at": "2017-06-26T22:32:07Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311200558",
            "id": 311200558,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:32:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311200558",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "OWNER",
            "body": "> Claiming to bridge the gap using a superset (rather than a subset) of Python is doomed to failure.\r\n\r\nThat's not what Cython does. It gives you Python 2 semantics *or* Python 3 semantics. But once you've translated your code, it does not change those semantics anymore.\r\n\r\nYou can happily try to take some old Python 2 code and translate it with `cython -3`, i.e. in Python 3 mode. That's probably going to fail. Cython is not different from Python here either.\r\n\r\nI think you're missing the important point that the compilation step in Cython is *already* the point where the decision between Python 2 and Python 3 semantics is happening, in the same way that CPython takes that decision at import/parse time. Cython just makes this more visible by splitting parsing and building/importing into separate steps.",
            "created_at": "2017-06-26T22:37:17Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311201475",
            "id": 311201475,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:37:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311201475",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Python actually does the same thing\r\n\r\nNo, it doesn't. If I give a Python module to Python 2, it uses Python 2 semantics. If I give the same module to Python 3, it uses Python 3 semantics.\r\n\r\n> That this has not been done yet is not my fault.\r\n\r\nIt has not been done because it would be completely counter-productive. The whole point of the Python 2 -> Python 3 transition is to have a clear break in semantics.\r\n\r\n> It's not true that Python has no compilation step\r\n\r\nHere is what I said: _\"a language without **explicit** compliation step\"_. Emphasis added so that you don't miss it now...",
            "created_at": "2017-06-26T22:37:46Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311201552",
            "id": 311201552,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:37:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311201552",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I think you're missing the important point that the compilation step in Cython is already the point where the decision between Python 2 and Python 3 semantics is happening\r\n\r\nPlease.\r\n\r\nI'm not missing it, I'm just saying it's confusing and unexpected. I'm not the only one here. There are/were several Cython-based packages suffering from the warning described here... If I hadn't debugged this, those packages probably wouldn't be fixed still, and users would still get polluted with warnings they don't know what to do about.\r\n\r\nBut if you're fine with confusing your users and letting them painfully diagnose unexpected warnings without even documenting the issue, then why not. It's your decision.",
            "created_at": "2017-06-26T22:43:31Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311202515",
            "id": 311202515,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:43:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311202515",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Sorry, but it doesn't feel to me like this discussion is leading anywhere. Our users tend to be very happy about the way Cython works here, because it allows them to concentrate on more important issues than differences in Python 2/3 syntax (namely, their code and functionality). It's a very pragmatic approach that solves a real-world issue. If you are unhappy about it, I'll note your input, but I do not see this change as long as Python 2 syntax is still supported by Cython.\r\n\r\nI have already freely admitted that the missing `__package__` and `__spec__` fields are something that Cython can improve on, and I've even proposed to invest my own time into solving the issue. I think that's the best I can do.\r\n\r\nThank you also for investing your time into debugging this issue. I was previously not aware of these warnings.",
            "created_at": "2017-06-26T22:48:38Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311203410",
            "id": 311203410,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-26T22:48:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311203410",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "@scoder - Do you have a timeline for the first python3 only Cython version? ",
            "created_at": "2017-06-29T14:06:54Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-311977186",
            "id": 311977186,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-29T14:06:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311977186",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/6788290?v=4",
                "events_url": "https://api.github.com/users/bsipocz/events{/privacy}",
                "followers_url": "https://api.github.com/users/bsipocz/followers",
                "following_url": "https://api.github.com/users/bsipocz/following{/other_user}",
                "gists_url": "https://api.github.com/users/bsipocz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bsipocz",
                "id": 6788290,
                "login": "bsipocz",
                "organizations_url": "https://api.github.com/users/bsipocz/orgs",
                "received_events_url": "https://api.github.com/users/bsipocz/received_events",
                "repos_url": "https://api.github.com/users/bsipocz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bsipocz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bsipocz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bsipocz"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Depends on what you are actually asking. ;-)\n\nSince Py2.7 is still maintained in various places until at least 2025, we'll probably keep supporting Python 2 about as long as that, or maybe longer, depending on how long other tools and libraries still support it. However, Cython has its own large user code bases out there, and they might never migrate, if only because they don't have to. The usual rule is, if your module fails to work with a new version of CPython, recompile it with a recent version of Cython. So this is probably even the wrong question to ask entirely.\n\nWhether we switch to Python 3 syntax by default along the way, I don't know, probably yes, but it doesn't matter for the purpose of this question. You can just set the language_level=3 option in Cython, or call cython3, and you get Python 3 syntax and semantics from the compiler, regardless of whether you use your module in Py2 or Py3 afterwards. And that's entirely intentional. The same applies to language_level=2, if we ever switch to Py3 syntax by default. I very much encourage Cython users to write their code in Py3 syntax, simply because it's cleaner in many ways. But it's entirely up to them and doesn't impact the portability of the generated C code.\n\nDoes that answer your question, or were you asking something else?\n",
            "created_at": "2017-06-29T20:47:26Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-312102856",
            "id": 312102856,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-06-29T20:47:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/312102856",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Support for PEP 489 / #1715 is implemented in #1794",
            "created_at": "2017-07-23T09:08:04Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-317239427",
            "id": 317239427,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-07-23T09:08:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/317239427",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hello everyone. What is the status of this issue? I think I updated cython to the most recent in miniconda, but I still get this warning.\r\n\r\n```\r\n> conda list | grep cython\r\ncython                    0.27.3           py36h6ecb376_0\r\n\r\n> conda info\r\nCurrent conda install:\r\n\r\n               platform : osx-64\r\n          conda version : 4.3.30\r\n       conda is private : False\r\n      conda-env version : 4.3.30\r\n    conda-build version : not installed\r\n         python version : 3.6.0.final.0\r\n       requests version : 2.18.4\r\n       root environment : /Users/fil/miniconda3  (writable)\r\n    default environment : /Users/fil/miniconda3\r\n       envs directories : /Users/fil/miniconda3/envs\r\n                          /Users/fil/.conda/envs\r\n          package cache : /Users/fil/miniconda3/pkgs\r\n                          /Users/fil/.conda/pkgs\r\n           channel URLs : https://repo.continuum.io/pkgs/main/osx-64\r\n                          https://repo.continuum.io/pkgs/main/noarch\r\n                          https://repo.continuum.io/pkgs/free/osx-64\r\n                          https://repo.continuum.io/pkgs/free/noarch\r\n                          https://repo.continuum.io/pkgs/r/osx-64\r\n                          https://repo.continuum.io/pkgs/r/noarch\r\n                          https://repo.continuum.io/pkgs/pro/osx-64\r\n                          https://repo.continuum.io/pkgs/pro/noarch\r\n            config file : None\r\n             netrc file : None\r\n           offline mode : False\r\n             user-agent : conda/4.3.30 requests/2.18.4 CPython/3.6.0 Darwin/17.2.0 OSX/10.13.1\r\n                UID:GID : 501:20\r\n```\r\n",
            "created_at": "2017-12-13T09:34:51Z",
            "html_url": "https://github.com/cython/cython/issues/1720#issuecomment-351335367",
            "id": 351335367,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1720",
            "updated_at": "2017-12-13T09:34:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/351335367",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/7001?v=4",
                "events_url": "https://api.github.com/users/Fil/events{/privacy}",
                "followers_url": "https://api.github.com/users/Fil/followers",
                "following_url": "https://api.github.com/users/Fil/following{/other_user}",
                "gists_url": "https://api.github.com/users/Fil/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Fil",
                "id": 7001,
                "login": "Fil",
                "organizations_url": "https://api.github.com/users/Fil/orgs",
                "received_events_url": "https://api.github.com/users/Fil/received_events",
                "repos_url": "https://api.github.com/users/Fil/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Fil/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Fil/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Fil"
            }
        }
    ],
    "comments": 27,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1720/comments",
    "created_at": "2017-05-28T08:30:11Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4",
                "events_url": "https://api.github.com/users/asvetlov/events{/privacy}",
                "followers_url": "https://api.github.com/users/asvetlov/followers",
                "following_url": "https://api.github.com/users/asvetlov/following{/other_user}",
                "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asvetlov",
                "id": 356399,
                "login": "asvetlov",
                "organizations_url": "https://api.github.com/users/asvetlov/orgs",
                "received_events_url": "https://api.github.com/users/asvetlov/received_events",
                "repos_url": "https://api.github.com/users/asvetlov/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asvetlov"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-05-28T08:31:37Z",
            "event": "mentioned",
            "id": 1100113634,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100113634"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4",
                "events_url": "https://api.github.com/users/asvetlov/events{/privacy}",
                "followers_url": "https://api.github.com/users/asvetlov/followers",
                "following_url": "https://api.github.com/users/asvetlov/following{/other_user}",
                "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asvetlov",
                "id": 356399,
                "login": "asvetlov",
                "organizations_url": "https://api.github.com/users/asvetlov/orgs",
                "received_events_url": "https://api.github.com/users/asvetlov/received_events",
                "repos_url": "https://api.github.com/users/asvetlov/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asvetlov"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-05-28T08:31:37Z",
            "event": "subscribed",
            "id": 1100113635,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100113635"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4",
                "events_url": "https://api.github.com/users/brettcannon/events{/privacy}",
                "followers_url": "https://api.github.com/users/brettcannon/followers",
                "following_url": "https://api.github.com/users/brettcannon/following{/other_user}",
                "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brettcannon",
                "id": 54418,
                "login": "brettcannon",
                "organizations_url": "https://api.github.com/users/brettcannon/orgs",
                "received_events_url": "https://api.github.com/users/brettcannon/received_events",
                "repos_url": "https://api.github.com/users/brettcannon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brettcannon"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-05-28T08:31:37Z",
            "event": "mentioned",
            "id": 1100113636,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100113636"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4",
                "events_url": "https://api.github.com/users/brettcannon/events{/privacy}",
                "followers_url": "https://api.github.com/users/brettcannon/followers",
                "following_url": "https://api.github.com/users/brettcannon/following{/other_user}",
                "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brettcannon",
                "id": 54418,
                "login": "brettcannon",
                "organizations_url": "https://api.github.com/users/brettcannon/orgs",
                "received_events_url": "https://api.github.com/users/brettcannon/received_events",
                "repos_url": "https://api.github.com/users/brettcannon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brettcannon"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-05-28T08:31:37Z",
            "event": "subscribed",
            "id": 1100113637,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100113637"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
                "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ncoghlan/followers",
                "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ncoghlan",
                "id": 1026649,
                "login": "ncoghlan",
                "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
                "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
                "repos_url": "https://api.github.com/users/ncoghlan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ncoghlan"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-05-28T08:31:37Z",
            "event": "mentioned",
            "id": 1100113638,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100113638"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
                "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ncoghlan/followers",
                "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ncoghlan",
                "id": 1026649,
                "login": "ncoghlan",
                "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
                "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
                "repos_url": "https://api.github.com/users/ncoghlan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ncoghlan"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-05-28T08:31:37Z",
            "event": "subscribed",
            "id": 1100113639,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100113639"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
                "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ncoghlan/followers",
                "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ncoghlan",
                "id": 1026649,
                "login": "ncoghlan",
                "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
                "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
                "repos_url": "https://api.github.com/users/ncoghlan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ncoghlan"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-05-29T07:16:13Z",
            "event": "mentioned",
            "id": 1100557012,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100557012"
        },
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
                "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ncoghlan/followers",
                "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ncoghlan",
                "id": 1026649,
                "login": "ncoghlan",
                "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
                "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
                "repos_url": "https://api.github.com/users/ncoghlan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ncoghlan"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-05-29T07:16:13Z",
            "event": "subscribed",
            "id": 1100557013,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100557013"
        },
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            },
            "commit_id": "5d765b132c98a21f06f7809705d0b8e8461bc891",
            "commit_url": "https://api.github.com/repos/pitrou/multidict/commits/5d765b132c98a21f06f7809705d0b8e8461bc891",
            "created_at": "2017-05-29T07:22:43Z",
            "event": "referenced",
            "id": 1100563989,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100563989"
        },
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            },
            "commit_id": "f9d4ab956d362a1cb6257f232481b072bc2ba312",
            "commit_url": "https://api.github.com/repos/pitrou/fastparquet/commits/f9d4ab956d362a1cb6257f232481b072bc2ba312",
            "created_at": "2017-05-29T07:27:03Z",
            "event": "referenced",
            "id": 1100568909,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1100568909"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4",
                "events_url": "https://api.github.com/users/asvetlov/events{/privacy}",
                "followers_url": "https://api.github.com/users/asvetlov/followers",
                "following_url": "https://api.github.com/users/asvetlov/following{/other_user}",
                "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asvetlov",
                "id": 356399,
                "login": "asvetlov",
                "organizations_url": "https://api.github.com/users/asvetlov/orgs",
                "received_events_url": "https://api.github.com/users/asvetlov/received_events",
                "repos_url": "https://api.github.com/users/asvetlov/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asvetlov"
            },
            "commit_id": "4ff91df19841f22d1f9024957b6ee93cda50b0cf",
            "commit_url": "https://api.github.com/repos/aio-libs/multidict/commits/4ff91df19841f22d1f9024957b6ee93cda50b0cf",
            "created_at": "2017-05-29T18:56:13Z",
            "event": "referenced",
            "id": 1101332655,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1101332655"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-06-26T21:54:21Z",
            "event": "mentioned",
            "id": 1139501118,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1139501118"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-06-26T21:54:21Z",
            "event": "subscribed",
            "id": 1139501120,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1139501120"
        },
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-06-26T22:22:55Z",
            "event": "mentioned",
            "id": 1139533473,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1139533473"
        },
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-06-26T22:22:55Z",
            "event": "subscribed",
            "id": 1139533475,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1139533475"
        },
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-06-26T22:43:37Z",
            "event": "closed",
            "id": 1139553871,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1139553871"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-06-29T14:06:54Z",
            "event": "mentioned",
            "id": 1144280840,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1144280840"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-06-29T14:06:54Z",
            "event": "subscribed",
            "id": 1144280841,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1144280841"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1720/events",
    "html_url": "https://github.com/cython/cython/issues/1720",
    "id": 231854829,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1720/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1720,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Spurious ImportWarnings on 3.6+",
    "updated_at": "2017-12-13T09:34:51Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1720",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
        "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
        "followers_url": "https://api.github.com/users/pitrou/followers",
        "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
        "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pitrou",
        "id": 1721820,
        "login": "pitrou",
        "organizations_url": "https://api.github.com/users/pitrou/orgs",
        "received_events_url": "https://api.github.com/users/pitrou/received_events",
        "repos_url": "https://api.github.com/users/pitrou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pitrou"
    }
}