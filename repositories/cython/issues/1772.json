{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "```cython\r\ncdef void c_encode_by_bits(const npy_intp n, const npy_intp m, const long * a, \r\n                           const long bitshift, integer * out) nogil:\r\n    cdef npy_intp i, j \r\n    cdef long shift\r\n    cdef integer value\r\n\r\n    for i in range(n):\r\n        value = 0\r\n        shift = 0\r\n        for j in range(m):\r\n            value += a[i * m + j] << shift\r\n            shift += bitshift\r\n        out[i] = value\r\n            \r\ncdef void c_decode_by_bits(const npy_intp n, const npy_intp m, \r\n                           const integer * a, const long bitshift, \r\n                           long * out) nogil:\r\n    cdef npy_intp i, j, k\r\n    cdef long shift, mask = (1 << bitshift) - 1\r\n    \r\n    for i in range(n):\r\n        shift = 0\r\n        for j in range(m):\r\n            out[i * m + j] = (<long> a[i] >> shift) & mask \r\n            shift += bitshift\r\n```\r\n\r\n```cython\r\nctypedef fused integer:\r\n    char\r\n    unsigned char\r\n    short\r\n    unsigned short\r\n    int\r\n    unsigned int\r\n    long\r\n    unsigned long\r\n```\r\n```\r\n[1/1] Cythonizing locality/helpers/encode.pyx\r\nTraceback (most recent call last):\r\n  File \"build.py\", line 99, in <module>\r\n    ext_modules = cythonize(cy_extensions) + c_extensions,\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Build/Dependencies.py\", line 934, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Build/Dependencies.py\", line 1039, in cythonize_one\r\n    result = compile([pyx_file], options)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/Main.py\", line 686, in compile\r\n    return compile_multiple(source, options)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/Main.py\", line 664, in compile_multiple\r\n    result = run_pipeline(source, options, context=context)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/Main.py\", line 494, in run_pipeline\r\n    err, enddata = Pipeline.run_pipeline(pipeline, source)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/Pipeline.py\", line 340, in run_pipeline\r\n    data = phase(data)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/Pipeline.py\", line 53, in generate_pyx_code_stage\r\n    module_node.process_implementation(options, result)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/ModuleNode.py\", line 137, in process_implementation\r\n    self.generate_c_code(env, options, result)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/ModuleNode.py\", line 365, in generate_c_code\r\n    self.body.generate_function_definitions(env, code)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/Nodes.py\", line 436, in generate_function_definitions\r\n    stat.generate_function_definitions(env, code)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/Nodes.py\", line 436, in generate_function_definitions\r\n    stat.generate_function_definitions(env, code)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/Nodes.py\", line 1754, in generate_function_definitions\r\n    self.generate_function_header(code, with_pymethdef=with_pymethdef)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/Nodes.py\", line 2466, in generate_function_header\r\n    arg_decl = arg.declaration_code()\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/PyrexTypes.py\", line 3050, in declaration_code\r\n    return self.type.declaration_code(self.cname, for_display)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/PyrexTypes.py\", line 2372, in declaration_code\r\n    for_display, dll_linkage, pyrex)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/PyrexTypes.py\", line 1475, in declaration_code\r\n    return self.const_base_type.declaration_code(\"const %s\" % entity_code, for_display, dll_linkage, pyrex)\r\n  File \"/usr/lib/python3.6/site-packages/Cython/Compiler/PyrexTypes.py\", line 1533, in declaration_code\r\n    raise Exception(\"This may never happen, please report a bug\")\r\n```\r\n\r\nReplacing \"integer\" with \"long\" stops the exception.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think the problem is the `const integer`. Declaring fused types as `const` after the fact seems unsupported. I would consider that a bug, constifying a fused type usage seems reasonable to me.",
            "created_at": "2017-07-18T17:34:27Z",
            "html_url": "https://github.com/cython/cython/issues/1772#issuecomment-316138653",
            "id": 316138653,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1772",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEzODY1Mw==",
            "updated_at": "2017-07-18T17:34:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/316138653",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Here is a (non-minimal) test that fails to compile for me but should probably be allowed (can go into `tests/run/fused_types.pyx`):\r\n```\r\ncdef fused ints_t:\r\n    int\r\n    long\r\n\r\ncdef ints_t cdef_const_fused(const ints_t *i):\r\n    return i[0] + 2\r\n\r\ndef const_fused(const ints_t i):\r\n    \"\"\"\r\n    >>> const_fused(5)\r\n    12\r\n    \"\"\"\r\n    return i + cdef_const_fused(&i)\r\n```\r\n",
            "created_at": "2017-07-18T17:39:14Z",
            "html_url": "https://github.com/cython/cython/issues/1772#issuecomment-316139973",
            "id": 316139973,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1772",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEzOTk3Mw==",
            "updated_at": "2017-07-18T17:39:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/316139973",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "For the record, I hit the exact same error when I tried to use const memoryview (from https://github.com/cython/cython/pull/1869) + fused types. To reproduce:\r\n\r\n```py\r\ncdef fused floating1d:\r\n    float[:]\r\n    double[:]\r\n\r\ndef test(const floating1d arr):\r\n    pass\r\n```\r\n\r\nAs hinted by https://github.com/cython/cython/issues/1772#issuecomment-316138653, a work-around is to use const inside the fused type definition like this:\r\n\r\n```py\r\ncdef fused const_floating1d:\r\n    const float[:]\r\n    const double[:]\r\n\r\n\r\ndef test(const_floating1d arr):\r\n    pass\r\n```\r\n",
            "created_at": "2018-03-08T13:20:02Z",
            "html_url": "https://github.com/cython/cython/issues/1772#issuecomment-371484338",
            "id": 371484338,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1772",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQ4NDMzOA==",
            "updated_at": "2018-03-08T13:20:02Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/371484338",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1680079?v=4",
                "events_url": "https://api.github.com/users/lesteve/events{/privacy}",
                "followers_url": "https://api.github.com/users/lesteve/followers",
                "following_url": "https://api.github.com/users/lesteve/following{/other_user}",
                "gists_url": "https://api.github.com/users/lesteve/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lesteve",
                "id": 1680079,
                "login": "lesteve",
                "node_id": "MDQ6VXNlcjE2ODAwNzk=",
                "organizations_url": "https://api.github.com/users/lesteve/orgs",
                "received_events_url": "https://api.github.com/users/lesteve/received_events",
                "repos_url": "https://api.github.com/users/lesteve/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lesteve/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lesteve/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lesteve"
            }
        },
        {
            "author_association": "NONE",
            "body": "> As hinted by #1772 (comment), a work-around is to use const inside the fused type definition like this:\r\n\r\nAs noted in #2141 this work-around has some limitations because the const memoryview and the non-const memoryview types are seen as independent so that the function signature will be generated for all possible combination of types. For example:\r\n\r\n```python\r\n\r\nfrom cython cimport floating\r\n \r\n \r\n cdef fused const_floating1d:\r\n     const float[:]\r\n     const double[:]\r\n \r\n \r\n def test(const_floating1d ro, floating[:] rw):\r\n     rw[:] = ro\r\n```\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    const float[:]\r\n    const double[:]\r\n\r\n\r\ndef test(const_floating1d ro, floating[:] rw):\r\n    rw[:] = ro\r\n           ^\r\n------------------------------------------------------------\r\n\r\ntest.pyx:10:12: Different base types for memoryviews (const float, double)\r\n",
            "created_at": "2018-03-12T09:13:30Z",
            "html_url": "https://github.com/cython/cython/issues/1772#issuecomment-372239760",
            "id": 372239760,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1772",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjIzOTc2MA==",
            "updated_at": "2018-03-12T09:20:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/372239760",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1680079?v=4",
                "events_url": "https://api.github.com/users/lesteve/events{/privacy}",
                "followers_url": "https://api.github.com/users/lesteve/followers",
                "following_url": "https://api.github.com/users/lesteve/following{/other_user}",
                "gists_url": "https://api.github.com/users/lesteve/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lesteve",
                "id": 1680079,
                "login": "lesteve",
                "node_id": "MDQ6VXNlcjE2ODAwNzk=",
                "organizations_url": "https://api.github.com/users/lesteve/orgs",
                "received_events_url": "https://api.github.com/users/lesteve/received_events",
                "repos_url": "https://api.github.com/users/lesteve/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lesteve/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lesteve/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lesteve"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have another issue with memoyviews of fused types with `const` types. Here is a small code example:\r\n\r\n```\r\ncimport cython\r\ncimport numpy as np\r\nimport numpy as np\r\n\r\nctypedef np.int8_t int8\r\nctypedef np.int16_t int16\r\n\r\nctypedef fused FusedType:\r\n    const int8\r\n    const int16\r\ndef func(FusedType[:] array):\r\n    pass\r\n```\r\n\r\nThe Cython compiler raises this error:\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    cdef __Pyx_memviewslice memslice\r\n    cdef Py_ssize_t itemsize\r\n    cdef bint dtype_signed\r\n    cdef char kind\r\n    itemsize = -1\r\n    cdef bint ___pyx_const int8_is_signed\r\n                          ^\r\n------------------------------------------------------------\r\n\r\n(tree fragment):16:27: Syntax error in C variable declaration\r\n```\r\n\r\nThis does only happen with `ctypedef` defined types, this problem does not occur with native types (char, short). Furthermore, this problem also diappears when a simple variable, rather than a memoryview, is used. \r\n\r\nThe error message suggests that `const int8` is treated entirely as type name, which is clearly wrong, since `const` is a modifier.\r\n\r\nI am using Cython version 0.28.",
            "created_at": "2018-03-16T11:46:21Z",
            "html_url": "https://github.com/cython/cython/issues/1772#issuecomment-373689862",
            "id": 373689862,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1772",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzY4OTg2Mg==",
            "updated_at": "2018-03-16T11:48:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/373689862",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/28051833?v=4",
                "events_url": "https://api.github.com/users/padix-key/events{/privacy}",
                "followers_url": "https://api.github.com/users/padix-key/followers",
                "following_url": "https://api.github.com/users/padix-key/following{/other_user}",
                "gists_url": "https://api.github.com/users/padix-key/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/padix-key",
                "id": 28051833,
                "login": "padix-key",
                "node_id": "MDQ6VXNlcjI4MDUxODMz",
                "organizations_url": "https://api.github.com/users/padix-key/orgs",
                "received_events_url": "https://api.github.com/users/padix-key/received_events",
                "repos_url": "https://api.github.com/users/padix-key/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/padix-key/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/padix-key/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/padix-key"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It looks like this is not difficult but a bit of work. Basically, in `FusedNode.py`, the `fused_base_types` must be generated without `const` (i.e. `if type.is_const: type = type.const_base_type`), but then the specialisation afterwards must look into `const` types to see if they are fused, and then specialise the type into the corresponding const type again. Not sure if this can be done locally in `PyrexTypes.py` or if it requires some non-local (but probably repetitive) code changes.\r\nPR welcome.",
            "created_at": "2018-03-27T18:35:04Z",
            "html_url": "https://github.com/cython/cython/issues/1772#issuecomment-376629824",
            "id": 376629824,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1772",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjYyOTgyNA==",
            "updated_at": "2018-03-27T18:35:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/376629824",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1772/comments",
    "created_at": "2017-07-15T23:56:16Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-07-21T05:53:45Z",
            "event": "labeled",
            "id": 1173312334,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDExNzMzMTIzMzQ=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1173312334"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-07-21T05:53:45Z",
            "event": "labeled",
            "id": 1173312335,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDExNzMzMTIzMzU=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1173312335"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-07-21T05:55:10Z",
            "event": "renamed",
            "id": 1173313287,
            "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTE3MzMxMzI4Nw==",
            "rename": {
                "from": "\"Exception: This may never happen, please report a bug\" (presumably) when using shift operator on fused type",
                "to": "Support \"const\" modifier on fused types"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/1173313287"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-09-19T10:12:58Z",
            "event": "labeled",
            "id": 1255130460,
            "label": {
                "color": "0e8a16",
                "name": "patch wanted"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDEyNTUxMzA0NjA=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1255130460"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-03-08T22:55:39Z",
            "event": "labeled",
            "id": 1512246285,
            "label": {
                "color": "1d76db",
                "name": "good first issue"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE1MTIyNDYyODU=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1512246285"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1772/events",
    "html_url": "https://github.com/cython/cython/issues/1772",
    "id": 243207663,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        },
        {
            "color": "444444",
            "default": true,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "1d76db",
            "default": true,
            "id": 414805682,
            "name": "good first issue",
            "node_id": "MDU6TGFiZWw0MTQ4MDU2ODI=",
            "url": "https://api.github.com/repos/cython/cython/labels/good%20first%20issue"
        },
        {
            "color": "0e8a16",
            "default": true,
            "id": 414800879,
            "name": "help wanted",
            "node_id": "MDU6TGFiZWw0MTQ4MDA4Nzk=",
            "url": "https://api.github.com/repos/cython/cython/labels/help%20wanted"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1772/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyNDMyMDc2NjM=",
    "number": 1772,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Support \"const\" modifier on fused types",
    "updated_at": "2018-03-27T18:35:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1772",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/3468977?v=4",
        "events_url": "https://api.github.com/users/dezmondgoff/events{/privacy}",
        "followers_url": "https://api.github.com/users/dezmondgoff/followers",
        "following_url": "https://api.github.com/users/dezmondgoff/following{/other_user}",
        "gists_url": "https://api.github.com/users/dezmondgoff/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dezmondgoff",
        "id": 3468977,
        "login": "dezmondgoff",
        "node_id": "MDQ6VXNlcjM0Njg5Nzc=",
        "organizations_url": "https://api.github.com/users/dezmondgoff/orgs",
        "received_events_url": "https://api.github.com/users/dezmondgoff/received_events",
        "repos_url": "https://api.github.com/users/dezmondgoff/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dezmondgoff/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dezmondgoff/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dezmondgoff"
    }
}