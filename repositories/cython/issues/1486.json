{
    "assignee": null,
    "assignees": [],
    "body": "I'm having an issue with cython 0.24.1\r\n\r\nI have a template c++ class that defines\r\n\r\n```\r\nT & operator()(int);\r\n```\r\n\r\nand I try wrapping it in a `.pyx`:\r\n\r\n```\r\ncdef extern from \"Array.hpp\" namespace \"array\":\r\n    cdef cppclass Array[T]:\r\n\r\n        Array(object)\r\n\r\n        T & operator()(cpp_uint32)\r\n        T & operator()(cpp_uint32, cpp_uint32)\r\n\r\n# later in the .pyx\r\ndef do_something(array):\r\n\r\n    out = np.zeros(array.shape, array.dtype)\r\n\r\n    cdef cpp_uint32 idx = 0\r\n\r\n    obj = new Array[cpp_uint32](array)\r\n\r\n    for i in range(array.size):\r\n        idx = i\r\n        out[i] = obj(idx)\r\n```\r\n\r\nBut cython is complaining about the `obj(idx)`:\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n        for i in range(array.size):\r\n            idx = i\r\n            out[i] = obj(idx)\r\n                       ^\r\n------------------------------------------------------------\r\n\r\nsignal/cpp_array.pyx:68:24: Calling non-function type 'Array[cpp_uint32]'\r\n```\r\n\r\nA workaround is renaming the function, but I'd rather not resort to that.  If `operator()(int)` is supported, please document how it can be done.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1486/comments",
    "created_at": "2016-10-12T22:13:42Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1486/events",
    "html_url": "https://github.com/cython/cython/issues/1486",
    "id": 182647462,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1486/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1486,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Can't seem to wrap c++ operator()(int) to __call__",
    "updated_at": "2016-10-12T22:13:42Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1486",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10455023?v=3",
        "events_url": "https://api.github.com/users/weegreenblobbie/events{/privacy}",
        "followers_url": "https://api.github.com/users/weegreenblobbie/followers",
        "following_url": "https://api.github.com/users/weegreenblobbie/following{/other_user}",
        "gists_url": "https://api.github.com/users/weegreenblobbie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/weegreenblobbie",
        "id": 10455023,
        "login": "weegreenblobbie",
        "organizations_url": "https://api.github.com/users/weegreenblobbie/orgs",
        "received_events_url": "https://api.github.com/users/weegreenblobbie/received_events",
        "repos_url": "https://api.github.com/users/weegreenblobbie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/weegreenblobbie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weegreenblobbie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/weegreenblobbie"
    }
}