{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Given this .pyx code:\r\n\r\n```\r\ncdef void cb(int a) with gil:\r\n   printf(\"C++ prints: %d\\n\", a);\r\n   print(\"Cython prints: %d\" % a)\r\n\r\ndef main(crash):\r\n    cdef unique_ptr[Foo] ptr\r\n    ptr.reset(new Foo(cb))\r\n    raise RuntimeError(\"Kaboom\")\r\n```\r\n\r\nThe Foo class calls the cb callback from its destructor, i.e. when the unique_ptr goes out of scope.\r\nCython seems to think that the exception is caused by the `print` call in `cb()` (or any \"potentially exception raising\" code) and prints an \"Exception ignored\" message.\r\nThe exception is then cleared, so the calling code complains that main \"returned NULL without setting an error\".\r\n\r\nComplete example in the attached file [cython-bug.zip](https://github.com/cython/cython/files/1320189/cython-bug.zip). Execute with `python setup.py build_ext --inplace && python pymain.py`.\r\n\r\nThe output that I get from running the example is:\r\n```\r\n[...snip build messages...]\r\n--------------------------------------------------------------------------------\r\nFoo::Foo()\r\nC++ prints: 1\r\nCython prints: 1\r\nFoo::~Foo()\r\nC++ prints: 2\r\nCython prints: 2\r\n--------------------------------------------------------------------------------\r\nFoo::Foo()\r\nC++ prints: 1\r\nCython prints: 1\r\nFoo::~Foo()\r\nC++ prints: 2\r\nRuntimeError: Kaboom\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nSystemError: <built-in method write of _io.TextIOWrapper object at 0x7f2726712630> returned a result with an error set\r\nException ignored in: 'pyxstuff.cb'\r\nSystemError: <built-in method write of _io.TextIOWrapper object at 0x7f2726712630> returned a result with an error set\r\nCython prints: 2Got exception: <built-in function main> returned NULL without setting an error\r\n```\r\n\r\nThis is using Cython version 0.26.1 on Linux.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "OWNER",
            "body": "Thanks for the report. My guess is that Cython does not wrap the C++ cleanup in a Python \"finally\" construct, i.e. it keeps the live exception instead of storing it away.",
            "created_at": "2017-09-21T06:58:55Z",
            "html_url": "https://github.com/cython/cython/issues/1877#issuecomment-331069602",
            "id": 331069602,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1877",
            "updated_at": "2017-09-21T06:58:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/331069602",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yeah, it looks like I can work around the issue by wrapping the body of the callback function in PyErr_Fetch/PyErr_Restore.\r\n",
            "created_at": "2017-09-24T09:11:43Z",
            "html_url": "https://github.com/cython/cython/issues/1877#issuecomment-331697485",
            "id": 331697485,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1877",
            "updated_at": "2017-09-24T09:11:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/331697485",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/15988484?v=4",
                "events_url": "https://api.github.com/users/odahoda/events{/privacy}",
                "followers_url": "https://api.github.com/users/odahoda/followers",
                "following_url": "https://api.github.com/users/odahoda/following{/other_user}",
                "gists_url": "https://api.github.com/users/odahoda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/odahoda",
                "id": 15988484,
                "login": "odahoda",
                "organizations_url": "https://api.github.com/users/odahoda/orgs",
                "received_events_url": "https://api.github.com/users/odahoda/received_events",
                "repos_url": "https://api.github.com/users/odahoda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/odahoda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/odahoda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/odahoda"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Honestly, this seems like the best fix already. Most C++ cleanup code does not do any Python interaction (in fact, most C++ cleanup code is probably trivial), so *always* storing away and (conditionally) restoring the current exception at the end of a function with stack allocated C++ objects would be a bit wasteful.\r\n\r\nI'll keep this ticket open, because I agree that the current state is unsatisfactory, but it's not clear to me if we should do something about it.",
            "created_at": "2017-09-26T11:09:20Z",
            "html_url": "https://github.com/cython/cython/issues/1877#issuecomment-332165221",
            "id": 332165221,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1877",
            "updated_at": "2017-09-26T11:09:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/332165221",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1877/comments",
    "created_at": "2017-09-21T06:49:12Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/15988484?v=4",
                "events_url": "https://api.github.com/users/odahoda/events{/privacy}",
                "followers_url": "https://api.github.com/users/odahoda/followers",
                "following_url": "https://api.github.com/users/odahoda/following{/other_user}",
                "gists_url": "https://api.github.com/users/odahoda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/odahoda",
                "id": 15988484,
                "login": "odahoda",
                "organizations_url": "https://api.github.com/users/odahoda/orgs",
                "received_events_url": "https://api.github.com/users/odahoda/received_events",
                "repos_url": "https://api.github.com/users/odahoda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/odahoda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/odahoda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/odahoda"
            },
            "commit_id": "c1db71847fd54e0bbe1b422a7a2f1f93fc2355b6",
            "commit_url": "https://api.github.com/repos/odahoda/noisicaa/commits/c1db71847fd54e0bbe1b422a7a2f1f93fc2355b6",
            "created_at": "2017-09-24T09:14:12Z",
            "event": "referenced",
            "id": 1262601771,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1262601771"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1877/events",
    "html_url": "https://github.com/cython/cython/issues/1877",
    "id": 259392457,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1877/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1877,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Exception handling gets confused when Python code is called from destructor",
    "updated_at": "2017-09-26T11:09:20Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1877",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/15988484?v=4",
        "events_url": "https://api.github.com/users/odahoda/events{/privacy}",
        "followers_url": "https://api.github.com/users/odahoda/followers",
        "following_url": "https://api.github.com/users/odahoda/following{/other_user}",
        "gists_url": "https://api.github.com/users/odahoda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/odahoda",
        "id": 15988484,
        "login": "odahoda",
        "organizations_url": "https://api.github.com/users/odahoda/orgs",
        "received_events_url": "https://api.github.com/users/odahoda/received_events",
        "repos_url": "https://api.github.com/users/odahoda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/odahoda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/odahoda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/odahoda"
    }
}