{
    "assignee": null,
    "assignees": [],
    "body": "The below segfault occurs with version 0.25a0, on Python 3.5.2. I have verified it on Mac OS X 10.11.6 and on Linux (kernel 4.7.2, x86_64).\r\n\r\nIt is not a recent regression -- I reported this to the cython-devel email list in March, when I had observed the bug with Python 3.4.3 / Cython 0.23.4 and Python 2.7.10 / Cython 0.22.1 . At the time, there was no reply. When I saw that 0.25a0 was out, I thought I ought to verify that this is still an issue and post to github now that cython is using that.\r\n\r\nAnyhow, the issue is that a cython function with a fused type *and* a keyword argument will cause an immediate segfault when its `__kwdefaults__` attribute is looked up. (Which happens on any sort of introspection, such looking up the function docstring in ipython, or even tab completion of the `__kwdefaults__ ` attribute name in plain python.)\r\n\r\nThe below is the simplest example:\r\nCreate the file `foo.pyx`:\r\n```python\r\nctypedef fused FUSED:\r\n    float\r\n    int\r\n\r\ndef foo(FUSED bar, baz=None):\r\n    pass\r\n```\r\nThen in Python:\r\n```\r\n>>> import pyximport; pyximport.install()\r\n(None, <pyximport.pyximport.PyxImporter object at 0x10f7c0410>)\r\n>>> import foo\r\n>>> foo.foo.__kwdefaults__\r\nzsh: segmentation fault\r\n```\r\n\r\nThis works of course when compiled with a setup.py script as well; the above is just the most minimal test case. There's no segfault without the keyword argument, and no segfault if the fused type is replaced with a regular type.\r\n\r\nA relevant chunk of backtrace from Linux is below. The backtrace on the mac is identical.\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n__pyx_pf_3foo_12__defaults__ (__pyx_self=0x7ffff414d528)\r\n    at /home/zplab/.pyxbld/temp.linux-x86_64-3.5/pyrex/foo.c:1506\r\n1506\t  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults2, __pyx_self)->__pyx_arg_baz);\r\n(gdb) bt\r\n#0  __pyx_pf_3foo_12__defaults__ (__pyx_self=0x7ffff414d528)\r\n    at /home/zplab/.pyxbld/temp.linux-x86_64-3.5/pyrex/foo.c:1506\r\n#1  0x00007ffff3228e51 in __Pyx_CyFunction_init_defaults (op=0x7ffff414d528)\r\n    at /home/zplab/.pyxbld/temp.linux-x86_64-3.5/pyrex/foo.c:3136\r\n#2  __Pyx_CyFunction_get_kwdefaults (op=0x7ffff414d528)\r\n    at /home/zplab/.pyxbld/temp.linux-x86_64-3.5/pyrex/foo.c:3206\r\n#3  0x00007ffff79a9bb3 in _PyObject_GenericGetAttrWithDict (\r\n    obj=0x7ffff414d528, name=0x7ffff69ffcf0, dict=0x0) at Objects/object.c:1059\r\n#4  0x00007ffff7a26c8e in PyEval_EvalFrameEx (f=<optimized out>, \r\n    throwflag=<optimized out>) at Python/ceval.c:2743\r\n#5  0x00007ffff7a2eb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, \r\n    globals=<optimized out>, locals=<optimized out>, args=<optimized out>, \r\n    argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, \r\n    closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:4018\r\n#6  0x00007ffff7a2ecd8 in PyEval_EvalCodeEx (_co=<optimized out>, \r\n    globals=<optimized out>, locals=<optimized out>, args=<optimized out>, \r\n    argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, \r\n    defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:4039\r\n```\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1470/comments",
    "created_at": "2016-09-25T19:21:01Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1470/events",
    "html_url": "https://github.com/cython/cython/issues/1470",
    "id": 179103485,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1470/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1470,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "segfault with fused types and __kwdefaults__",
    "updated_at": "2016-09-25T19:21:01Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1470",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/174217?v=3",
        "events_url": "https://api.github.com/users/zpincus/events{/privacy}",
        "followers_url": "https://api.github.com/users/zpincus/followers",
        "following_url": "https://api.github.com/users/zpincus/following{/other_user}",
        "gists_url": "https://api.github.com/users/zpincus/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zpincus",
        "id": 174217,
        "login": "zpincus",
        "organizations_url": "https://api.github.com/users/zpincus/orgs",
        "received_events_url": "https://api.github.com/users/zpincus/received_events",
        "repos_url": "https://api.github.com/users/zpincus/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zpincus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zpincus/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zpincus"
    }
}