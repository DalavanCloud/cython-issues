{
    "assignee": null,
    "assignees": [],
    "body": "There didn't seem to be an issue for this, but I wanted to capture [this thread](https://groups.google.com/forum/#!topic/cython-users/NwHYKvqMJN4) from the mailing list. Basically, cppclass cannot call the base class constructors.  This is must for some libraries where \"Base::Base(arg)\" does cannot be called explicitly in the constructor body.\r\n\r\nThe example from the mailing list is below. \r\n\r\nFor the time being I have circumvented this via a small post-process scrip available here: https://github.com/scopatz/cyclus/blob/pyagent/cli/post-process-cython.py\r\n\r\n----------\r\n\r\n**myclass.hpp**\r\n```C++\r\nnamespace mine {\r\n\r\nstruct myclass\r\n{\r\n\t//myclass();\r\n\tmyclass(int a_, int b_);\r\n\tint a;\r\n\tint b;\r\n};\r\n\r\n}\r\n```\r\n\r\n**myclass.cpp**\r\n\r\n```C++\r\n//myclass::myclass() {}\r\n\r\nmyclass::myclass(int a_, int b_)\r\n{\r\n\tthis->a = a_;\r\n\tthis->b = b_;\r\n}\r\n```\r\n\r\n**cmyclass.pxd:**\r\n\r\n```cython\r\ncdef extern from \"myclass.hpp\" namespace \"mine\":\r\n\r\n        cdef cppclass myclass:\r\n        #myclass()\r\n        myclass(int a_, int b_)\r\n        int a\r\n        int b\r\n```\r\n\r\n**myclass_wrapper.pyx**\r\n\r\n```cython\r\ncimport cmyclass\r\n\r\n\r\ncdef cppclass _myclass(cmyclass.myclass):\r\n    __init__(PyObject* tup):\r\n        \r\n       # WOULD LIKE TO CALL myclass::myclass(int, int) HERE.\r\n\r\n        this.a = int((<object>tup)[0])\r\n        this.b = int((<object>tup)[1])\r\n\r\n\r\ncdef class MyClass(object):\r\n\r\n    cdef _myclass *thisptr\r\n\r\n    def __cinit__(self):\r\n        self.thisptr = new _myclass((5, 5))\r\n\r\n```\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1581/comments",
    "created_at": "2017-01-17T21:18:40Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1581/events",
    "html_url": "https://github.com/cython/cython/issues/1581",
    "id": 201407797,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1581/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1581,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Calling C++ Parent / Base class Constructors",
    "updated_at": "2017-01-17T21:18:40Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1581",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/320553?v=3",
        "events_url": "https://api.github.com/users/scopatz/events{/privacy}",
        "followers_url": "https://api.github.com/users/scopatz/followers",
        "following_url": "https://api.github.com/users/scopatz/following{/other_user}",
        "gists_url": "https://api.github.com/users/scopatz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scopatz",
        "id": 320553,
        "login": "scopatz",
        "organizations_url": "https://api.github.com/users/scopatz/orgs",
        "received_events_url": "https://api.github.com/users/scopatz/received_events",
        "repos_url": "https://api.github.com/users/scopatz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scopatz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scopatz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scopatz"
    }
}