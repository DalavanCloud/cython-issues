{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "As per this [Stackoverflow question](https://stackoverflow.com/q/53744729/425458), say you have a `setup.py` that looks like this:\r\n\r\n```\r\nfrom distutils.core import setup\r\nfrom distutils.extension import Extension\r\nfrom Cython.Build import cythonize\r\n\r\nimport numpy as np\r\n\r\nextensions = [\r\n    Extension(\r\n        'boolFunc',\r\n        ['../../../src/boolFunc.pyx'],\r\n        include_dirs=[np.get_include()],\r\n    )]\r\n\r\nsetup(\r\n    ext_modules=cythonize(extensions,\r\n                          build_dir='build_dir'),\r\n)\r\n```\r\n\r\nWhen you try to build the Cython extension with, say, the following call:\r\n\r\n```\r\npython setup.py build_ext -b /Users/foo/proj/lib -t .\r\n```\r\n\r\nThe `cythonize` routine will try to build the path to the `boolFunc.c` file as:\r\n\r\n```\r\n./build_dir/../../../src/boolFunc.c\r\n```\r\n\r\nand the path to `boolFunc.o` will be built similarly.\r\n\r\nAt this point, insanity breaks loose. Best case scenario, `setup.py` crashes. Worst case, instead of saving the the temporary `.c` and `.o` files to the specified `build_dir`, they end up in a semi-random (seeming) place on the filesystem. Actually, I think I was getting both things happening (the `.c` file would be created somewhere weird, and then `setup.py` would crash).",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "IMHO, insanity already starts when people use paths like `'../../../src/boolFunc.pyx'` as their sources.\r\nI don't think there is a correct/safe way to handle such a case. People can happily refer to their sources from `src/`, `../src/`, `../../src/` etc., and then complain that Cython shovels them all in the same build directory and weird things start happening. Would that be Cython's fault? I don't think so.\r\n\r\nI agree that the PR improves the specifically described situation. It does not solve the general problem that people come up with weird build setups and expect the tools to magically make them work.",
            "created_at": "2018-12-21T08:36:38Z",
            "html_url": "https://github.com/cython/cython/issues/2764#issuecomment-449311806",
            "id": 449311806,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTMxMTgwNg==",
            "updated_at": "2018-12-21T08:36:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/449311806",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "As they say, there's no accounting for taste. And I completely agree that the most general case is hopeless. Which is exactly why \"weird build\" functionality should be added in on the basis of reasonable(-ish) use cases. This is also why you should completely ignore the perverse ones (I thought of the `src/`, `../src/`, `../../src/` etc. case too as I was writing the PR. I'm gonna say that one's their own damn fault).\r\n\r\nAn \"up-and-to-the-left-of-the-source\" build is obviously not ideal, but I've run into similar situations myself. They usually involve in-house code that's needed as a dependency by 3 or 4 other in-house projects. I suppose the  \"correct\" way to deal with those situations is something like Git submodule, but honestly that's not really that great a solution either. So I sympathize with the guy who asked about this on SO.",
            "created_at": "2018-12-21T09:55:55Z",
            "html_url": "https://github.com/cython/cython/issues/2764#issuecomment-449339150",
            "id": 449339150,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTMzOTE1MA==",
            "updated_at": "2018-12-21T09:55:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/449339150",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/2263641?v=4",
                "events_url": "https://api.github.com/users/telamonian/events{/privacy}",
                "followers_url": "https://api.github.com/users/telamonian/followers",
                "following_url": "https://api.github.com/users/telamonian/following{/other_user}",
                "gists_url": "https://api.github.com/users/telamonian/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telamonian",
                "id": 2263641,
                "login": "telamonian",
                "node_id": "MDQ6VXNlcjIyNjM2NDE=",
                "organizations_url": "https://api.github.com/users/telamonian/orgs",
                "received_events_url": "https://api.github.com/users/telamonian/received_events",
                "repos_url": "https://api.github.com/users/telamonian/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telamonian/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telamonian/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telamonian"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2764/comments",
    "created_at": "2018-12-17T23:30:34Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/2263641?v=4",
                "events_url": "https://api.github.com/users/telamonian/events{/privacy}",
                "followers_url": "https://api.github.com/users/telamonian/followers",
                "following_url": "https://api.github.com/users/telamonian/following{/other_user}",
                "gists_url": "https://api.github.com/users/telamonian/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telamonian",
                "id": 2263641,
                "login": "telamonian",
                "node_id": "MDQ6VXNlcjIyNjM2NDE=",
                "organizations_url": "https://api.github.com/users/telamonian/orgs",
                "received_events_url": "https://api.github.com/users/telamonian/received_events",
                "repos_url": "https://api.github.com/users/telamonian/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telamonian/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telamonian/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telamonian"
            },
            "commit_id": "011ef97d20a65117587c7663e5daa9761da0df8d",
            "commit_url": "https://api.github.com/repos/telamonian/cython/commits/011ef97d20a65117587c7663e5daa9761da0df8d",
            "created_at": "2018-12-17T23:30:55Z",
            "event": "referenced",
            "id": 2031656160,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIwMzE2NTYxNjA=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2031656160"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2764/events",
    "html_url": "https://github.com/cython/cython/issues/2764",
    "id": 391933411,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2764/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzOTE5MzM0MTE=",
    "number": 2764,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Using an out of place build directory with src paths like \"../../../src/foo.pyx\" doesn't work",
    "updated_at": "2018-12-21T09:55:55Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2764",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/2263641?v=4",
        "events_url": "https://api.github.com/users/telamonian/events{/privacy}",
        "followers_url": "https://api.github.com/users/telamonian/followers",
        "following_url": "https://api.github.com/users/telamonian/following{/other_user}",
        "gists_url": "https://api.github.com/users/telamonian/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/telamonian",
        "id": 2263641,
        "login": "telamonian",
        "node_id": "MDQ6VXNlcjIyNjM2NDE=",
        "organizations_url": "https://api.github.com/users/telamonian/orgs",
        "received_events_url": "https://api.github.com/users/telamonian/received_events",
        "repos_url": "https://api.github.com/users/telamonian/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/telamonian/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/telamonian/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/telamonian"
    }
}