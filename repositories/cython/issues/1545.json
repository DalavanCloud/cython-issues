{
    "assignee": null,
    "assignees": [],
    "body": "Consider `test_cy2.pyx`:\r\n```python\r\nimport asyncio\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\nasync def handler():\r\n    print('Before Sleep')\r\n    await asyncio.sleep(1)\r\n    print('After Sleep')\r\n    return 1\r\n\r\n\r\nasync def run():\r\n    print('Run started')\r\n    res = await handler()\r\n    assert res == 1\r\n    print('Run ended')\r\n    loop.stop()\r\n\r\nloop.run_until_complete(asyncio.ensure_future(run()))\r\nloop.run_forever()\r\n```\r\n```\r\n$ python -c 'import os; import pyximport; pyximport.install(); os.chdir(\"/tmp\"); import test_cy2'                                                                             features/aiohttp b6569d6 ✗\r\n/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/Cython/Distutils/old_build_ext.py:30: UserWarning: Cython.Distutils.old_build_ext does not properly handle dependencies and is deprecated.\r\n  \"Cython.Distutils.old_build_ext does not properly handle dependencies \"\r\nRun started\r\nBefore Sleep\r\nAfter Sleep\r\nRun ended\r\n$\r\n```\r\n\r\nNow consider `test_cy3.pyx`:\r\n```python\r\nimport asyncio\r\n\r\n\r\n@asyncio.coroutine\r\ndef handler():\r\n    print('Before Sleep')\r\n    yield from asyncio.sleep(1)\r\n    print('After Sleep')\r\n    return 1\r\n\r\n\r\n@asyncio.coroutine\r\ndef run():\r\n    print('Run started')\r\n    res = yield from handler()\r\n    assert res == 1\r\n    print('Run ended')\r\n    loop.stop()\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(asyncio.ensure_future(run()))\r\nloop.run_forever()\r\n```\r\n```\r\n$ python -c 'import os; import pyximport; pyximport.install(); os.chdir(\"/tmp\"); import test_cy3'                                                                             features/aiohttp b6569d6 ✗\r\n/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/Cython/Distutils/old_build_ext.py:30: UserWarning: Cython.Distutils.old_build_ext does not properly han\r\ndle dependencies and is deprecated.\r\n  \"Cython.Distutils.old_build_ext does not properly handle dependencies \"\r\n^CTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 664, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 634, in _load_backward_compatible\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/pyximport/pyximport.py\", line 445, in load_module\r\n    language_level=self.language_level)\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/pyximport/pyximport.py\", line 217, in load_module\r\n    mod = imp.load_dynamic(name, so_path)\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/imp.py\", line 342, in load_dynamic\r\n    return _load(spec)\r\n  File \"test_cy3.pyx\", line 22, in init test_cy3 (/home/vampas/.pyxbld/temp.linux-x86_64-3.5/pyrex/test_cy3.c:2118)\r\n    loop.run_forever()\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib/python3.5/asyncio/base_events.py\", line 345, in run_forever\r\n    self._run_once()\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib/python3.5/asyncio/base_events.py\", line 1276, in _run_once\r\n    event_list = self._selector.select(timeout)\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib/python3.5/selectors.py\", line 441, in select\r\n    fd_event_list = self._epoll.poll(timeout, max_ev)\r\nKeyboardInterrupt\r\n$ \r\n```\r\nI had to manually interrupt the loop and nothing ran...",
    "closed_at": null,
    "comment_data": [
        {
            "body": "Even worse, `test_cy4.pyx`:\r\n```python\r\nimport asyncio\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\n@asyncio.coroutine\r\ndef handler():\r\n    print('Before Sleep')\r\n    yield from asyncio.sleep(1)\r\n    print('After Sleep')\r\n    return 1\r\n\r\n\r\nasync def run():\r\n    print('Run started')\r\n    res = await handler()\r\n    assert res == 1, res\r\n    print('Run ended')\r\n    loop.stop()\r\n\r\nloop.run_until_complete(asyncio.ensure_future(run()))\r\nloop.run_forever()\r\n```\r\n```\r\n$ python -c 'import os; import pyximport; pyximport.install(); os.chdir(\"/tmp\"); import test_cy4'                                                                             features/aiohttp b6569d6 ✗\r\n/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/Cython/Distutils/old_build_ext.py:30: UserWarning: Cython.Distutils.old_build_ext does not properly handle dependencies and is deprecated.\r\n  \"Cython.Distutils.old_build_ext does not properly handle dependencies \"\r\nRun started\r\nTraceback (most recent call last):\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/pyximport/pyximport.py\", line 217, in load_module\r\n    mod = imp.load_dynamic(name, so_path)\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/imp.py\", line 342, in load_dynamic\r\n    return _load(spec)\r\n  File \"test_cy4.pyx\", line 20, in init test_cy4 (/home/vampas/.pyxbld/temp.linux-x86_64-3.5/pyrex/test_cy4.c:2032)\r\n    loop.run_until_complete(asyncio.ensure_future(run()))\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib/python3.5/asyncio/base_events.py\", line 387, in run_until_complete\r\n    return future.result()\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"test_cy4.pyx\", line 16, in run (/home/vampas/.pyxbld/temp.linux-x86_64-3.5/pyrex/test_cy4.c:1334)\r\n    assert res == 1, res\r\nAssertionError: <generator object at 0x7f545bcfa730>\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/pyximport/pyximport.py\", line 445, in load_module\r\n    language_level=self.language_level)\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/pyximport/pyximport.py\", line 232, in load_module\r\n    raise exc.with_traceback(tb)\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/pyximport/pyximport.py\", line 217, in load_module\r\n    mod = imp.load_dynamic(name, so_path)\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/imp.py\", line 342, in load_dynamic\r\n    return _load(spec)\r\n  File \"test_cy4.pyx\", line 20, in init test_cy4 (/home/vampas/.pyxbld/temp.linux-x86_64-3.5/pyrex/test_cy4.c:2032)\r\n    loop.run_until_complete(asyncio.ensure_future(run()))\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib/python3.5/asyncio/base_events.py\", line 387, in run_until_complete\r\n    return future.result()\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"test_cy4.pyx\", line 16, in run (/home/vampas/.pyxbld/temp.linux-x86_64-3.5/pyrex/test_cy4.c:1334)\r\n    assert res == 1, res\r\nImportError: Building module test_cy4 failed: ['AssertionError: <generator object at 0x7f545bcfa730>\\n']\r\n```\r\n\r\nThis example is to mimic someone using the 3.5 async def/await syntax while having to work with libraries with pre 3.5 syntax...",
            "created_at": "2016-12-08T19:21:53Z",
            "html_url": "https://github.com/cython/cython/issues/1545#issuecomment-265829667",
            "id": 265829667,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1545",
            "updated_at": "2016-12-08T19:21:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/265829667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=3",
                "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
                "followers_url": "https://api.github.com/users/s0undt3ch/followers",
                "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
                "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/s0undt3ch",
                "id": 300048,
                "login": "s0undt3ch",
                "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
                "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
                "repos_url": "https://api.github.com/users/s0undt3ch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/s0undt3ch"
            }
        },
        {
            "body": "hmm, on `test_cy4.pyx` if I import `inspect`, it works, can we have the `asyncio` and `inspect` patch behaviour on by default?\r\nIn order for the patch behaviour to \"kick in\", every cythonized module needs to import `asyncio` and `inspect`?",
            "created_at": "2016-12-09T00:43:49Z",
            "html_url": "https://github.com/cython/cython/issues/1545#issuecomment-265900288",
            "id": 265900288,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1545",
            "updated_at": "2016-12-09T00:43:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/265900288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=3",
                "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
                "followers_url": "https://api.github.com/users/s0undt3ch/followers",
                "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
                "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/s0undt3ch",
                "id": 300048,
                "login": "s0undt3ch",
                "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
                "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
                "repos_url": "https://api.github.com/users/s0undt3ch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/s0undt3ch"
            }
        },
        {
            "body": "Yeah, if we use 3rd party libs which use the asyncio.coroutine, we're still stuck :(",
            "created_at": "2016-12-09T04:37:25Z",
            "html_url": "https://github.com/cython/cython/issues/1545#issuecomment-265931847",
            "id": 265931847,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1545",
            "updated_at": "2016-12-09T04:37:25Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/265931847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=3",
                "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
                "followers_url": "https://api.github.com/users/s0undt3ch/followers",
                "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
                "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/s0undt3ch",
                "id": 300048,
                "login": "s0undt3ch",
                "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
                "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
                "repos_url": "https://api.github.com/users/s0undt3ch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/s0undt3ch"
            }
        },
        {
            "body": "For some additional context on how I detected all of this: https://github.com/KeepSafe/aiohttp/issues/1464",
            "created_at": "2016-12-09T12:55:45Z",
            "html_url": "https://github.com/cython/cython/issues/1545#issuecomment-266007074",
            "id": 266007074,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1545",
            "updated_at": "2016-12-09T12:55:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/266007074",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=3",
                "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
                "followers_url": "https://api.github.com/users/s0undt3ch/followers",
                "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
                "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/s0undt3ch",
                "id": 300048,
                "login": "s0undt3ch",
                "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
                "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
                "repos_url": "https://api.github.com/users/s0undt3ch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/s0undt3ch"
            }
        },
        {
            "body": "\"Yeah, if we use 3rd party libs which use the asyncio.coroutine, we're still stuck\"\r\nIt's (usually) enough if one of the Cython modules in the system imports these modules in order to activate the inspect integration, as all modules built with the same Cython version will share the same internal type implementation.\r\n\r\n\"This example is to mimic someone using the 3.5 async def/await syntax while having to work with libraries with pre 3.5 syntax...\"\r\nNote that you can use async/await in Cython modules even if the Python runtime does not support it.",
            "created_at": "2016-12-10T12:42:37Z",
            "html_url": "https://github.com/cython/cython/issues/1545#issuecomment-266205253",
            "id": 266205253,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1545",
            "updated_at": "2016-12-10T12:42:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/266205253",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=3",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "body": "So, I've been debugging my problem with no solution in sight but I have some test applications which do not corroborate with your first reply.\r\nThe code can be found [here](https://github.com/s0undt3ch/aiohttp-cython-testapps), but basically(transcript of the repo's readme file with the conclusions).\r\n\r\nVersions Used\r\n=============\r\n* Python 3.5.2\r\n* Cython 0.25.1\r\n* aiohttp 1.1.6\r\n* aiohttp-session 0.8.0\r\n\r\ntestapp1\r\n========\r\n\r\nRun testapp1 in non compiled mode:\r\n\r\n```\r\n\r\n   python -c 'import testapp1.app'\r\n   DEBUG:asyncio:Using selector: EpollSelector\r\n  ======== Running on http://localhost:8080 ========\r\n  (Press CTRL+C to quit)\r\n```\r\n\r\nNow test the old and the new asyncio syntax handlers\r\n\r\n```\r\n\r\n   curl -sS http://localhost:8080/old && curl -sS http://localhost:8080/new\r\n  OLD SYNTAX\r\n  NEW SYNTAX\r\n```\r\n\r\nNow, let's install testapp1 which will compile all code using cython:\r\n\r\n```\r\n   python setup.py install\r\n\r\n  /home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/Cython/Distutils/old_build_ext.py:30: UserWarning: Cython.Distutils.old_build_ext does not properly han\r\n  dle dependencies and is deprecated.\r\n    \"Cython.Distutils.old_build_ext does not properly handle dependencies \"\r\n  Compiling /home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/app.py because it changed.\r\n  Compiling /home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/new_handlers.py because it changed.\r\n  Compiling /home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/old_handlers.py because it changed.\r\n  [1/3] Cythonizing /home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/app.py\r\n  [2/3] Cythonizing /home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/new_handlers.py\r\n  [3/3] Cythonizing /home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/old_handlers.py\r\n  running install\r\n  running bdist_egg\r\n  running egg_info\r\n  writing top-level names to testapp1.egg-info/top_level.txt\r\n  writing testapp1.egg-info/PKG-INFO\r\n  writing dependency_links to testapp1.egg-info/dependency_links.txt\r\n  reading manifest file 'testapp1.egg-info/SOURCES.txt'\r\n  writing manifest file 'testapp1.egg-info/SOURCES.txt'\r\n  installing library code to build/bdist.linux-x86_64/egg\r\n  running install_lib\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-x86_64-3.5\r\n  creating build/lib.linux-x86_64-3.5/testapp1\r\n  copying testapp1/__init__.py -> build/lib.linux-x86_64-3.5/testapp1\r\n  running build_ext\r\n  building 'testapp1.app' extension\r\n  creating build/temp.linux-x86_64-3.5\r\n  creating build/temp.linux-x86_64-3.5/home\r\n  creating build/temp.linux-x86_64-3.5/home/vampas\r\n  creating build/temp.linux-x86_64-3.5/home/vampas/projects\r\n  creating build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack\r\n  creating build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console\r\n  creating build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas\r\n  creating build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features\r\n  creating build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp\r\n  creating build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios\r\n  creating build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1\r\n  creating build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/include/python3.5m -c /home/vampas/projects/Salt\r\n  Stack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/app.c -o build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/app.o\r\n  gcc -pthread -shared -L/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/app.o -\r\n  o build/lib.linux-x86_64-3.5/testapp1/app.cpython-35m-x86_64-linux-gnu.so\r\n  building 'testapp1.new_handlers' extension\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/include/python3.5m -c /home/vampas/projects/Salt\r\n  Stack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/new_handlers.c -o build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1\r\n  /new_handlers.o\r\n  gcc -pthread -shared -L/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/new_han\r\n  dlers.o -o build/lib.linux-x86_64-3.5/testapp1/new_handlers.cpython-35m-x86_64-linux-gnu.so\r\n  building 'testapp1.old_handlers' extension\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/include/python3.5m -c /home/vampas/projects/Salt\r\n  Stack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/old_handlers.c -o build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1\r\n  /old_handlers.o\r\n  gcc -pthread -shared -L/home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/lib build/temp.linux-x86_64-3.5/home/vampas/projects/SaltStack/console/raas/features/aiohttp/.scenarios/testapp-1/testapp1/old_han\r\n  dlers.o -o build/lib.linux-x86_64-3.5/testapp1/old_handlers.cpython-35m-x86_64-linux-gnu.so\r\n  creating build/bdist.linux-x86_64\r\n  creating build/bdist.linux-x86_64/egg\r\n  creating build/bdist.linux-x86_64/egg/testapp1\r\n  copying build/lib.linux-x86_64-3.5/testapp1/app.cpython-35m-x86_64-linux-gnu.so -> build/bdist.linux-x86_64/egg/testapp1\r\n  copying build/lib.linux-x86_64-3.5/testapp1/__init__.py -> build/bdist.linux-x86_64/egg/testapp1\r\n  copying build/lib.linux-x86_64-3.5/testapp1/old_handlers.cpython-35m-x86_64-linux-gnu.so -> build/bdist.linux-x86_64/egg/testapp1\r\n  copying build/lib.linux-x86_64-3.5/testapp1/new_handlers.cpython-35m-x86_64-linux-gnu.so -> build/bdist.linux-x86_64/egg/testapp1\r\n  byte-compiling build/bdist.linux-x86_64/egg/testapp1/__init__.py to __init__.cpython-35.pyc\r\n  creating stub loader for testapp1/app.cpython-35m-x86_64-linux-gnu.so\r\n  creating stub loader for testapp1/new_handlers.cpython-35m-x86_64-linux-gnu.so\r\n  creating stub loader for testapp1/old_handlers.cpython-35m-x86_64-linux-gnu.so\r\n  byte-compiling build/bdist.linux-x86_64/egg/testapp1/app.py to app.cpython-35.pyc\r\n  byte-compiling build/bdist.linux-x86_64/egg/testapp1/new_handlers.py to new_handlers.cpython-35.pyc\r\n  byte-compiling build/bdist.linux-x86_64/egg/testapp1/old_handlers.py to old_handlers.cpython-35.pyc\r\n  creating build/bdist.linux-x86_64/egg/EGG-INFO\r\n  copying testapp1.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO\r\n  copying testapp1.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\r\n  copying testapp1.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\r\n  copying testapp1.egg-info/not-zip-safe -> build/bdist.linux-x86_64/egg/EGG-INFO\r\n  copying testapp1.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\r\n  writing build/bdist.linux-x86_64/egg/EGG-INFO/native_libs.txt\r\n  creating 'dist/testapp1-0.0-py3.5-linux-x86_64.egg' and adding 'build/bdist.linux-x86_64/egg' to it\r\n  removing 'build/bdist.linux-x86_64/egg' (and everything under it)\r\n  Processing testapp1-0.0-py3.5-linux-x86_64.egg\r\n  creating /home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/envs/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/testapp1-0.0-py3.5-linux-x86_64.egg\r\n  Extracting testapp1-0.0-py3.5-linux-x86_64.egg to /home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/envs/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages\r\n  Adding testapp1 0.0 to easy-install.pth file\r\n\r\n  Installed /home/vampas/.dotfiles/.ext/pyenv/versions/3.5.2/envs/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/testapp1-0.0-py3.5-linux-x86_64.egg\r\n  Processing dependencies for testapp1==0.0\r\n  Finished processing dependencies for testapp1==0.0\r\n```\r\n\r\nAnd now, let's run the compiled version of testapp1:\r\n\r\n```\r\n\r\n   cd /tmp && python -c 'import testapp1.app'\r\n   DEBUG:asyncio:Using selector: EpollSelector\r\n  ======== Running on http://localhost:8080 ========\r\n  (Press CTRL+C to quit)\r\n```\r\n\r\nNow test the old and the new asyncio syntax handlers:\r\n\r\n```\r\n\r\n   curl -sS http://localhost:8080/old && curl -sS http://localhost:8080/new\r\n\r\n  <html>\r\n    <head>\r\n      <title>500 Internal Server Error</title>\r\n    </head>\r\n    <body>\r\n      <h1>500 Internal Server Error</h1>\r\n      Server got itself in trouble\r\n    </body>\r\n  </html>\r\n  <html>\r\n    <head>\r\n      <title>500 Internal Server Error</title>\r\n    </head>\r\n    <body>\r\n      <h1>500 Internal Server Error</h1>\r\n      Server got itself in trouble\r\n    </body>\r\n  </html>\r\n```\r\n\r\nAnd the traceback on the server side:\r\n\r\n```\r\n  ERROR:aiohttp.web:Error handling request\r\n  Traceback (most recent call last):\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/server.py\", line 265, in start\r\n      yield from self.handle_request(message, payload)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/web.py\", line 96, in handle_request\r\n      resp = yield from handler(request)\r\n    File \"/home/vampas/projects/SaltStack/console/asyncio/aiohttp-session/py35/aiohttp_session/__init__.py\", line 130, in middleware\r\n      raise RuntimeError(\"Expect response, not {!r}\", type(response))\r\n  RuntimeError: ('Expect response, not {!r}', <class 'generator'>)\r\n  INFO:aiohttp.access:::1 - - [13/Dec/2016:13:42:37 +0000] \"GET /old HTTP/1.1\" 500 170 \"-\" \"curl/7.51.0\"\r\n  ERROR:aiohttp.web:Error handling request\r\n  Traceback (most recent call last):\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/server.py\", line 265, in start\r\n      yield from self.handle_request(message, payload)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/web.py\", line 96, in handle_request\r\n      resp = yield from handler(request)\r\n    File \"/home/vampas/projects/SaltStack/console/asyncio/aiohttp-session/py35/aiohttp_session/__init__.py\", line 125, in middleware\r\n      response = await handler(request)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/web_urldispatcher.py\", line 113, in handler_wrapper\r\n      result = yield from result\r\n  TypeError: 'coroutine' object is not iterable\r\n  INFO:aiohttp.access:::1 - - [13/Dec/2016:13:42:37 +0000] \"GET /new HTTP/1.1\" 500 170 \"-\" \"curl/7.51.0\"\r\n  /home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/server.py:292: RuntimeWarning: coroutine 'new_handler' was never awaited\r\n    yield from self.handle_error(500, message, None, exc)\r\n```\r\n\r\ntestapp2\r\n========\r\n\r\ntestapp2 just imports the ``inspect`` module in ``testapp2.app`` to try and trigger the cython asyncio patching.\r\n\r\nRun testapp2 in non compiled mode:\r\n\r\n```\r\n   python -c 'import testapp2.app'\r\n   DEBUG:asyncio:Using selector: EpollSelector\r\n  ======== Running on http://localhost:8080 ========\r\n  (Press CTRL+C to quit)\r\n```\r\n\r\nNow test the old and the new asyncio syntax handlers\r\n\r\n```\r\n   curl -sS http://localhost:8080/old && curl -sS http://localhost:8080/new\r\n  OLD SYNTAX\r\n  NEW SYNTAX\r\n```\r\n\r\nAnd now, let's run the compiled version of testapp2:\r\n\r\n```\r\n   cd /tmp && python -c 'import testapp2.app'\r\n   DEBUG:asyncio:Using selector: EpollSelector\r\n  ======== Running on http://localhost:8080 ========\r\n  (Press CTRL+C to quit)\r\n```\r\n\r\nNow test the old and the new asyncio syntax handlers:\r\n\r\n```\r\n   curl -sS http://localhost:8080/old && curl -sS http://localhost:8080/new\r\n\r\n  <html>\r\n    <head>\r\n      <title>500 Internal Server Error</title>\r\n    </head>\r\n    <body>\r\n      <h1>500 Internal Server Error</h1>\r\n      Server got itself in trouble\r\n    </body>\r\n  </html>\r\n  <html>\r\n    <head>\r\n      <title>500 Internal Server Error</title>\r\n    </head>\r\n    <body>\r\n      <h1>500 Internal Server Error</h1>\r\n      Server got itself in trouble\r\n    </body>\r\n  </html>\r\n```\r\n\r\nAnd the traceback on the server side:\r\n\r\n```\r\n  ERROR:aiohttp.web:Error handling request\r\n  Traceback (most recent call last):\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/server.py\", line 265, in start\r\n      yield from self.handle_request(message, payload)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/web.py\", line 96, in handle_request\r\n      resp = yield from handler(request)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp_session/__init__.py\", line 134, in middleware\r\n      raise RuntimeError(\"Expect response, not {!r}\", type(response))\r\n  RuntimeError: ('Expect response, not {!r}', <class 'generator'>)\r\n  INFO:aiohttp.access:::1 - - [13/Dec/2016:13:51:46 +0000] \"GET /old HTTP/1.1\" 500 170 \"-\" \"curl/7.51.0\"\r\n  ERROR:aiohttp.web:Error handling request\r\n  Traceback (most recent call last):\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/server.py\", line 265, in start\r\n      yield from self.handle_request(message, payload)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/web.py\", line 96, in handle_request\r\n      resp = yield from handler(request)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp_session/__init__.py\", line 129, in middleware\r\n      response = yield from handler(request)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/web_urldispatcher.py\", line 113, in handler_wrapper\r\n      result = yield from result\r\n  TypeError: 'coroutine' object is not iterable\r\n  INFO:aiohttp.access:::1 - - [13/Dec/2016:13:51:46 +0000] \"GET /new HTTP/1.1\" 500 170 \"-\" \"curl/7.51.0\"\r\n  /home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/server.py:292: RuntimeWarning: coroutine 'new_handler' was never awaited\r\n    yield from self.handle_error(500, message, None, exc)\r\n```\r\n\r\ntestapp3\r\n========\r\n\r\ntestapp3 just imports the ``inspect`` module on the request handlers modules to try and trigger the cython asyncio patching.\r\n\r\nRun testapp3 in non compiled mode:\r\n\r\n```\r\n   python -c 'import testapp3.app'\r\n   DEBUG:asyncio:Using selector: EpollSelector\r\n  ======== Running on http://localhost:8080 ========\r\n  (Press CTRL+C to quit)\r\n```\r\n\r\nNow test the old and the new asyncio syntax handlers\r\n\r\n```\r\n   curl -sS http://localhost:8080/old && curl -sS http://localhost:8080/new\r\n  OLD SYNTAX\r\n  NEW SYNTAX\r\n```\r\n\r\nAnd now, let's run the compiled version of testapp3:\r\n\r\n```\r\n   cd /tmp && python -c 'import testapp3.app'\r\n   DEBUG:asyncio:Using selector: EpollSelector\r\n  ======== Running on http://localhost:8080 ========\r\n  (Press CTRL+C to quit)\r\n```\r\n\r\nNow test the old and the new asyncio syntax handlers:\r\n\r\n```\r\n   curl -sS http://localhost:8080/old && curl -sS http://localhost:8080/new\r\n   OLD SYNTAX\r\n\r\n  <html>\r\n    <head>\r\n      <title>500 Internal Server Error</title>\r\n    </head>\r\n    <body>\r\n      <h1>500 Internal Server Error</h1>\r\n      Server got itself in trouble\r\n    </body>\r\n  </html>\r\n```\r\n\r\nAnd the traceback on the server side:\r\n\r\n```\r\n  INFO:aiohttp.access:::1 - - [13/Dec/2016:13:57:57 +0000] \"GET /old HTTP/1.1\" 200 12 \"-\" \"curl/7.51.0\"\r\n  ERROR:aiohttp.web:Error handling request\r\n  Traceback (most recent call last):\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/server.py\", line 265, in start\r\n      yield from self.handle_request(message, payload)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/web.py\", line 96, in handle_request\r\n      resp = yield from handler(request)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp_session/__init__.py\", line 129, in middleware\r\n      response = yield from handler(request)\r\n    File \"/home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/web_urldispatcher.py\", line 113, in handler_wrapper\r\n      result = yield from result\r\n  TypeError: 'coroutine' object is not iterable\r\n  INFO:aiohttp.access:::1 - - [13/Dec/2016:13:57:57 +0000] \"GET /new HTTP/1.1\" 500 170 \"-\" \"curl/7.51.0\"\r\n  /home/vampas/.dotfiles/.ext/pyenv/versions/Raas-3.5.2-features-aiohttp/lib/python3.5/site-packages/aiohttp/server.py:292: RuntimeWarning: coroutine 'new_handler' was never awaited\r\n    yield from self.handle_error(500, message, None, exc)\r\n```\r\n\r\ntestapp4\r\n========\r\n\r\ntestapp4 decorates the new ``async def`` syntax handler with ``@asyncio.coroutine``:\r\n\r\nRun testapp4 in non compiled mode:\r\n\r\n```\r\n   python -c 'import testapp4.app'\r\n   DEBUG:asyncio:Using selector: EpollSelector\r\n  ======== Running on http://localhost:8080 ========\r\n  (Press CTRL+C to quit)\r\n```\r\n\r\nNow test the old and the new asyncio syntax handlers\r\n\r\n```\r\n   curl -sS http://localhost:8080/old && curl -sS http://localhost:8080/new\r\n  OLD SYNTAX\r\n  NEW SYNTAX\r\n```\r\n\r\nAnd now, let's run the compiled version of testapp4:\r\n\r\n```\r\n   cd /tmp && python -c 'import testapp4.app'\r\n   DEBUG:asyncio:Using selector: EpollSelector\r\n  ======== Running on http://localhost:8080 ========\r\n  (Press CTRL+C to quit)\r\n```\r\n\r\nNow test the old and the new asyncio syntax handlers:\r\n\r\n```\r\n   curl -sS http://localhost:8080/old && curl -sS http://localhost:8080/new\r\n  OLD SYNTAX\r\n  NEW SYNTAX\r\n```\r\n\r\nOn this ``testapp4`` we can safely remove the ``inspect`` import from the module where the ``aiohttp`` web application is setup but not from any of the handlers.\r\n",
            "created_at": "2016-12-14T00:33:05Z",
            "html_url": "https://github.com/cython/cython/issues/1545#issuecomment-266906525",
            "id": 266906525,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1545",
            "updated_at": "2016-12-14T00:33:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/266906525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=3",
                "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
                "followers_url": "https://api.github.com/users/s0undt3ch/followers",
                "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
                "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/s0undt3ch",
                "id": 300048,
                "login": "s0undt3ch",
                "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
                "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
                "repos_url": "https://api.github.com/users/s0undt3ch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/s0undt3ch"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1545/comments",
    "created_at": "2016-12-08T19:17:27Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1545/events",
    "html_url": "https://github.com/cython/cython/issues/1545",
    "id": 194420291,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1545/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1545,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "`@asyncio.coroutine` not running?",
    "updated_at": "2016-12-14T00:33:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1545",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=3",
        "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
        "followers_url": "https://api.github.com/users/s0undt3ch/followers",
        "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
        "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/s0undt3ch",
        "id": 300048,
        "login": "s0undt3ch",
        "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
        "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
        "repos_url": "https://api.github.com/users/s0undt3ch/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/s0undt3ch"
    }
}