{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Very often, I find myself writing code of the form\r\n```\r\nif isinstance(x, SomeType):\r\n    y = <SomeType>x\r\n    # do something with y\r\n```\r\nIt would be really cool if Cython would automatically know that `x` is of type `SomeType` inside that branch.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "That would be nice, yes. It might be relatively easy to achieve in the current assignment based type inference, by injecting a fake typed assignment at the start of the if-block (preferably one that repeats the previously assigned value, if any). We are still waiting for the \"better type inference\" to come, but until then, I think we should try to bend what we have as far as we can.",
            "created_at": "2018-12-28T08:54:29Z",
            "html_url": "https://github.com/cython/cython/issues/2762#issuecomment-450320469",
            "id": 450320469,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2762",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDMyMDQ2OQ==",
            "updated_at": "2018-12-28T08:54:29Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/450320469",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": ">  It would be really cool if Cython would automatically know that x is of type SomeType inside that branch.\r\n\r\nThat's not guaranteed though,\r\n```py\r\n>>> import numbers\r\n>>> x = 1\r\n>>> isinstance(x, numbers.Number)\r\nTrue\r\n>>> type(x)\r\nint\r\n```\r\nit could be a subclass.\r\n",
            "created_at": "2018-12-28T15:23:28Z",
            "html_url": "https://github.com/cython/cython/issues/2762#issuecomment-450376098",
            "id": 450376098,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2762",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDM3NjA5OA==",
            "updated_at": "2018-12-28T15:23:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/450376098",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/630936?v=4",
                "events_url": "https://api.github.com/users/rth/events{/privacy}",
                "followers_url": "https://api.github.com/users/rth/followers",
                "following_url": "https://api.github.com/users/rth/following{/other_user}",
                "gists_url": "https://api.github.com/users/rth/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rth",
                "id": 630936,
                "login": "rth",
                "node_id": "MDQ6VXNlcjYzMDkzNg==",
                "organizations_url": "https://api.github.com/users/rth/orgs",
                "received_events_url": "https://api.github.com/users/rth/received_events",
                "repos_url": "https://api.github.com/users/rth/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rth/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rth"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think it would be reasonable to restrict this to extension types and builtins for now, anything that Cython can actually make use of. But yes, builtins have the problem of requiring exact types, not arbitrary subtypes. So a fake assignment might not work for them. This would still work for extension types, though.",
            "created_at": "2018-12-28T18:53:50Z",
            "html_url": "https://github.com/cython/cython/issues/2762#issuecomment-450409209",
            "id": 450409209,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2762",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDQwOTIwOQ==",
            "updated_at": "2018-12-28T18:53:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/450409209",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One difficulty is that (IIRC) we don't track the types of variables at a\nfiner level than scope (though I think the mechanism is there for tracking\nmight-be-None through control flow).\n\nOn Fri, Dec 28, 2018 at 7:53 PM Stefan Behnel <notifications@github.com>\nwrote:\n\n> I think it would be reasonable to restrict this to extension types and\n> builtins for now, anything that Cython can actually make use of. But yes,\n> builtins have the problem of requiring exact types, not arbitrary subtypes.\n> So a fake assignment might not work for them. This would still work for\n> extension types, though.\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/2762#issuecomment-450409209>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAdqgRxd_prdTuZxXF9p7l2g0WKGA4a3ks5u9mi_gaJpZM4ZV8WI>\n> .\n>\n",
            "created_at": "2018-12-28T19:09:48Z",
            "html_url": "https://github.com/cython/cython/issues/2762#issuecomment-450411566",
            "id": 450411566,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2762",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDQxMTU2Ng==",
            "updated_at": "2018-12-28T19:09:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/450411566",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Right. The inferred type of the variable would still be `object` (usually), since it's assigned globally to the function scope.\r\n\r\nHowever, we do keep the set of latest assignments for each `NameNode` after the control flow analysis. Inside of the if-block, there would only be one assignment (or some other dedicated way to express the type check), and the type analysis (and later phases) could therefore know the specific type of the current value, even if the type of the variable is more general.",
            "created_at": "2018-12-28T20:26:30Z",
            "html_url": "https://github.com/cython/cython/issues/2762#issuecomment-450421910",
            "id": 450421910,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2762",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDQyMTkxMA==",
            "updated_at": "2018-12-28T20:26:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/450421910",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2762/comments",
    "created_at": "2018-12-17T09:12:47Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-12-28T08:37:04Z",
            "event": "labeled",
            "id": 2046942315,
            "label": {
                "color": "0e8a16",
                "name": "help wanted"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDIwNDY5NDIzMTU=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2046942315"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-12-28T08:37:04Z",
            "event": "labeled",
            "id": 2046942316,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDIwNDY5NDIzMTY=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2046942316"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-12-28T08:37:04Z",
            "event": "labeled",
            "id": 2046942319,
            "label": {
                "color": "444444",
                "name": "Type Analysis"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDIwNDY5NDIzMTk=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2046942319"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2762/events",
    "html_url": "https://github.com/cython/cython/issues/2762",
    "id": 391617983,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425558824,
            "name": "Type Analysis",
            "node_id": "MDU6TGFiZWw0MjU1NTg4MjQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/Type%20Analysis"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        },
        {
            "color": "0e8a16",
            "default": true,
            "id": 414800879,
            "name": "help wanted",
            "node_id": "MDU6TGFiZWw0MTQ4MDA4Nzk=",
            "url": "https://api.github.com/repos/cython/cython/labels/help%20wanted"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2762/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzOTE2MTc5ODM=",
    "number": 2762,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "wishlist: type inference in branches",
    "updated_at": "2018-12-28T20:26:30Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2762",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
        "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
        "followers_url": "https://api.github.com/users/jdemeyer/followers",
        "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
        "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jdemeyer",
        "id": 3625785,
        "login": "jdemeyer",
        "node_id": "MDQ6VXNlcjM2MjU3ODU=",
        "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
        "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
        "repos_url": "https://api.github.com/users/jdemeyer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jdemeyer"
    }
}