{
    "assignee": null,
    "assignees": [],
    "body": "This is currently annoying for bytes literals (which Cython handles as ```char*``` values):\n```\ncdef char* s = \"abcdefg\"\nprint s == b\"abcdefg\"\n```\nmay or may not print ```True```, depending on the pointer used to store the first string. It should only depend on the string value itself, regardless of the pointers.\n\nThus, Cython should generate the following test code in C for the above:\n```\n(s == __pyx_kb_abcdefg) ||\n    ((s != NULL) && (__pyx_kb_abcdefg != NULL) &&\n     (strcmp(s, __pyx_kb_abcdefg) == 0))\n```\n\nThe same applies to other operators like \"<\" and \">\".\n\nThis breaks existing (and IMHO invalid) code that relies on pointer comparisons for these operators. It may also come as a surprise for some users as this behaviour is different for all other pointer types. But I think it is closer to the \"expected behaviour\" than the current behaviour, assuming that ```char*``` values should behave as much like bytes objects as possible.\n\nTo test for identity, pointer comparison can easily be achieved using the \"is\" operator. For explicit pointer comparisons with \"><\", the pointers need a cast to e.g. ```<size_t>``` to prevent string comparison.\n\nSliced ```char*``` values already compare their string values:\n```\ncdef char* s1 = \"...\"\ncdef char* s2 = \"...\"\nprint s1[== s2[:3](:3])\n```\nThis works because the slicing returns a Python bytes object. However, this could become a general feature for sliced pointers, and it can be made more efficient for the ```char*``` case.\n\nMigrated from http://trac.cython.org/ticket/582",
    "closed_at": null,
    "comment_data": [
        {
            "body": "**scoder** changed **description** from\n\nThis is particularly annoying for bytes literals (which Cython handles as ```char*``` values):\n```\ncdef char* s = \"abcdefg\"\nprint s == b\"abcdefg\"\n```\nmay or may not print ```True```, depending on the pointer used to store the first string. It should only depend on the string value itself, regardless of the pointers. Pointer comparison can easily be achieved using the \"is\" operator.\n\nThus, Cython should generate the following test code in C for the above:\n```\n(s == __pyx_kb_abcdefg) ||\n    ((s != NULL) && (__pyx_kb_abcdefg != NULL) &&\n     (strcmp(s, __pyx_kb_abcdefg) == 0))\n```\n\nThis breaks existing code that relies on pointer comparisons for \"==\". It may also come as a surprise for some users as this behaviour is different for all other pointer types. But I think it is closer to the \"expected behaviour\" than the current behaviour, assuming that ```char*``` values should behave as much like bytes objects as possible.\n\n\nto\n\nThis is particularly annoying for bytes literals (which Cython handles as ```char*``` values):\n```\ncdef char* s = \"abcdefg\"\nprint s == b\"abcdefg\"\n```\nmay or may not print ```True```, depending on the pointer used to store the first string. It should only depend on the string value itself, regardless of the pointers.\n\nThus, Cython should generate the following test code in C for the above:\n```\n(s == __pyx_kb_abcdefg) ||\n    ((s != NULL) && (__pyx_kb_abcdefg != NULL) &&\n     (strcmp(s, __pyx_kb_abcdefg) == 0))\n```\n\nThis breaks existing code that relies on pointer comparisons for \"==\". It may also come as a surprise for some users as this behaviour is different for all other pointer types. But I think it is closer to the \"expected behaviour\" than the current behaviour, assuming that ```char*``` values should behave as much like bytes objects as possible.\n\nTo test equality, pointer comparison can easily be achieved using the \"is\" operator. For \"><\" comparisons, the pointers need a cast to e.g. ```<size_t>``` to prevent string comparison.\n**summary** from\n\n\"charptr == charptr\" should use string comparison instead of pointer equality\n\nto\n\ncomparison operators on char* values should compare strings, not pointers\ncommented\n\nGeneralised ticket to include \"><\" operators.",
            "created_at": "2010-10-09T15:40:03Z",
            "html_url": "https://github.com/cython/cython/issues/1141#issuecomment-240047671",
            "id": 240047671,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1141",
            "updated_at": "2016-08-16T09:10:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240047671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "**scoder** commented\n\nSee the corresponding ML thread:\n\nhttp://comments.gmane.org/gmane.comp.python.cython.devel/10372?set_lines=100000",
            "created_at": "2010-10-09T15:44:06Z",
            "html_url": "https://github.com/cython/cython/issues/1141#issuecomment-240047672",
            "id": 240047672,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1141",
            "updated_at": "2016-08-16T09:10:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240047672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "**scoder** changed **component** from `Python Semantics` to `Language Feature`\n**description** from\n\nThis is particularly annoying for bytes literals (which Cython handles as ```char*``` values):\n```\ncdef char* s = \"abcdefg\"\nprint s == b\"abcdefg\"\n```\nmay or may not print ```True```, depending on the pointer used to store the first string. It should only depend on the string value itself, regardless of the pointers.\n\nThus, Cython should generate the following test code in C for the above:\n```\n(s == __pyx_kb_abcdefg) ||\n    ((s != NULL) && (__pyx_kb_abcdefg != NULL) &&\n     (strcmp(s, __pyx_kb_abcdefg) == 0))\n```\n\nThis breaks existing code that relies on pointer comparisons for \"==\". It may also come as a surprise for some users as this behaviour is different for all other pointer types. But I think it is closer to the \"expected behaviour\" than the current behaviour, assuming that ```char*``` values should behave as much like bytes objects as possible.\n\nTo test equality, pointer comparison can easily be achieved using the \"is\" operator. For \"><\" comparisons, the pointers need a cast to e.g. ```<size_t>``` to prevent string comparison.\n\n\nto\n\nThis is currently annoying for bytes literals (which Cython handles as ```char*``` values):\n```\ncdef char* s = \"abcdefg\"\nprint s == b\"abcdefg\"\n```\nmay or may not print ```True```, depending on the pointer used to store the first string. It should only depend on the string value itself, regardless of the pointers.\n\nThus, Cython should generate the following test code in C for the above:\n```\n(s == __pyx_kb_abcdefg) ||\n    ((s != NULL) && (__pyx_kb_abcdefg != NULL) &&\n     (strcmp(s, __pyx_kb_abcdefg) == 0))\n```\n\nThe same applies to other operators like \"<\" and \">\".\n\nThis breaks existing (and IMHO invalid) code that relies on pointer comparisons for these operators. It may also come as a surprise for some users as this behaviour is different for all other pointer types. But I think it is closer to the \"expected behaviour\" than the current behaviour, assuming that ```char*``` values should behave as much like bytes objects as possible.\n\nTo test equality, pointer comparison can easily be achieved using the \"is\" operator. For explicit pointer comparisons with \"><\", the pointers need a cast to e.g. ```<size_t>``` to prevent string comparison.\n\nAs Robert proposed, sliced ```char*``` values should also compare their string values:\n```\ncdef char* s1 = \"...\"\ncdef char* s2 = \"...\"\nprint s1[== s2[:3](:3])\n```\nThis could actually become a general feature for sliced pointers.\n**summary** from\n\ncomparison operators on char* values should compare strings, not pointers\n\nto\n\ncomparison operators on char* literals and sliced arrays should compare strings, not pointers\ncommented",
            "created_at": "2010-10-30T19:27:29Z",
            "html_url": "https://github.com/cython/cython/issues/1141#issuecomment-240047673",
            "id": 240047673,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1141",
            "updated_at": "2016-08-16T09:10:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240047673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "**scoder** changed **description** from\n\nThis is currently annoying for bytes literals (which Cython handles as ```char*``` values):\n```\ncdef char* s = \"abcdefg\"\nprint s == b\"abcdefg\"\n```\nmay or may not print ```True```, depending on the pointer used to store the first string. It should only depend on the string value itself, regardless of the pointers.\n\nThus, Cython should generate the following test code in C for the above:\n```\n(s == __pyx_kb_abcdefg) ||\n    ((s != NULL) && (__pyx_kb_abcdefg != NULL) &&\n     (strcmp(s, __pyx_kb_abcdefg) == 0))\n```\n\nThe same applies to other operators like \"<\" and \">\".\n\nThis breaks existing (and IMHO invalid) code that relies on pointer comparisons for these operators. It may also come as a surprise for some users as this behaviour is different for all other pointer types. But I think it is closer to the \"expected behaviour\" than the current behaviour, assuming that ```char*``` values should behave as much like bytes objects as possible.\n\nTo test equality, pointer comparison can easily be achieved using the \"is\" operator. For explicit pointer comparisons with \"><\", the pointers need a cast to e.g. ```<size_t>``` to prevent string comparison.\n\nAs Robert proposed, sliced ```char*``` values should also compare their string values:\n```\ncdef char* s1 = \"...\"\ncdef char* s2 = \"...\"\nprint s1[== s2[:3](:3])\n```\nThis could actually become a general feature for sliced pointers.\n\n\nto\n\nThis is currently annoying for bytes literals (which Cython handles as ```char*``` values):\n```\ncdef char* s = \"abcdefg\"\nprint s == b\"abcdefg\"\n```\nmay or may not print ```True```, depending on the pointer used to store the first string. It should only depend on the string value itself, regardless of the pointers.\n\nThus, Cython should generate the following test code in C for the above:\n```\n(s == __pyx_kb_abcdefg) ||\n    ((s != NULL) && (__pyx_kb_abcdefg != NULL) &&\n     (strcmp(s, __pyx_kb_abcdefg) == 0))\n```\n\nThe same applies to other operators like \"<\" and \">\".\n\nThis breaks existing (and IMHO invalid) code that relies on pointer comparisons for these operators. It may also come as a surprise for some users as this behaviour is different for all other pointer types. But I think it is closer to the \"expected behaviour\" than the current behaviour, assuming that ```char*``` values should behave as much like bytes objects as possible.\n\nTo test equality, pointer comparison can easily be achieved using the \"is\" operator. For explicit pointer comparisons with \"><\", the pointers need a cast to e.g. ```<size_t>``` to prevent string comparison.\n\nSliced ```char*``` values already compare their string values:\n```\ncdef char* s1 = \"...\"\ncdef char* s2 = \"...\"\nprint s1[== s2[:3](:3])\n```\nThis works because the slicing returns a Python bytes object. However, this could become a general feature for sliced pointers, and it can be made more efficient for the ```char*``` case.\ncommented",
            "created_at": "2010-10-30T19:53:38Z",
            "html_url": "https://github.com/cython/cython/issues/1141#issuecomment-240047675",
            "id": 240047675,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1141",
            "updated_at": "2016-08-16T09:10:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240047675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "**scoder** changed **summary** from\n\ncomparison operators on char* literals and sliced arrays should compare strings, not pointers\n\nto\n\ncomparison operators on char* literals and slices should compare strings, not pointers\ncommented",
            "created_at": "2010-10-30T19:54:19Z",
            "html_url": "https://github.com/cython/cython/issues/1141#issuecomment-240047676",
            "id": 240047676,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1141",
            "updated_at": "2016-08-16T09:10:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240047676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "**scoder** changed **description** from\n\nThis is currently annoying for bytes literals (which Cython handles as ```char*``` values):\n```\ncdef char* s = \"abcdefg\"\nprint s == b\"abcdefg\"\n```\nmay or may not print ```True```, depending on the pointer used to store the first string. It should only depend on the string value itself, regardless of the pointers.\n\nThus, Cython should generate the following test code in C for the above:\n```\n(s == __pyx_kb_abcdefg) ||\n    ((s != NULL) && (__pyx_kb_abcdefg != NULL) &&\n     (strcmp(s, __pyx_kb_abcdefg) == 0))\n```\n\nThe same applies to other operators like \"<\" and \">\".\n\nThis breaks existing (and IMHO invalid) code that relies on pointer comparisons for these operators. It may also come as a surprise for some users as this behaviour is different for all other pointer types. But I think it is closer to the \"expected behaviour\" than the current behaviour, assuming that ```char*``` values should behave as much like bytes objects as possible.\n\nTo test equality, pointer comparison can easily be achieved using the \"is\" operator. For explicit pointer comparisons with \"><\", the pointers need a cast to e.g. ```<size_t>``` to prevent string comparison.\n\nSliced ```char*``` values already compare their string values:\n```\ncdef char* s1 = \"...\"\ncdef char* s2 = \"...\"\nprint s1[== s2[:3](:3])\n```\nThis works because the slicing returns a Python bytes object. However, this could become a general feature for sliced pointers, and it can be made more efficient for the ```char*``` case.\n\n\nto\n\nThis is currently annoying for bytes literals (which Cython handles as ```char*``` values):\n```\ncdef char* s = \"abcdefg\"\nprint s == b\"abcdefg\"\n```\nmay or may not print ```True```, depending on the pointer used to store the first string. It should only depend on the string value itself, regardless of the pointers.\n\nThus, Cython should generate the following test code in C for the above:\n```\n(s == __pyx_kb_abcdefg) ||\n    ((s != NULL) && (__pyx_kb_abcdefg != NULL) &&\n     (strcmp(s, __pyx_kb_abcdefg) == 0))\n```\n\nThe same applies to other operators like \"<\" and \">\".\n\nThis breaks existing (and IMHO invalid) code that relies on pointer comparisons for these operators. It may also come as a surprise for some users as this behaviour is different for all other pointer types. But I think it is closer to the \"expected behaviour\" than the current behaviour, assuming that ```char*``` values should behave as much like bytes objects as possible.\n\nTo test for identity, pointer comparison can easily be achieved using the \"is\" operator. For explicit pointer comparisons with \"><\", the pointers need a cast to e.g. ```<size_t>``` to prevent string comparison.\n\nSliced ```char*``` values already compare their string values:\n```\ncdef char* s1 = \"...\"\ncdef char* s2 = \"...\"\nprint s1[== s2[:3](:3])\n```\nThis works because the slicing returns a Python bytes object. However, this could become a general feature for sliced pointers, and it can be made more efficient for the ```char*``` case.\ncommented",
            "created_at": "2010-10-30T20:05:36Z",
            "html_url": "https://github.com/cython/cython/issues/1141#issuecomment-240047677",
            "id": 240047677,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1141",
            "updated_at": "2016-08-16T09:10:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240047677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "**scoder** changed **component** from `Language Feature` to `Python Semantics`\n**summary** from\n\ncomparison operators on char* literals and slices should compare strings, not pointers\n\nto\n\ncomparison operators on char* literals should compare strings, not pointers\ncommented",
            "created_at": "2010-10-30T20:07:04Z",
            "html_url": "https://github.com/cython/cython/issues/1141#issuecomment-240047679",
            "id": 240047679,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1141",
            "updated_at": "2016-08-16T09:10:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240047679",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "**scoder** commented\n\nThe comparison between ```char*``` and bytes literals is fixed here:\n\nhttp://hg.cython.org/cython-devel/rev/50cb1f7870cd\n\nHowever, it uses Python object coercion for now. This is worth optimising, together with the slice comparison.",
            "created_at": "2010-10-30T20:22:09Z",
            "html_url": "https://github.com/cython/cython/issues/1141#issuecomment-240047680",
            "id": 240047680,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1141",
            "updated_at": "2016-08-16T09:10:22Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240047680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1141/comments",
    "created_at": "2010-10-09T11:22:56Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:10:21Z",
            "event": "labeled",
            "id": 756762318,
            "label": {
                "color": "444444",
                "name": "Python Semantics"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/756762318"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:10:21Z",
            "event": "labeled",
            "id": 756762319,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/756762319"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:10:21Z",
            "event": "milestoned",
            "id": 756762320,
            "milestone": {
                "title": "wishlist"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/756762320"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1141/events",
    "html_url": "https://github.com/cython/cython/issues/1141",
    "id": 171360619,
    "labels": [
        {
            "color": "444444",
            "name": "enhancement",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "444444",
            "name": "Python Semantics",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1141/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 25,
        "created_at": "2016-08-16T08:38:52Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
            "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
            "followers_url": "https://api.github.com/users/robertwb/followers",
            "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
            "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/robertwb",
            "id": 486017,
            "login": "robertwb",
            "organizations_url": "https://api.github.com/users/robertwb/orgs",
            "received_events_url": "https://api.github.com/users/robertwb/received_events",
            "repos_url": "https://api.github.com/users/robertwb/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/robertwb"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestones/wishlist",
        "id": 1944442,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/6/labels",
        "number": 6,
        "open_issues": 196,
        "state": "open",
        "title": "wishlist",
        "updated_at": "2016-08-17T04:27:14Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/6"
    },
    "number": 1141,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "comparison operators on char* literals should compare strings, not pointers",
    "updated_at": "2010-10-30T20:22:09Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1141",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
        "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
        "followers_url": "https://api.github.com/users/robertwb/followers",
        "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
        "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/robertwb",
        "id": 486017,
        "login": "robertwb",
        "organizations_url": "https://api.github.com/users/robertwb/orgs",
        "received_events_url": "https://api.github.com/users/robertwb/received_events",
        "repos_url": "https://api.github.com/users/robertwb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/robertwb"
    }
}