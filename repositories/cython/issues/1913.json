{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Just upgraded to 0.27.1, psyched to try out `@cython.exceptval`.  [Tried it out](https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/tslib.pyx#L1201) on `pandas._libs.tslib._Timestamp._compare_outside_nanorange`:\r\n\r\nExisting:\r\n```\r\n    cdef bint _compare_outside_nanorange(_Timestamp self, datetime other,\r\n                                         int op) except -1:\r\n```\r\n\r\nNew:\r\n```\r\n    @cython.exceptval(-1)\r\n    @cython.locals(self=_Timestamp, other=datetime, op=int)\r\n    @cython.returns(cython.bint)\r\n    @cython.cfunc\r\n    def _compare_outside_nanorange(self, other, op):\r\n```\r\n\r\n`build_ext` complained that `_compare_outside_nanorange` is not declared in the pxd file, so I added it:\r\n\r\n```\r\ncdef class _Timestamp(datetime):\r\n    cdef bint _compare_outside_nanorange(_Timestamp self, datetime other, int op) except -1\r\n```\r\n\r\n`build_ext` now produces the error message `Signature not compatible with previous declaration`.  AFAICT the signatures should be compatible; am I missing something?",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "OWNER",
            "body": "A couple of remarks:\n\nSince you have a .pxd, you don't need the Decorators at all. Well, not in a .py file, at least. Not sure about .pyx.\n\nThere's no use in typing \"self\" since its type is obvious.\n\n@cython.locals() does not change the signature. That's a known limitation, can't look up the ticket right now.\n",
            "created_at": "2017-10-05T04:57:36Z",
            "html_url": "https://github.com/cython/cython/issues/1913#issuecomment-334359204",
            "id": 334359204,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1913",
            "updated_at": "2017-10-05T04:57:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/334359204",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Since you have a .pxd, you don't need the Decorators at all. Well, not in a .py file, at least. Not sure about .pyx.\r\n\r\n[This](https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/tslib.pyx#L1201) is in a pyx.  The pxd file contains only the small subset of functions exported.  In fact, under the status quo, the `_Timestamp` class doesn't exist in [the pxd](https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/tslib.pxd) at all.\r\n\r\n> There's no use in typing \"self\" since its type is obvious.\r\n\r\nMakes sense, thanks.\r\n\r\n> @cython.locals() does not change the signature. That's a known limitation, can't look up the ticket right now.\r\n\r\nI'm not sure what to make of this.  Elsewhere I've been using (in .pyx files)\r\n\r\n```\r\n@cython.locals(foo=bar)\r\n@cython.cfunc\r\ndef somefunc(foo):\r\n    [...]\r\n```\r\n\r\ninterchangeably with\r\n\r\n```\r\ncdef somefunc(bar foo):\r\n    [...]\r\n```\r\n\r\nIn some of these cases I haven't bothered putting `somefunc` in the accompanying pxd file, in others it would just be `cdef somefunc(bar foo)`.  Have I been using this incorrectly?",
            "created_at": "2017-10-06T04:33:56Z",
            "html_url": "https://github.com/cython/cython/issues/1913#issuecomment-334655821",
            "id": 334655821,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1913",
            "updated_at": "2017-10-06T04:33:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/334655821",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        },
        {
            "author_association": "OWNER",
            "body": "May I ask why you seem to prefer the rather verbose decorator syntax over the (IMHO) much more concise dedicated Cython syntax in .pyx files?\r\n\r\nIf I were to start using a more Python-compatible syntax in .pyx files, I'd certainly prefer the PEP-484 syntax over `@locals()` and `@returns()`.",
            "created_at": "2017-10-07T06:20:05Z",
            "html_url": "https://github.com/cython/cython/issues/1913#issuecomment-334913786",
            "id": 334913786,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1913",
            "updated_at": "2017-10-07T06:20:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/334913786",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "A big part of it at this point is just trying to understand what's going on.\r\n\r\nUntil very recently I was having no luck getting coverage working in non-trivial cython code, so the main motivation was getting pure-python compatibility in order to get coverage statistics.  (other tooling e.g. flake8 was/is part of the motivation, but a much lower priority).\r\n\r\n> I'd certainly prefer the PEP-484 \r\n\r\nI'm largely working on pandas and statsmodels, which still support py2.",
            "created_at": "2017-10-07T16:58:50Z",
            "html_url": "https://github.com/cython/cython/issues/1913#issuecomment-334950039",
            "id": 334950039,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1913",
            "updated_at": "2017-10-07T16:58:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/334950039",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        },
        {
            "author_association": "OWNER",
            "body": "> \"I'd certainly prefer the PEP-484 syntax\"\r\n> I'm largely working on pandas and statsmodels, which still support py2.\r\n\r\nQuestion is, do they have to support it uncompiled? If it's enough to serve Py2 with Cython compiled modules, you can happily use Py3 syntax in them (and compile them with `language_level=3`).",
            "created_at": "2017-10-07T17:10:01Z",
            "html_url": "https://github.com/cython/cython/issues/1913#issuecomment-334950954",
            "id": 334950954,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1913",
            "updated_at": "2017-10-07T17:10:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/334950954",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1913/comments",
    "created_at": "2017-10-05T04:13:04Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1913/events",
    "html_url": "https://github.com/cython/cython/issues/1913",
    "id": 262999367,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1913/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1913,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Signature error with exceptval",
    "updated_at": "2017-10-07T17:10:01Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1913",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
        "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
        "followers_url": "https://api.github.com/users/jbrockmendel/followers",
        "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
        "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jbrockmendel",
        "id": 8078968,
        "login": "jbrockmendel",
        "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
        "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
        "repos_url": "https://api.github.com/users/jbrockmendel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jbrockmendel"
    }
}