{
    "assignee": null,
    "assignees": [],
    "body": "For a reason unbeknownst to me, changing a `def` method to a `cpdef` method results in code that compiles fine on linux/osx, but fails on windows with MSVC 9.0 for python 2.7.\r\n\r\nTo reproduce:\r\n\r\n- Clone https://github.com/jcrist/crick\r\n- Run `python setup.py develop` (should compile fine)\r\n- Change https://github.com/jcrist/crick/blob/master/crick/tdigest.pyx#L100 and https://github.com/jcrist/crick/blob/master/crick/tdigest.pyx#L109 from a `def` to a `cpdef double`\r\n- Run `python setup.py develop` (should fail)\r\n\r\nThe failure seems to be caused by the calls to the two cpdef methods [here](https://github.com/jcrist/crick/blob/master/crick/tdigest.pyx#L196-L197). If you replace those lines with a pass, then everything works. MSVC reports syntax errors for open-parenthesis for the generated code, which then causes a bunch of failures down the line. The first two errors are:\r\n\r\n```\r\ncrick/tdigest.c(4219) : error C2059: syntax error : '('\r\ncrick/tdigest.c(4228) : error C2059: syntax error : '('\r\n```\r\nThe generated code is in a gist [here](https://gist.github.com/jcrist/53963a043d0697913c7e1441c19aab3f)\r\n\r\nPlease let me know if there's anything else needed to help debug. I also admit this may be user error - I'm fairly new to using Cython.",
    "closed_at": null,
    "comment_data": [
        {
            "body": "On Tue, Dec 27, 2016 at 4:07 PM, Jim Crist <notifications@github.com> wrote:\n\n> For a reason unbeknownst to me, changing a def method to a cpdef method\n> results in code that compiles fine on linux/osx, but fails on windows with\n> MSVC 9.0 for python 2.7.\n>\n> To reproduce:\n>\n>    - Clone https://github.com/jcrist/crick\n>    - Run python setup.py develop (should compile fine)\n>    - Change https://github.com/jcrist/crick/blob/master/crick/\n>    tdigest.pyx#L100 and https://github.com/jcrist/crick/blob/master/crick/\n>    tdigest.pyx#L109 from a def to a cpdef double\n>    - Run python setup.py develop (should fail)\n>\n> Unfortunately, I don't have a windows box on which to reproduce this.\n\n>\n>\n> The failure seems to be caused by the calls to the two cpdef methods here\n> <https://github.com/jcrist/crick/blob/master/crick/tdigest.pyx#L196-L197>.\n> If you replace those lines with a pass, then everything works. MSVC reports\n> syntax errors for open-parenthesis for the generated code, which then\n> causes a bunch of failures down the line. The first two errors are:\n>\n> crick/tdigest.c(4219) : error C2059: syntax error : '('\n> crick/tdigest.c(4228) : error C2059: syntax error : '('\n>\n> The generated code is in a gist here\n> <https://gist.github.com/jcrist/53963a043d0697913c7e1441c19aab3f>\n>\n> Please let me know if there's anything else needed to help debug. I also\n> admit this may be user error - I'm fairly new to using Cython.\n>\nWe should always be generating correct C, but I'm having trouble to see how\nthis is invalid C, let alone a syntax error. Are there any other messages\nor warnings? Can you boil this down to a minimal example?\n",
            "created_at": "2016-12-28T04:49:26Z",
            "html_url": "https://github.com/cython/cython/issues/1566#issuecomment-269425324",
            "id": 269425324,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1566",
            "updated_at": "2016-12-28T04:49:26Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/269425324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "For clarity, the two offending lines seem to be the following ones (generated C code):\r\n```\r\n      /* \"crick/tdigest.pyx\":196\r\n *         if range is None:\r\n *             if size != 0:\r\n *                 left = self.min()             # <<<<<<<<<<<<<<\r\n *                 right = self.max()\r\n *         else:\r\n */\r\n      __pyx_v_left = ((struct __pyx_vtabstruct_5crick_7tdigest_TDigest *)__pyx_v_self->__pyx_vtab)->min(__pyx_v_self, 0);\r\n\r\n      /* \"crick/tdigest.pyx\":197\r\n *             if size != 0:\r\n *                 left = self.min()\r\n *                 right = self.max()             # <<<<<<<<<<<<<<\r\n *         else:\r\n *             left = <double?>range[0]\r\n */\r\n      __pyx_v_right = ((struct __pyx_vtabstruct_5crick_7tdigest_TDigest *)__pyx_v_self->__pyx_vtab)->max(__pyx_v_self, 0);\r\n\r\n```",
            "created_at": "2016-12-28T16:36:55Z",
            "html_url": "https://github.com/cython/cython/issues/1566#issuecomment-269502578",
            "id": 269502578,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1566",
            "updated_at": "2016-12-28T16:36:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/269502578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=3",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "body": "One random suggestion: perhaps `min()` and `max()` are macros for MSVC? How about you try to rename those two methods?",
            "created_at": "2016-12-28T16:37:44Z",
            "html_url": "https://github.com/cython/cython/issues/1566#issuecomment-269502712",
            "id": 269502712,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1566",
            "updated_at": "2016-12-28T16:37:44Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/269502712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=3",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "body": "That fixes it, nice catch. Here is a simple test case that reproduces:\r\n\r\n```python\r\ncdef class Test:\r\n    cpdef double min(self):\r\n        return 1\r\n\r\n    cpdef double max(self):\r\n        return 1\r\n\r\n    def test(self):\r\n        return self.min(), self.max()\r\n```\r\n\r\nIf you switch `cpdef` to `cdef`, the error occurs, but you get a nice warning about \"not enough parameters to macro `min`\".\r\n\r\nI tried rewriting the generated c code to `->(min)(...)`, but that didn't fix it (I thought it would, but I may have misunderstood how the c preprocessor works). Avoiding `min` and `max` as callable struct members did though. Perhaps just add a trailing underscore or something on cdef'd methods named `min` or `max`? There's probably other builtin macro names to avoid.",
            "created_at": "2016-12-28T17:15:51Z",
            "html_url": "https://github.com/cython/cython/issues/1566#issuecomment-269508415",
            "id": 269508415,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1566",
            "updated_at": "2016-12-28T17:15:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/269508415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=3",
                "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
                "followers_url": "https://api.github.com/users/jcrist/followers",
                "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
                "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jcrist",
                "id": 2783717,
                "login": "jcrist",
                "organizations_url": "https://api.github.com/users/jcrist/orgs",
                "received_events_url": "https://api.github.com/users/jcrist/received_events",
                "repos_url": "https://api.github.com/users/jcrist/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jcrist"
            }
        },
        {
            "body": "Yes, I suppose you can have the `cdef` functions or methods under a different name, while keeping `min` and `max` for the Python-facing APIs.\r\n\r\nI have no idea how many macros there are to avoid, and it's certainly system-specific, so I'm not sure Cython can do that automatically. It's a pity that MSVC's error message is so obscure.",
            "created_at": "2016-12-28T17:20:05Z",
            "html_url": "https://github.com/cython/cython/issues/1566#issuecomment-269509014",
            "id": 269509014,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1566",
            "updated_at": "2016-12-28T17:20:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/269509014",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=3",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "body": "A couple ideas for a general solution:\r\n\r\n1. Add a prefix/postfix to all generated cdef methods\r\n2. Wrap names in parenthesis before calling to prevent function-like macro expansion (although this doesn't seem to work in this case, and I'm confused why not).\r\n3. Adding a macro defined as nothing between the name and the `(` seems to work though:\r\n\r\n```c\r\n#define CY_STOP_MACROS\r\nstuff->min CY_STOP_MACROS (...)\r\n```",
            "created_at": "2016-12-28T17:40:32Z",
            "html_url": "https://github.com/cython/cython/issues/1566#issuecomment-269511871",
            "id": 269511871,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1566",
            "updated_at": "2016-12-28T17:40:32Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/269511871",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=3",
                "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
                "followers_url": "https://api.github.com/users/jcrist/followers",
                "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
                "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jcrist",
                "id": 2783717,
                "login": "jcrist",
                "organizations_url": "https://api.github.com/users/jcrist/orgs",
                "received_events_url": "https://api.github.com/users/jcrist/received_events",
                "repos_url": "https://api.github.com/users/jcrist/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jcrist"
            }
        },
        {
            "body": "I think we may have to fall back to mangling struct members (of all kinds)\nas we do names in other namespaces due to the fact that macros transcend\nnamespaces.\n\nOn Wed, Dec 28, 2016 at 9:40 AM, Jim Crist <notifications@github.com> wrote:\n\n> A couple ideas for a general solution:\n>\n>    1. Add a prefix/postfix to all generated cdef methods\n>    2. Wrap names in parenthesis before calling to prevent function-like\n>    macro expansion (although this doesn't seem to work in this case, and I'm\n>    confused why not).\n>    3. Adding a macro defined as nothing between the name and the ( seems\n>    to work though:\n>\n> #define CY_STOP_MACROS\n> stuff->min CY_STOP_MACROS (...)\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/1566#issuecomment-269511871>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ATqe4l9UCJ4Wqk2xEKgw4OCcJNVzUb0Cks5rMp8SgaJpZM4LWlOM>\n> .\n>\n> --\n> You received this message because you are subscribed to the Google Groups\n> \"cython-github-notifications\" group.\n> To unsubscribe from this group and stop receiving emails from it, send an\n> email to cython-github-notifications+unsubscribe@googlegroups.com.\n> To post to this group, send email to cython-github-notifications@\n> googlegroups.com.\n> To view this discussion on the web visit https://groups.google.com/d/\n> msgid/cython-github-notifications/cython/cython/issues/1566/269511871%\n> 40github.com\n> <https://groups.google.com/d/msgid/cython-github-notifications/cython/cython/issues/1566/269511871%40github.com?utm_medium=email&utm_source=footer>\n> .\n>\n> For more options, visit https://groups.google.com/d/optout.\n>\n",
            "created_at": "2016-12-28T19:24:10Z",
            "html_url": "https://github.com/cython/cython/issues/1566#issuecomment-269526750",
            "id": 269526750,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1566",
            "updated_at": "2016-12-28T19:24:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/269526750",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20618978?v=3",
                "events_url": "https://api.github.com/users/cython-notifications/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython-notifications/followers",
                "following_url": "https://api.github.com/users/cython-notifications/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython-notifications/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython-notifications",
                "id": 20618978,
                "login": "cython-notifications",
                "organizations_url": "https://api.github.com/users/cython-notifications/orgs",
                "received_events_url": "https://api.github.com/users/cython-notifications/received_events",
                "repos_url": "https://api.github.com/users/cython-notifications/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython-notifications/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython-notifications/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cython-notifications"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1566/comments",
    "created_at": "2016-12-28T00:07:45Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1566/events",
    "html_url": "https://github.com/cython/cython/issues/1566",
    "id": 197774505,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1566/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1566,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "cpdef method fails to compile in MSVC 9.0",
    "updated_at": "2016-12-28T19:24:11Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1566",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=3",
        "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
        "followers_url": "https://api.github.com/users/jcrist/followers",
        "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
        "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jcrist",
        "id": 2783717,
        "login": "jcrist",
        "organizations_url": "https://api.github.com/users/jcrist/orgs",
        "received_events_url": "https://api.github.com/users/jcrist/received_events",
        "repos_url": "https://api.github.com/users/jcrist/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jcrist"
    }
}