{
    "assignee": null,
    "assignees": [],
    "body": "Currently when one does\n```\ncdef object[int] a = ..., b\nb = a\n```\nthen the second line does a full acquisition of the buffer. This is unecesarry as ```a``` has all that is needed already. \n\nTo implement this in full generality one needs a reference count on the acquired Py_buffer struct.\n\nWhile the immediate benefit may seem small, this becomes more crucial if http://trac.cython.org/ticket/178 is implemented; where each slice would need a new reference to the buffer. The time taken of the tp_getbuffer of a given object is outside of our control; and we can't even be guaranteed to get back the same buffer each time, making slicing less robust.\n\n'''Implementation notes'''\n\nIt seems clear that one needs a reference count allocated on the heap, since we want to eventually be able to pass buffers to other functions (http://trac.cython.org/ticket/177) and store them in fields and global variables (http://trac.cython.org/ticket/301). So something like:\n```\ntypedef struct {\n  size_t refcount;\n  Py_buffer bufinfo;\n} __Pyx_Buffer;\n```\nand then clients would, instead of having ```Py_buffer```s on the stack, ```malloc``` and ```free``` a ```__Pyx_buffer``` which would be shared among all users of it.\n\nWith regards to http://trac.cython.org/ticket/299, this would mean that the structs in http://trac.cython.org/ticket/299 would keep a pointer instead. I'll add a comment there.\n\n(One could keep the Py_buffer on the stack and copy it by value, only the refcount absolutely needs to live on the heap, however it is the mallc/free that is expensive and might as well save some hassle and memory. ''The original must be kept anyway, as we are not allowed to change it before passing it back to releasebuffer'')\n\nAs a possible optimization, if a buffer is never passed on to another variable/function then one can use a Py_buffer on the stack instead. Not a priority though.\n\nMigrated from http://trac.cython.org/ticket/311",
    "closed_at": null,
    "comment_data": [
        {
            "body": "@dagss commented\n\nKurt: I tagged this as kurtgsoc only because the details would be relevant for you, not because you have to do it in your GSoC.",
            "created_at": "2009-05-06T15:57:27Z",
            "html_url": "https://github.com/cython/cython/issues/871#issuecomment-240044442",
            "id": 240044442,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/871",
            "updated_at": "2016-08-16T08:58:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "@dagss changed **description** from\n\nCurrently when one does\n```\ncdef object[a = ..., b\nb = a\n```\nthen the second line does a full acquisition of the buffer. This is unecesarry as ```a``` has all that is needed already. \n\nTo implement this in full generality one needs a reference count on the acquired Py_buffer struct.\n\nWhile the immediate benefit may seem small, this becomes more crucial if http://trac.cython.org/ticket/178 is implemented; where each slice would need a new reference to the buffer. The time taken of the tp_getbuffer of a given object is outside of our control; and we can't even be guaranteed to get back the same buffer each time, making slicing less robust.\n\n'''Implementation notes'''\n\nIt seems clear that one needs a reference count allocated on the heap. So something like:\n```\ntypedef struct {\n  size_t refcount;\n  Py_buffer bufinfo;\n} __Pyx_Buffer;\n```\nand then clients would, instead of having ```Py_buffer```s on the stack, ```malloc``` and ```free``` a ```__Pyx_buffer``` which would be shared among all users of it.\n\nAs a possible optimization, if a buffer is never passed on to another variable/function then one can use a Py_buffer on the stack instead. Not a priority though.\n\nto\n\nCurrently when one does\n```\ncdef object[int](int]) a = ..., b\nb = a\n```\nthen the second line does a full acquisition of the buffer. This is unecesarry as ```a``` has all that is needed already. \n\nTo implement this in full generality one needs a reference count on the acquired Py_buffer struct.\n\nWhile the immediate benefit may seem small, this becomes more crucial if http://trac.cython.org/ticket/178 is implemented; where each slice would need a new reference to the buffer. The time taken of the tp_getbuffer of a given object is outside of our control; and we can't even be guaranteed to get back the same buffer each time, making slicing less robust.\n\n'''Implementation notes'''\n\nIt seems clear that one needs a reference count allocated on the heap, since we want to eventually be able to pass buffers to other functions (http://trac.cython.org/ticket/177) and store them in fields and global variables (http://trac.cython.org/ticket/301). So something like:\n```\ntypedef struct {\n  size_t refcount;\n  Py_buffer bufinfo;\n} __Pyx_Buffer;\n```\nand then clients would, instead of having ```Py_buffer```s on the stack, ```malloc``` and ```free``` a ```__Pyx_buffer``` which would be shared among all users of it.\n\n(One could keep the Py_buffer on the stack and copy it by value, only the refcount absolutely needs to live on the heap, however it is the mallc/free that is expensive and might. ''The original must be kept anyway, as we are not allowed to change it before passing it back to releasebuffer'')\n\nAs a possible optimization, if a buffer is never passed on to another variable/function then one can use a Py_buffer on the stack instead. Not a priority though.\ncommented",
            "created_at": "2009-05-06T16:00:49Z",
            "html_url": "https://github.com/cython/cython/issues/871#issuecomment-240044443",
            "id": 240044443,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/871",
            "updated_at": "2016-08-16T10:34:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044443",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "@dagss changed **description** from\n\nCurrently when one does\n```\ncdef object[a = ..., b\nb = a\n```\nthen the second line does a full acquisition of the buffer. This is unecesarry as ```a``` has all that is needed already. \n\nTo implement this in full generality one needs a reference count on the acquired Py_buffer struct.\n\nWhile the immediate benefit may seem small, this becomes more crucial if http://trac.cython.org/ticket/178 is implemented; where each slice would need a new reference to the buffer. The time taken of the tp_getbuffer of a given object is outside of our control; and we can't even be guaranteed to get back the same buffer each time, making slicing less robust.\n\n'''Implementation notes'''\n\nIt seems clear that one needs a reference count allocated on the heap, since we want to eventually be able to pass buffers to other functions (http://trac.cython.org/ticket/177) and store them in fields and global variables (http://trac.cython.org/ticket/301). So something like:\n```\ntypedef struct {\n  size_t refcount;\n  Py_buffer bufinfo;\n} __Pyx_Buffer;\n```\nand then clients would, instead of having ```Py_buffer```s on the stack, ```malloc``` and ```free``` a ```__Pyx_buffer``` which would be shared among all users of it.\n\n(One could keep the Py_buffer on the stack and copy it by value, only the refcount absolutely needs to live on the heap, however it is the mallc/free that is expensive and might. ''The original must be kept anyway, as we are not allowed to change it before passing it back to releasebuffer'')\n\nAs a possible optimization, if a buffer is never passed on to another variable/function then one can use a Py_buffer on the stack instead. Not a priority though.\n\nto\n\nCurrently when one does\n```\ncdef object[int](int]) a = ..., b\nb = a\n```\nthen the second line does a full acquisition of the buffer. This is unecesarry as ```a``` has all that is needed already. \n\nTo implement this in full generality one needs a reference count on the acquired Py_buffer struct.\n\nWhile the immediate benefit may seem small, this becomes more crucial if http://trac.cython.org/ticket/178 is implemented; where each slice would need a new reference to the buffer. The time taken of the tp_getbuffer of a given object is outside of our control; and we can't even be guaranteed to get back the same buffer each time, making slicing less robust.\n\n'''Implementation notes'''\n\nIt seems clear that one needs a reference count allocated on the heap, since we want to eventually be able to pass buffers to other functions (http://trac.cython.org/ticket/177) and store them in fields and global variables (http://trac.cython.org/ticket/301). So something like:\n```\ntypedef struct {\n  size_t refcount;\n  Py_buffer bufinfo;\n} __Pyx_Buffer;\n```\nand then clients would, instead of having ```Py_buffer```s on the stack, ```malloc``` and ```free``` a ```__Pyx_buffer``` which would be shared among all users of it.\n\n(One could keep the Py_buffer on the stack and copy it by value, only the refcount absolutely needs to live on the heap, however it is the mallc/free that is expensive and might as well save some hassle and memory. ''The original must be kept anyway, as we are not allowed to change it before passing it back to releasebuffer'')\n\nAs a possible optimization, if a buffer is never passed on to another variable/function then one can use a Py_buffer on the stack instead. Not a priority though.\ncommented",
            "created_at": "2009-05-06T16:01:38Z",
            "html_url": "https://github.com/cython/cython/issues/871#issuecomment-240044444",
            "id": 240044444,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/871",
            "updated_at": "2016-08-16T10:34:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "@dagss changed **description** from\n\nCurrently when one does\n```\ncdef object[a = ..., b\nb = a\n```\nthen the second line does a full acquisition of the buffer. This is unecesarry as ```a``` has all that is needed already. \n\nTo implement this in full generality one needs a reference count on the acquired Py_buffer struct.\n\nWhile the immediate benefit may seem small, this becomes more crucial if http://trac.cython.org/ticket/178 is implemented; where each slice would need a new reference to the buffer. The time taken of the tp_getbuffer of a given object is outside of our control; and we can't even be guaranteed to get back the same buffer each time, making slicing less robust.\n\n'''Implementation notes'''\n\nIt seems clear that one needs a reference count allocated on the heap, since we want to eventually be able to pass buffers to other functions (http://trac.cython.org/ticket/177) and store them in fields and global variables (http://trac.cython.org/ticket/301). So something like:\n```\ntypedef struct {\n  size_t refcount;\n  Py_buffer bufinfo;\n} __Pyx_Buffer;\n```\nand then clients would, instead of having ```Py_buffer```s on the stack, ```malloc``` and ```free``` a ```__Pyx_buffer``` which would be shared among all users of it.\n\n(One could keep the Py_buffer on the stack and copy it by value, only the refcount absolutely needs to live on the heap, however it is the mallc/free that is expensive and might as well save some hassle and memory. ''The original must be kept anyway, as we are not allowed to change it before passing it back to releasebuffer'')\n\nAs a possible optimization, if a buffer is never passed on to another variable/function then one can use a Py_buffer on the stack instead. Not a priority though.\n\nto\n\nCurrently when one does\n```\ncdef object[int](int]) a = ..., b\nb = a\n```\nthen the second line does a full acquisition of the buffer. This is unecesarry as ```a``` has all that is needed already. \n\nTo implement this in full generality one needs a reference count on the acquired Py_buffer struct.\n\nWhile the immediate benefit may seem small, this becomes more crucial if http://trac.cython.org/ticket/178 is implemented; where each slice would need a new reference to the buffer. The time taken of the tp_getbuffer of a given object is outside of our control; and we can't even be guaranteed to get back the same buffer each time, making slicing less robust.\n\n'''Implementation notes'''\n\nIt seems clear that one needs a reference count allocated on the heap, since we want to eventually be able to pass buffers to other functions (http://trac.cython.org/ticket/177) and store them in fields and global variables (http://trac.cython.org/ticket/301). So something like:\n```\ntypedef struct {\n  size_t refcount;\n  Py_buffer bufinfo;\n} __Pyx_Buffer;\n```\nand then clients would, instead of having ```Py_buffer```s on the stack, ```malloc``` and ```free``` a ```__Pyx_buffer``` which would be shared among all users of it.\n\nWith regards to http://trac.cython.org/ticket/299, this would mean that the structs in http://trac.cython.org/ticket/299 would keep a pointer instead. I'll add a comment there.\n\n(One could keep the Py_buffer on the stack and copy it by value, only the refcount absolutely needs to live on the heap, however it is the mallc/free that is expensive and might as well save some hassle and memory. ''The original must be kept anyway, as we are not allowed to change it before passing it back to releasebuffer'')\n\nAs a possible optimization, if a buffer is never passed on to another variable/function then one can use a Py_buffer on the stack instead. Not a priority though.\ncommented",
            "created_at": "2009-05-06T16:03:15Z",
            "html_url": "https://github.com/cython/cython/issues/871#issuecomment-240044446",
            "id": 240044446,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/871",
            "updated_at": "2016-08-16T10:34:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/871/comments",
    "created_at": "2009-05-06T15:56:53Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:51Z",
            "event": "labeled",
            "id": 756747089,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747089"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:51Z",
            "event": "labeled",
            "id": 756747090,
            "label": {
                "color": "444444",
                "name": "enhancement"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747090"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:51Z",
            "event": "milestoned",
            "id": 756747091,
            "milestone": {
                "title": "wishlist"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747091"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:51Z",
            "event": "mentioned",
            "id": 756747093,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747093"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:51Z",
            "event": "subscribed",
            "id": 756747094,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747094"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:51Z",
            "event": "mentioned",
            "id": 756747095,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747095"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:51Z",
            "event": "subscribed",
            "id": 756747096,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747096"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:51Z",
            "event": "mentioned",
            "id": 756747099,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747099"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:51Z",
            "event": "subscribed",
            "id": 756747101,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747101"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:52Z",
            "event": "mentioned",
            "id": 756747111,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747111"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T08:58:52Z",
            "event": "subscribed",
            "id": 756747112,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756747112"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/871/events",
    "html_url": "https://github.com/cython/cython/issues/871",
    "id": 171358239,
    "labels": [
        {
            "color": "444444",
            "name": "Code Generation",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "name": "enhancement",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/871/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 25,
        "created_at": "2016-08-16T08:38:52Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
            "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
            "followers_url": "https://api.github.com/users/robertwb/followers",
            "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
            "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/robertwb",
            "id": 486017,
            "login": "robertwb",
            "organizations_url": "https://api.github.com/users/robertwb/orgs",
            "received_events_url": "https://api.github.com/users/robertwb/received_events",
            "repos_url": "https://api.github.com/users/robertwb/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/robertwb"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestones/wishlist",
        "id": 1944442,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/6/labels",
        "number": 6,
        "open_issues": 196,
        "state": "open",
        "title": "wishlist",
        "updated_at": "2016-08-17T04:27:14Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/6"
    },
    "number": 871,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Buffers: Acquisition counted buffers",
    "updated_at": "2016-08-16T10:34:09Z",
    "url": "https://api.github.com/repos/cython/cython/issues/871",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
        "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
        "followers_url": "https://api.github.com/users/robertwb/followers",
        "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
        "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/robertwb",
        "id": 486017,
        "login": "robertwb",
        "organizations_url": "https://api.github.com/users/robertwb/orgs",
        "received_events_url": "https://api.github.com/users/robertwb/received_events",
        "repos_url": "https://api.github.com/users/robertwb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/robertwb"
    }
}