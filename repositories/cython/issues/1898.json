{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "On windows, \r\nwith cython0.27\r\nand \r\nCoverage.py, version 4.3.4 with C extension\r\n\r\nI try to report the coverage of a pyx-file with the Cython.Coverage plugin for coverage.py\r\n`coverage run --source=src -m py.test --pyargs cythonarrays` the .coverage-file including line-numbers that were hit for the .pyx files.\r\nHowever, `coverage report` issues \r\n\r\n> src\\cythonarrays\\array_shapes.pyx   TypeError: 'NoneType' object is not iterable\r\n> src\\cythonarrays\\tests\\example_cython.pyx   TypeError: 'NoneType' object is not iterable\r\n\r\nUnfortunately, the coverage module catches the exception and did not show where the error occured.\r\nSo i had to patch coverage.summary.py to get the tracebak, which showed me, that set(self._code), becuase self._code was None in line 286 in \r\n\r\n```\r\nclass CythonModuleReporter(FileReporter):\r\n    def lines(self):\r\n        return set(self._code)\r\n```\r\n\r\nFurther debugging led me to the point, that the \"None\" of self._code came from\r\n\r\n```\r\nclass Plugin(CoveragePlugin):\r\n    def _parse_lines(self, c_file, sourcefile):\r\n        if sourcefile not in self._c_files_map:\r\n            return (None,) * 2  # e.g. shared library file\r\n```\r\n\r\nand sourcefile was not in self._c_files_map, because sourcefile started with C:\\Dev\\cythonarrays\\..., while the key in the self._c_files_map-dictionary was written with lowercase c:\\dev\\cythonarrays...\r\nSo abspath returns the path with lowercase because it finds the files in PATH. I installed the package ediable with pip install -e cythonarrays and this lead to entries in easyinstall.pth with lowercase path.\r\n\r\nTo patch the problem, i converted all filepaths to lowercase\r\n\r\n```\r\nclass Plugin(CoveragePlugin):\r\n\r\n    def file_reporter(self, filename)\r\n        filename = os.path.abspath(filename).lower()\r\n\r\n    def _parse_lines(self, c_file, sourcefile):\r\n        (...)\r\n        for filename, code in code_lines.items():\r\n            abs_path = _find_dep_file_path(c_file, filename).lower()\r\n```\r\nThis adds the *.pyx-files to the report.\r\n\r\nHowever, this might be not the best solution, which works always on windows and linux...\r\nMaybe you have another idea how to fix this.\r\n\r\nThe other problem are the line numbers reported by `coverage run` and stored in the .coverage result file, for the .pyx-file, which do not match the actual line numbers in the pyx-file.\r\nIn the .coverage -file, for my example_cython.pyx-file there are 26 line numbers between 1 and 983 collected.\r\n`!coverage.py: This is a private format, don't read it directly!{\"lines\":{\"C:\\\\Dev\\\\cythonarrays\\\\code\\\\cythonarrays\\\\src\\\\cythonarrays\\\\tests\\\\example_cython.pxd\":[],\"C:\\\\Dev\\\\cythonarrays\\\\code\\\\cythonarrays\\\\src\\\\cythonarrays\\\\tests\\\\example_cython.pyx\":[1,246,10,288,207,983,537,155,284,285,286,31,32,289,290,291,36,37,287,243,244,245,54,55,314,315]},\"file_tracers\":{\"C:\\\\Dev\\\\cythonarrays\\\\code\\\\cythonarrays\\\\src\\\\cythonarrays\\\\tests\\\\example_cython.pyx\":\"Cython.Coverage.Plugin\",\"C:\\\\Dev\\\\cythonarrays\\\\code\\\\cythonarrays\\\\src\\\\cythonarrays\\\\tests\\\\example_cython.pxd\":\"Cython.Coverage.Plugin\",\"C:\\\\Dev\\\\cythonarrays\\\\code\\\\cythonarrays\\\\src\\\\cythonarrays\\\\array_shapes.pyx\":\"Cython.Coverage.Plugin\"}}`\r\n\r\n The  example_cython.pyx file has only 86 lines. \r\n\r\nThe C-File i generated contains comments for the traced lines in the actual .pyx-file like:\r\n\r\n>  /* \"cythonarrays/tests/example_cython.pyx\":31\r\n \r\nto C-imported files like:\r\n \r\n\r\n> /* \"../../../../Anaconda/envs/cythonarrays/lib/site-packages/Cython/Includes/numpy/__init__.pxd\":220\r\n\r\nand to View.MemoryView and to a \"Tree fragment\"\r\n\r\n> /* \"View.MemoryView\":120\r\n>  /* \"(tree fragment)\":1\r\n\r\nSo the strange numbers the Cython.Coverage plugin collected in the c-file are mostly line numbers refering to the \"View.MemoryView\" \r\n\r\n```\r\n  /* \"View.MemoryView\":983\r\n *         return self.from_object\r\n * \r\n *     __pyx_getbuffer = capsule(<void *> &__pyx_memoryview_getbuffer, \"getbuffer(obj, view, flags)\")             # <<<<<<<<<<<<<<\r\n * \r\n * \r\n */\r\n```\r\n\r\nor to the \"tree fragment\"\r\n\r\n ```\r\n /* \"(tree fragment)\":1\r\n * def __reduce_cython__(self):             # <<<<<<<<<<<<<<\r\n *     cdef bint use_setstate\r\n *     state = (self.INF_d, self.INF_f, self.NAN_d, self.NAN_f, self.NINF_d, self.NINF_f, self._invalid_g, self._jobs_j, self._km_ij, self._not_initialized_ij, self._param_g, self._persons_gi, self._trips_ij, self._valid_g, self._zonenumbers_i, self.destinations, self.groups, self.n_threads, self.origins)\r\n */\r\n```\r\nWhat could be the reason that these line numbers are collected instead of the numbers of the lines in the actual .pyx-file, that were hit?\r\n\r\n",
    "closed_at": "2017-10-01T07:41:00Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I found an alternative to .lower(), that helped to get the right line_numbers:\r\n\r\nInstead of converting the filepath to lowercase, the following function returnes the filepath as the file system returnes it (on Windows - on linux it remains as it is):\r\n\r\n```\r\nimport glob\r\ndef get_actual_filename(name):\r\n    if not sys.platform.startswith('win'):\r\n        return name\r\n    dirs = name.split('\\\\')\r\n    # disk letter\r\n    test_name = [dirs[0].upper()]\r\n    for d in dirs[1:]:\r\n        test_name += [\"%s[%s]\" % (d[:-1], d[-1])]\r\n    res = glob.glob('\\\\'.join(test_name))\r\n    if not res:\r\n        #File not found\r\n        return None\r\n    return res[0]\r\n```\r\n(thanks to [this link](https://stackoverflow.com/questions/3692261/in-python-how-can-i-get-the-correctly-cased-path-for-a-file)\r\n\r\nThen the filename then can be converted with \r\n```\r\nclass Plugin(CoveragePlugin):\r\n\r\n    def file_reporter(self, filename)\r\n        filename = get_actual_filename(os.path.abspath(filename))\r\n\r\n    def _parse_lines(self, c_file, sourcefile):\r\n        (...)\r\n        for filename, code in code_lines.items():\r\n            abs_path = get_actual_filename(_find_dep_file_path(c_file, filename))\r\n```\r\n\r\n",
            "created_at": "2017-09-29T19:08:03Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333212572",
            "id": 333212572,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-29T19:08:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333212572",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1256994?v=4",
                "events_url": "https://api.github.com/users/MaxBo/events{/privacy}",
                "followers_url": "https://api.github.com/users/MaxBo/followers",
                "following_url": "https://api.github.com/users/MaxBo/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxBo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MaxBo",
                "id": 1256994,
                "login": "MaxBo",
                "organizations_url": "https://api.github.com/users/MaxBo/orgs",
                "received_events_url": "https://api.github.com/users/MaxBo/received_events",
                "repos_url": "https://api.github.com/users/MaxBo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MaxBo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxBo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MaxBo"
            }
        },
        {
            "author_association": "OWNER",
            "body": "`os.path.normcase()` seems to do what you want:\r\nhttps://docs.python.org/3/library/os.path.html#os.path.normcase",
            "created_at": "2017-09-29T19:17:21Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333214615",
            "id": 333214615,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-29T19:17:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333214615",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Could you provide a pull request, including a test?",
            "created_at": "2017-09-29T19:20:28Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333215385",
            "id": 333215385,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-29T19:20:28Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333215385",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Writing a good test is difficult, because it depends on the file system of the test server.\r\nWhere would you put the test?\r\n\r\nI tried os.path.normcase(), but this does not work.\r\n```\r\nos.path._getfullpathname(r'c:\\dev\\cythonarrays\\code\\cythonarrays\\src\\cythonarrays\\tests\\example_cython.pyx')\r\n'c:\\\\dev\\\\cythonarrays\\\\code\\\\cythonarrays\\\\src\\\\cythonarrays\\\\tests\\\\example_cython.pyx'\r\n```\r\nthe following returns the right upper and lowercases:\r\n```\r\nos.path._getfinalpathname(r'c:\\dev\\cythonarrays\\code\\cythonarrays\\src\\cythonarrays\\tests\\example_cython.pyx')\r\n'\\\\\\\\?\\\\C:\\\\Dev\\\\cythonarrays\\\\code\\\\cythonarrays\\\\src\\\\cythonarrays\\\\tests\\\\example_cython.pyx'\r\n```\r\nbut has backslashes and question marks in front of the filepath.\r\nTherefore i used this get_actual_filename - function i found on stackoverflow",
            "created_at": "2017-09-29T19:26:53Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333216904",
            "id": 333216904,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-29T19:26:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333216904",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1256994?v=4",
                "events_url": "https://api.github.com/users/MaxBo/events{/privacy}",
                "followers_url": "https://api.github.com/users/MaxBo/followers",
                "following_url": "https://api.github.com/users/MaxBo/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxBo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MaxBo",
                "id": 1256994,
                "login": "MaxBo",
                "organizations_url": "https://api.github.com/users/MaxBo/orgs",
                "received_events_url": "https://api.github.com/users/MaxBo/received_events",
                "repos_url": "https://api.github.com/users/MaxBo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MaxBo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxBo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MaxBo"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Regarding tests, look at the `coverage*.srctree` files in `tests/run/`. They are basically a bunch of several text files in one, using a separator. You can run them with `python3 runtests.py -vv coverage` (the last parameter being a test filename regex).\r\nI understand that it's not easy, but you could e.g. rename the source file with different case only on Windows, and then run the analysis on it. That should keep it trivially working on other systems. Travis will tell your if your pull request still works in Linux.",
            "created_at": "2017-09-29T19:43:23Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333220770",
            "id": 333220770,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-29T19:43:23Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333220770",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "OWNER",
            "body": "`normcase()` makes it all lower case on Windows, which seems ok for comparisons ... ?",
            "created_at": "2017-09-29T19:44:08Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333220947",
            "id": 333220947,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-29T19:44:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333220947",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "yes, but then the files are not correctly found any more by coverage.py, because coverage uses the filepath with upper and lowercases as it finds it on the disc. Then we would have to patch the code of coverage too, which i would like to avoid.",
            "created_at": "2017-09-29T19:52:53Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333222959",
            "id": 333222959,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-29T19:52:53Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333222959",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1256994?v=4",
                "events_url": "https://api.github.com/users/MaxBo/events{/privacy}",
                "followers_url": "https://api.github.com/users/MaxBo/followers",
                "following_url": "https://api.github.com/users/MaxBo/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxBo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MaxBo",
                "id": 1256994,
                "login": "MaxBo",
                "organizations_url": "https://api.github.com/users/MaxBo/orgs",
                "received_events_url": "https://api.github.com/users/MaxBo/received_events",
                "repos_url": "https://api.github.com/users/MaxBo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MaxBo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxBo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MaxBo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "thanks for the hint to `coverage*.srctree` I will try to create a reasonable test in the next days.",
            "created_at": "2017-09-29T20:16:09Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333228185",
            "id": 333228185,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-29T20:16:09Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333228185",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1256994?v=4",
                "events_url": "https://api.github.com/users/MaxBo/events{/privacy}",
                "followers_url": "https://api.github.com/users/MaxBo/followers",
                "following_url": "https://api.github.com/users/MaxBo/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxBo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MaxBo",
                "id": 1256994,
                "login": "MaxBo",
                "organizations_url": "https://api.github.com/users/MaxBo/orgs",
                "received_events_url": "https://api.github.com/users/MaxBo/received_events",
                "repos_url": "https://api.github.com/users/MaxBo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MaxBo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxBo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MaxBo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I found a better replacement for the _actual_filename function:\r\nfrom coverage.files import canonical_filename\r\nthis ensures, that the same filenames are generated as in the coverage-package.\r\n\r\nI tried to run the existing tests in windows, but i failed.\r\nI can run most of the .srctree-tests in windows (2 failures in the pxdbecause of missing support of symlinks in windows:\r\n\r\n```\r\nEnd-to-end pxd_signature_excvalue ... ok\r\nrunTest (__main__.EndToEndTest)\r\nEnd-to-end pxd_syntax ... ok\r\n\r\n======================================================================\r\nERROR: runTest (__main__.CythonRunTestCase)\r\ncompiling (c) and running inlinepxd\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 1079, in run\r\n    ext_so_path = self.runCompileTest()\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 768, in runCompileTest\r\n    self.test_directory, self.expect_errors, self.expect_warnings, self.annotate)\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 1015, in compile\r\n    so_path = self.run_distutils(test_directory, module, workdir, incdir)\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 897, in run_distutils\r\n    self.copy_files(test_directory, workdir, related_files)\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 800, in copy_files\r\n    copy(file_path, join(target_directory, filename))\r\nOSError: symbolic link privilege not held\r\n\r\n======================================================================\r\nERROR: runTest (__main__.CythonRunTestCase)\r\ncompiling (cpp) and running inlinepxd\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 1079, in run\r\n    ext_so_path = self.runCompileTest()\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 768, in runCompileTest\r\n    self.test_directory, self.expect_errors, self.expect_warnings, self.annotate)\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 1015, in compile\r\n    so_path = self.run_distutils(test_directory, module, workdir, incdir)\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 897, in run_distutils\r\n    self.copy_files(test_directory, workdir, related_files)\r\n  File \"C:\\Dev\\cython\\runtests.py\", line 800, in copy_files\r\n    copy(file_path, join(target_directory, filename))\r\nOSError: symbolic link privilege not held\r\n\r\n----------------------------------------------------------------------\r\nRan 38 tests in 48.928s\r\n\r\nFAILED (errors=2)\r\nFollowing tests excluded because of missing dependencies on your system:\r\n   compile.posix_pxds\r\nALL DONE\r\n\r\n```\r\n\r\nThe coverage*.srctrees failed directly, because the quotation marks made problems, so i changed them from\r\n`PYTHON -c 'import shutil; shutil.copy(\"pkg/coverage_test_pyx.pyx\", \"pkg/coverage_test_pyx.pxi\")'`\r\nto\r\n`PYTHON -c \"import shutil; shutil.copy('pkg/coverage_test_pyx.pyx', 'pkg/coverage_test_pyx.pxi')\"`\r\n\r\ni hope this does not break something in linux.\r\n\r\nThe coverage-tests however fail, because no data is found:\r\n\r\n\r\n```\r\n(cythontest) C:\\Dev\\cython>python runtests.py -vv coverage\r\nPython 3.6.2 |Continuum Analytics, Inc.| (default, Jul 20 2017, 12:30:02) [MSC v.1900 64 bit (AMD64)]\r\n\r\nRunning tests against Cython 0.27 7e39d9e77fbbd33b787af1ab84c15a468f7fe9c5\r\nBackends: c,cpp\r\n\r\nrunTest (__main__.EndToEndTest)\r\nEnd-to-end coverage_api ... C:\\Anaconda\\envs\\cythontest\\python.exe coverage_test.py\r\n\r\nCoverage.py warning: No data was collected.\r\nTraceback (most recent call last):\r\n  File \"coverage_test.py\", line 66, in <module>\r\n    run_coverage(coverage_test_py)\r\n  File \"coverage_test.py\", line 44, in run_coverage\r\n    cov.report(file=out)\r\n  File \"C:\\Anaconda\\envs\\cythontest\\lib\\site-packages\\coverage\\control.py\", line 977, in report\r\n    return reporter.report(morfs, outfile=file)\r\n  File \"C:\\Anaconda\\envs\\cythontest\\lib\\site-packages\\coverage\\summary.py\", line 158, in report\r\n    raise CoverageException(\"No data to report.\")\r\ncoverage.misc.CoverageException: No data to report.\r\n\r\nFAIL\r\nrunTest (__main__.EndToEndTest)\r\nEnd-to-end coverage_cmd ... C:\\Anaconda\\envs\\cythontest\\python.exe collect_coverage.py\r\nName    Stmts   Miss  Cover   Missing\r\n-------------------------------------\r\nNo data to report.\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"collect_coverage.py\", line 95, in <module>\r\n    run_report()\r\n  File \"collect_coverage.py\", line 28, in run_report\r\n    module_path, stdout)\r\nAssertionError: 'coverage_test_py.py' not found in coverage report:\r\n\r\nName    Stmts   Miss  Cover   Missing\r\n-------------------------------------\r\nNo data to report.\r\n\r\n\r\nFAIL\r\nrunTest (__main__.EndToEndTest)\r\nEnd-to-end coverage_nogil ... C:\\Anaconda\\envs\\cythontest\\python.exe coverage_test.py\r\n\r\nCoverage.py warning: No data was collected.\r\nTraceback (most recent call last):\r\n  File \"coverage_test.py\", line 46, in <module>\r\n    run_coverage(coverage_test_nogil)\r\n  File \"coverage_test.py\", line 29, in run_coverage\r\n    cov.report(file=out)\r\n  File \"C:\\Anaconda\\envs\\cythontest\\lib\\site-packages\\coverage\\control.py\", line 977, in report\r\n    return reporter.report(morfs, outfile=file)\r\n  File \"C:\\Anaconda\\envs\\cythontest\\lib\\site-packages\\coverage\\summary.py\", line 158, in report\r\n    raise CoverageException(\"No data to report.\")\r\ncoverage.misc.CoverageException: No data to report.\r\n\r\nFAIL\r\n\r\n======================================================================\r\nFAIL: runTest (__main__.EndToEndTest)\r\nEnd-to-end coverage_api\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"runtests.py\", line 1506, in runTest\r\n    self.assertEqual(0, res, \"non-zero exit status\")\r\nAssertionError: 0 != 1 : non-zero exit status\r\n\r\n======================================================================\r\nFAIL: runTest (__main__.EndToEndTest)\r\nEnd-to-end coverage_cmd\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"runtests.py\", line 1506, in runTest\r\n    self.assertEqual(0, res, \"non-zero exit status\")\r\nAssertionError: 0 != 1 : non-zero exit status\r\n\r\n======================================================================\r\nFAIL: runTest (__main__.EndToEndTest)\r\nEnd-to-end coverage_nogil\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"runtests.py\", line 1506, in runTest\r\n    self.assertEqual(0, res, \"non-zero exit status\")\r\nAssertionError: 0 != 1 : non-zero exit status\r\n\r\n----------------------------------------------------------------------\r\nRan 3 tests in 9.563s\r\n\r\nFAILED (failures=3)\r\nALL DONE\r\n```\r\n\r\nSo before i can write a new test, i would have to fix the existing for windows. It would be great, if someone who has more insight how the coverage works, would have a look on it.\r\n",
            "created_at": "2017-09-30T14:11:14Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333311094",
            "id": 333311094,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-30T14:11:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333311094",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1256994?v=4",
                "events_url": "https://api.github.com/users/MaxBo/events{/privacy}",
                "followers_url": "https://api.github.com/users/MaxBo/followers",
                "following_url": "https://api.github.com/users/MaxBo/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxBo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MaxBo",
                "id": 1256994,
                "login": "MaxBo",
                "organizations_url": "https://api.github.com/users/MaxBo/orgs",
                "received_events_url": "https://api.github.com/users/MaxBo/received_events",
                "repos_url": "https://api.github.com/users/MaxBo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MaxBo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxBo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MaxBo"
            }
        },
        {
            "author_association": "OWNER",
            "body": "The quotation fix is fine. But the DLL renaming seems backwards. It should better try to find the file. If it doesn't, then coverage reporting is probably not working on Windows currently. I can't say, I don't have access to a Windows system and we are not currently running the external integration tests on Appveyor - guess we should. Any help with fixing the implementation is appreciated. It's probably just the regex in line 110 of Coverage.py that fails to match the different DLL naming scheme.",
            "created_at": "2017-09-30T16:50:54Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333321017",
            "id": 333321017,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-30T16:50:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333321017",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "OWNER",
            "body": "I pushed a regex fix to master. It should now also find Windows DLLs. Please rebase your PR to see if that helps.",
            "created_at": "2017-09-30T19:13:01Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333329692",
            "id": 333329692,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-30T19:13:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333329692",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the regex. The expression seems ok.\r\nBut it does not help.\r\nI still got the error message, that `C:\\Dev\\cython\\TEST_TMP\\run\\coverage_api\\pkg\\coverage_test_py.cp36-win_amd64.py` is not found:\r\n\r\nTherefore i added the regex to the coverage_api.srctree\r\n```\r\n\r\ndef source_file_for(module):\r\n    module_name = module.__name__\r\n    path, ext = os.path.splitext(module.__file__)\r\n    if ext == '.so':\r\n        # Linux/Unix/Mac extension module\r\n        platform_suffix = re.search(r'[.](?:cpython|pypy)-[0-9]+[-_a-z0-9]*$', path, re.I)\r\n        if platform_suffix:\r\n            path = path[:platform_suffix.start()]\r\n    elif ext == '.pyd':\r\n        # Windows extension module\r\n        platform_suffix = re.search(r'[.]cp[0-9]+-win[_a-z0-9]*$', path, re.I)\r\n        if platform_suffix:\r\n            path = path[:platform_suffix.start()]\r\n    source_filepath = path + '.' + module_name.rsplit('_', 1)[-1]\r\n    return source_filepath\r\n```\r\nnow the tests pass on windows.",
            "created_at": "2017-09-30T21:48:14Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333338172",
            "id": 333338172,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-09-30T21:48:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333338172",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1256994?v=4",
                "events_url": "https://api.github.com/users/MaxBo/events{/privacy}",
                "followers_url": "https://api.github.com/users/MaxBo/followers",
                "following_url": "https://api.github.com/users/MaxBo/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxBo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MaxBo",
                "id": 1256994,
                "login": "MaxBo",
                "organizations_url": "https://api.github.com/users/MaxBo/orgs",
                "received_events_url": "https://api.github.com/users/MaxBo/received_events",
                "repos_url": "https://api.github.com/users/MaxBo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MaxBo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxBo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MaxBo"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Nice. Thanks! I'll try it on appveyor as well.",
            "created_at": "2017-10-01T06:44:01Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333357352",
            "id": 333357352,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-10-01T06:44:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333357352",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Ah, you still had the source line issues. Reopening.",
            "created_at": "2017-10-01T06:45:54Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333357426",
            "id": 333357426,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-10-01T06:45:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333357426",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Basically, any Cython internals should be ignored, i.e. excluded. External packages, include files, etc. should be mapped to their correct files (which hopefully works already...?).",
            "created_at": "2017-10-01T06:48:59Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333357554",
            "id": 333357554,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-10-01T06:48:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333357554",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for merging! \r\nThe source line issue was solved with this patch, too. The probem was, that some source line numbers were before mapped to the wrong file, but now it works.\r\nSo the issue can be closed ",
            "created_at": "2017-10-01T07:41:00Z",
            "html_url": "https://github.com/cython/cython/issues/1898#issuecomment-333359597",
            "id": 333359597,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1898",
            "updated_at": "2017-10-01T07:41:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/333359597",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1256994?v=4",
                "events_url": "https://api.github.com/users/MaxBo/events{/privacy}",
                "followers_url": "https://api.github.com/users/MaxBo/followers",
                "following_url": "https://api.github.com/users/MaxBo/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxBo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MaxBo",
                "id": 1256994,
                "login": "MaxBo",
                "organizations_url": "https://api.github.com/users/MaxBo/orgs",
                "received_events_url": "https://api.github.com/users/MaxBo/received_events",
                "repos_url": "https://api.github.com/users/MaxBo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MaxBo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxBo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MaxBo"
            }
        }
    ],
    "comments": 16,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1898/comments",
    "created_at": "2017-09-29T14:36:39Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-10-01T06:44:59Z",
            "event": "closed",
            "id": 1272977947,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1272977947"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-10-01T06:45:54Z",
            "event": "reopened",
            "id": 1272978122,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1272978122"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/1256994?v=4",
                "events_url": "https://api.github.com/users/MaxBo/events{/privacy}",
                "followers_url": "https://api.github.com/users/MaxBo/followers",
                "following_url": "https://api.github.com/users/MaxBo/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxBo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MaxBo",
                "id": 1256994,
                "login": "MaxBo",
                "organizations_url": "https://api.github.com/users/MaxBo/orgs",
                "received_events_url": "https://api.github.com/users/MaxBo/received_events",
                "repos_url": "https://api.github.com/users/MaxBo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MaxBo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxBo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MaxBo"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-10-01T07:41:00Z",
            "event": "closed",
            "id": 1272990381,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1272990381"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1898/events",
    "html_url": "https://github.com/cython/cython/issues/1898",
    "id": 261662911,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1898/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1898,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Cython.Coverage: error with pyx-file coverage with lower-case filenames and wrong line numbers in .coverage",
    "updated_at": "2017-10-01T07:41:00Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1898",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/1256994?v=4",
        "events_url": "https://api.github.com/users/MaxBo/events{/privacy}",
        "followers_url": "https://api.github.com/users/MaxBo/followers",
        "following_url": "https://api.github.com/users/MaxBo/following{/other_user}",
        "gists_url": "https://api.github.com/users/MaxBo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MaxBo",
        "id": 1256994,
        "login": "MaxBo",
        "organizations_url": "https://api.github.com/users/MaxBo/orgs",
        "received_events_url": "https://api.github.com/users/MaxBo/received_events",
        "repos_url": "https://api.github.com/users/MaxBo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MaxBo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MaxBo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MaxBo"
    }
}