{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Curious as to whether [`PyUnicode_FromObject`]( https://github.com/cython/cython/blob/084a25f55d0b4cf8b4c3cd496ec57bb3e2f57f71/Cython/Includes/cpython/unicode.pxd#L122 ) should have a return type of `unicode` or not?",
    "closed_at": "2018-11-16T17:52:51Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "It can call into the codecs using the user definable default encoding and I think I wasn't sure at the time whether all decoders are guaranteed to return a unicode string in Py2 (and Py3?). It's probably safe, but then, this is C. \"Probably\" leaves a chance for hard crashes, so I left it open.\r\n\r\nWorth further investigation.",
            "created_at": "2018-11-16T17:46:48Z",
            "html_url": "https://github.com/cython/cython/issues/2714#issuecomment-439471962",
            "id": 439471962,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2714",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQ3MTk2Mg==",
            "updated_at": "2018-11-16T17:46:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/439471962",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Answered too quickly. I now see that `PyUnicode_Decode()`, which is the weakest fallback that may get called at the very end, only calls `PyUnicode_Check()` on the final result, not `PyUnicode_CheckExact()`. So the return value is actually not guaranteed to be an exact `unicode` object, which is what the `unicode` type implies in Cython.\r\n\r\nSo, answer is \"no, it should not\".",
            "created_at": "2018-11-16T17:52:51Z",
            "html_url": "https://github.com/cython/cython/issues/2714#issuecomment-439473670",
            "id": 439473670,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2714",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQ3MzY3MA==",
            "updated_at": "2018-11-16T17:52:51Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/439473670",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2714/comments",
    "created_at": "2018-11-14T02:54:18Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-11-16T17:52:51Z",
            "event": "closed",
            "id": 1971865301,
            "node_id": "MDExOkNsb3NlZEV2ZW50MTk3MTg2NTMwMQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1971865301"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2714/events",
    "html_url": "https://github.com/cython/cython/issues/2714",
    "id": 380513749,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2714/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzODA1MTM3NDk=",
    "number": 2714,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Should PyUnicode_FromObject return unicode?",
    "updated_at": "2018-11-16T17:52:52Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2714",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4",
        "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
        "followers_url": "https://api.github.com/users/jakirkham/followers",
        "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
        "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jakirkham",
        "id": 3019665,
        "login": "jakirkham",
        "node_id": "MDQ6VXNlcjMwMTk2NjU=",
        "organizations_url": "https://api.github.com/users/jakirkham/orgs",
        "received_events_url": "https://api.github.com/users/jakirkham/received_events",
        "repos_url": "https://api.github.com/users/jakirkham/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jakirkham"
    }
}