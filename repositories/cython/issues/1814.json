{
    "assignee": null,
    "assignees": [],
    "body": "I want to use `__del__()` method to do some python operations when an object is released.\r\n\r\n## Background\r\n\r\nWe have an application of cython named [cupy](https://github.com/cupy/cupy). This library uses CUDA (NVIDIA GPU API) and stores allocated GPU memory pointer on its own memory pool. We want to release a GPU memory pointer into memory pool when a memory object is released.\r\n\r\n## Problem\r\n\r\nWe before used `__dealloc__()` as a hook to release a memory pointer into memory pool, but noticed for a statement:\r\n\r\nref. http://cython.readthedocs.io/en/latest/src/userguide/special_methods.html#finalization-method-dealloc\r\n\r\n> You need to be careful what you do in a `__dealloc__()` method. By the time your `__dealloc__()` method is called, the object may already have been partially destroyed and may not be in a valid state as far as Python is concerned, so **you should avoid invoking any Python operations** which might touch the object. In particular, don’t call any other methods of the object or do anything which might cause the object to be resurrected. It’s best if you stick to just deallocating C data.\r\n\r\nSo, I first tried to change `__dealloc__()` to `__del__()` to achieve our purpose, but now I noticed that \r\n\r\n> Note There is no `__del__()` method for extension types.\r\n\r\nTherefore, I had to change `cdef class` to a usual `class`. But, I observed degraded performance.\r\n\r\nhttps://github.com/cupy/cupy/pull/381\r\n\r\n## Conclusion\r\n\r\nI want to avoid degraded performance introduced by changing `cdef class` to `class` to use `__del__()` instead of `__dealloc__()`.\r\n\r\nI searched github issues, but I could not find any previous discussions for `__del__()`. Please let me know if there already exist previous discussions for `__del__()`.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "body": "Ah, yes, the object holds a reference to another object in your case (the memory pool). That reference might have been cleared already during garbage collection.\r\n\r\nWith the new finalisation protocol in Py3.4, supporting ``__del__()`` does sound reasonable. Not sure how to support older Python versions, though...\r\nhttps://www.python.org/dev/peps/pep-0442/",
            "created_at": "2017-08-09T16:15:00Z",
            "html_url": "https://github.com/cython/cython/issues/1814#issuecomment-321304739",
            "id": 321304739,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1814",
            "updated_at": "2017-08-09T16:15:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/321304739",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1814/comments",
    "created_at": "2017-08-09T15:42:36Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1814/events",
    "html_url": "https://github.com/cython/cython/issues/1814",
    "id": 249074799,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1814/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1814,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Feature request: Support __del__() in cdef class",
    "updated_at": "2017-08-09T16:15:00Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1814",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/2290461?v=4",
        "events_url": "https://api.github.com/users/sonots/events{/privacy}",
        "followers_url": "https://api.github.com/users/sonots/followers",
        "following_url": "https://api.github.com/users/sonots/following{/other_user}",
        "gists_url": "https://api.github.com/users/sonots/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sonots",
        "id": 2290461,
        "login": "sonots",
        "organizations_url": "https://api.github.com/users/sonots/orgs",
        "received_events_url": "https://api.github.com/users/sonots/received_events",
        "repos_url": "https://api.github.com/users/sonots/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sonots/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sonots/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sonots"
    }
}