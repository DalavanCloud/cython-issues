{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Refs: https://groups.google.com/d/msg/cython-users/oqk3GQ2pJ8M/-oBEvfWXDgAJ\r\n\r\nI have a python2 project where the pyx files contain the following directive:\r\n\r\n```\r\n# cython: c_string_type=unicode, c_string_encoding=utf8\r\n```\r\n\r\nIn the process of converting to python3, I am finding that even with these directive, the conversion from a python3 `str` is not automatically encoded to \"utf8\" bytes when converted to a C++ `std::string`:\r\n\r\nReproduction:\r\nhttps://gist.github.com/justinfx/8023d341becc8a1092e5beacd7a249eb\r\n\r\nIn python3, this results in the following exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"test.pyx\", line 6, in test.test\r\n  File \"stringsource\", line 15, in string.from_py.__pyx_convert_string_from_py_std__in_string\r\nTypeError: expected bytes, str found\r\n```\r\n\r\nI have tested this behaviour both in cython 0.28.5 as well as master, using all available language level values. \r\n\r\nMy expected results would be that given the directives, any implicit assignment/conversion to `std::string` would automatically encode to 'utf8' bytes.\r\n\r\nMy current workaround in dealing with the *ton* of locations where a python string is assigned to a `std::string` or passed to an argument, or even part of implicit map or list conversions, is to explicitly wrap each site in a conversion helper:\r\n\r\n```\r\n    # cython: c_string_type=unicode, c_string_encoding=utf8\r\n\r\n    from libcpp.string cimport string\r\n    from cpython.version cimport PY_MAJOR_VERSION\r\n\r\n    cdef unicode _text(s):\r\n        if type(s) is unicode:\r\n            return <unicode>s\r\n\r\n        elif PY_MAJOR_VERSION < 3 and isinstance(s, bytes):\r\n            return (<bytes>s).decode('ascii')\r\n        \r\n        elif isinstance(s, unicode):\r\n            return unicode(s)\r\n        \r\n        else:\r\n            raise TypeError(\"Could not convert to unicode.\")\r\n\r\n    cdef string _string(basestring s) except *:\r\n        cdef string c_str = _text(s).encode(\"utf-8\")\r\n        return c_str\r\n\r\n    # ...\r\n    self.field = _string(s)\r\n```\r\n\r\nThis has been error prone since I keep overlooking hard to spot type conversions. It would be amazing for the behaviour in Cython to be updated to support automatic conversions based on my directives.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Just guessing, but it might be the setting of `__PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT` in the generated code. For the `c_string_encoding` names `UTF-8/utf8/…`, it should be true in Py3, where the default encoding is always `utf8`.\r\n\r\nCould you try changing `__PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT` to `1` (it should be `0` now) in the generated C file and try that directly under Py3, without running Cython again?",
            "created_at": "2019-02-01T07:08:14Z",
            "html_url": "https://github.com/cython/cython/issues/2819#issuecomment-459628317",
            "id": 459628317,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2819",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTYyODMxNw==",
            "updated_at": "2019-02-01T07:08:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/459628317",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "On Fri, Feb 1, 2019 at 8:08 PM Stefan Behnel <notifications@github.com>\nwrote:\n\n> Just guessing, but it might be the setting of\n> __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT in the generated code. For the\n> c_string_encoding names UTF-8/utf8/…, it should be true in Py3, where the\n> default encoding is always utf8.\n>\n> Could you try changing __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT to 1 (it\n> should be 0 now) in the generated C file and try that directly under Py3,\n> without running Cython again?\n>\n\nSorry for the delay. I've just tested this and it does seem to fix the\nproblem. The python string to std::string happens automatically. Looking\nforward to seeing a patch release!\n\n\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/2819#issuecomment-459628317>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AARPxubHW5XviStNGJ8yEWVGAo1GS7Isks5vI-figaJpZM4adT6x>\n> .\n>\n",
            "created_at": "2019-02-04T20:29:27Z",
            "html_url": "https://github.com/cython/cython/issues/2819#issuecomment-460400911",
            "id": 460400911,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2819",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDQwMDkxMQ==",
            "updated_at": "2019-02-04T20:29:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/460400911",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/282566?v=4",
                "events_url": "https://api.github.com/users/justinfx/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinfx/followers",
                "following_url": "https://api.github.com/users/justinfx/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinfx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinfx",
                "id": 282566,
                "login": "justinfx",
                "node_id": "MDQ6VXNlcjI4MjU2Ng==",
                "organizations_url": "https://api.github.com/users/justinfx/orgs",
                "received_events_url": "https://api.github.com/users/justinfx/received_events",
                "repos_url": "https://api.github.com/users/justinfx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinfx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinfx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinfx"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2819/comments",
    "created_at": "2019-01-31T22:49:19Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": "901cfed4a7ba5cc64e5d55757ad92eb007006084",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/901cfed4a7ba5cc64e5d55757ad92eb007006084",
            "created_at": "2019-02-03T00:15:30Z",
            "event": "referenced",
            "id": 2114083287,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxMTQwODMyODc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2114083287"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2819/events",
    "html_url": "https://github.com/cython/cython/issues/2819",
    "id": 405475357,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2819/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0MDU0NzUzNTc=",
    "number": 2819,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "python3 str to std::string conversion is not automatic",
    "updated_at": "2019-02-04T20:29:28Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2819",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/282566?v=4",
        "events_url": "https://api.github.com/users/justinfx/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinfx/followers",
        "following_url": "https://api.github.com/users/justinfx/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinfx/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinfx",
        "id": 282566,
        "login": "justinfx",
        "node_id": "MDQ6VXNlcjI4MjU2Ng==",
        "organizations_url": "https://api.github.com/users/justinfx/orgs",
        "received_events_url": "https://api.github.com/users/justinfx/received_events",
        "repos_url": "https://api.github.com/users/justinfx/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinfx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinfx/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinfx"
    }
}