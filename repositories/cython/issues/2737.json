{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I've been looking at Cython with an eye toward replacing some hand written\r\ncpython extension code binding a C++ library.  This library is for a network\r\nclient and server, and includes a number of callbacks from C++ into python code.\r\nIt also makes heavy use of std::shared_ptr.\r\n\r\nI find myself wanting the ability to add custom code to tp_traverse and tp_clear\r\nto find additional python objects referenced indirectly through c++ objects.\r\n\r\nI don't think this is presently possible?\r\n\r\nA strawman example of the situation is as follows.\r\nThe reference cycles to be broken would include.\r\n\r\nHolder.iface -> PyImpl.held -> Held -> ... -> Holder\r\n\r\n```py\r\ncdef extern from \"foo.h\":\r\n    cdef cppclass Interface:\r\n        ...\r\n        void callback() # pure virtual\r\n    cdef cppclass PyImpl(Interface):\r\n        ...\r\n        void callback() # calls held.callback()\r\n        object held\r\n\r\n    ctypedef Interface* pInterface\r\n\r\ncdef class Held:\r\n    def callback(self, arg):\r\n        pass\r\n\r\ncdef class Holder:\r\n    cdef shared_ptr[Interface] iface\r\n\r\n    # I would like to be able to do something like this:\r\n    def tp_traverse(self, visit):\r\n        cdef PyImpl* impl\r\n        if self.iface:\r\n            impl = dynamic_cast[pInterface](self.iface.get())\r\n            if impl:\r\n                visit(impl.held)\r\n```\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Could probably be added as two new special methods that get called by `tp_traverse` and `tp_clear`, so I'll leave this open as a feature request.\r\n\r\nYou can already do this by manually casting the type to a `PyTypeObject` and setting its slot methods. That way, you can store away the old slot value and insert your own one that calls the original one.",
            "created_at": "2018-11-28T18:23:10Z",
            "html_url": "https://github.com/cython/cython/issues/2737#issuecomment-442552352",
            "id": 442552352,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2737",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU1MjM1Mg==",
            "updated_at": "2018-11-28T18:23:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/442552352",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "As advertised, it is possible to replace tp_traverse.  A working example: https://github.com/mdavidsaver/cython-c--demo\r\n\r\nI found that the definition of `cpython.traverseproc` changed at some point to include \"except -1\".  In exploring ways to handle with this sort of API change I was surprised to find that eg. `IF CYTHON_HEX_VERSION>=0x001D01F0` isn't possible.",
            "created_at": "2018-12-06T19:17:41Z",
            "html_url": "https://github.com/cython/cython/issues/2737#issuecomment-444995009",
            "id": 444995009,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2737",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDk5NTAwOQ==",
            "updated_at": "2018-12-06T19:17:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/444995009",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4429215?v=4",
                "events_url": "https://api.github.com/users/mdavidsaver/events{/privacy}",
                "followers_url": "https://api.github.com/users/mdavidsaver/followers",
                "following_url": "https://api.github.com/users/mdavidsaver/following{/other_user}",
                "gists_url": "https://api.github.com/users/mdavidsaver/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mdavidsaver",
                "id": 4429215,
                "login": "mdavidsaver",
                "node_id": "MDQ6VXNlcjQ0MjkyMTU=",
                "organizations_url": "https://api.github.com/users/mdavidsaver/orgs",
                "received_events_url": "https://api.github.com/users/mdavidsaver/received_events",
                "repos_url": "https://api.github.com/users/mdavidsaver/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mdavidsaver/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mdavidsaver/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mdavidsaver"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The example looks good.\r\n\r\n> `IF CYTHON_HEX_VERSION>=0x001D01F0` isn't possible\r\n\r\nAh, yes, that makes sense. There aren't many real use cases for translation time environment tests, but this one is reasonable (although your specific use case is clearly better served by a cast). PR welcome that sets `CYTHON_HEX_VERSION` to what we now write into the C file.",
            "created_at": "2018-12-07T07:54:08Z",
            "html_url": "https://github.com/cython/cython/issues/2737#issuecomment-445151736",
            "id": 445151736,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2737",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTE1MTczNg==",
            "updated_at": "2018-12-07T07:54:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/445151736",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2737/comments",
    "created_at": "2018-11-28T05:27:37Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-11-28T18:20:04Z",
            "event": "labeled",
            "id": 1993224982,
            "label": {
                "color": "c2e0c6",
                "name": "feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE5OTMyMjQ5ODI=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1993224982"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-11-28T18:20:04Z",
            "event": "labeled",
            "id": 1993224993,
            "label": {
                "color": "444444",
                "name": "Cython Language Feature"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDE5OTMyMjQ5OTM=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1993224993"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2737/events",
    "html_url": "https://github.com/cython/cython/issues/2737",
    "id": 385107764,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425559948,
            "name": "Cython Language Feature",
            "node_id": "MDU6TGFiZWw0MjU1NTk5NDg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Cython%20Language%20Feature"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2737/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzODUxMDc3NjQ=",
    "number": 2737,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "add custom code to tp_traverse and tp_clear?",
    "updated_at": "2018-12-07T07:54:08Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2737",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/4429215?v=4",
        "events_url": "https://api.github.com/users/mdavidsaver/events{/privacy}",
        "followers_url": "https://api.github.com/users/mdavidsaver/followers",
        "following_url": "https://api.github.com/users/mdavidsaver/following{/other_user}",
        "gists_url": "https://api.github.com/users/mdavidsaver/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mdavidsaver",
        "id": 4429215,
        "login": "mdavidsaver",
        "node_id": "MDQ6VXNlcjQ0MjkyMTU=",
        "organizations_url": "https://api.github.com/users/mdavidsaver/orgs",
        "received_events_url": "https://api.github.com/users/mdavidsaver/received_events",
        "repos_url": "https://api.github.com/users/mdavidsaver/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mdavidsaver/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mdavidsaver/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mdavidsaver"
    }
}