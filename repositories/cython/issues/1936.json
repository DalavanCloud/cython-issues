{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Cython is emitting the following code in Python 2:\r\n\r\n```\r\n/* Py3ClassCreate */\r\n  static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,\r\n                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {\r\n    PyObject *ns;\r\n    if (metaclass) {\r\n        PyObject *prep = __Pyx_PyObject_GetAttrStr(metaclass, __pyx_n_s_prepare);\r\n        if (prep) {\r\n            PyObject *pargs = PyTuple_Pack(2, name, bases);\r\n            if (unlikely(!pargs)) {\r\n                Py_DECREF(prep);\r\n                return NULL;\r\n            }\r\n            ns = PyObject_Call(prep, pargs, mkw);\r\n            Py_DECREF(prep);\r\n            Py_DECREF(pargs);\r\n        } else {\r\n```\r\n\r\nThis code finds the `__prepare__` attribute, and, if it exists, calls it as if it were a function. `__prepare__` does not exist in Python 2, and should not be called in Python 2, however, Cython will errantly call it.\r\n\r\nTypically, it won't exist, so this path is never triggered. Unfortunately, `six` just added (in 1.11.0) a `__prepare__` function to a dummy class that gets generated upon a call to `with_metaclass` (in [this commit](https://github.com/benjaminp/six/commit/96b93280fc4c70d65be0af5949f80f46f5c679ca)).\r\n\r\nThat means that the following code:\r\n\r\n```python\r\nimport six\r\n\r\nclass SomeBase(object):\r\n    pass\r\n\r\nclass SomeMeta(type):\r\n    def __new__(cls, name, bases, dct):\r\n        new_cls = super(SomeMeta, cls).__new__(cls, name, bases, dct)\r\n        #new_cls = type.__new__(cls, name, bases, dct)\r\n        return new_cls\r\n\r\n\r\n#import ipdb; ipdb.set_trace()\r\nclass Derived(six.with_metaclass(SomeMeta, SomeBase)):\r\n    pass\r\n```\r\n\r\nwill work just fine in Python 2 on its own, but if compiled w/ cython, will result in the above stack trace, since Cython will incorrectly call `__prepare__`, whereas CPython will not.",
    "closed_at": "2017-10-20T06:55:42Z",
    "comment_data": [
        {
            "author_association": "OWNER",
            "body": "It's difficult to say what to do here. Basically, if code wants to use this feature in Cython, it feels wrong to prevent it from doing so, just because it happens to *run* in Python 2.x.\r\n\r\nI could imagine enabling this only for code that uses `language_level=3`, but honestly, that feels like artificially restricting an otherwise perfectly well defined feature. Even your description suggests that six isn't using `__prepare__()` for anything but class dict creation.\r\n\r\nI think the easiest fix here is to not use six in Cython code. It is generally not very helpful. Cython does not understand it, so it only prevents some optimisations without giving any benefit. Cython has most of the functionality already built-in.",
            "created_at": "2017-10-14T05:59:34Z",
            "html_url": "https://github.com/cython/cython/issues/1936#issuecomment-336612808",
            "id": 336612808,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1936",
            "updated_at": "2017-10-14T05:59:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/336612808",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Basically, if code wants to use this feature in Cython, it feels wrong to prevent it from doing so, just because it happens to run in Python 2.x\r\n\r\nWe disagree then; I feel that that code should never execute, because the real interpreter, and the language specification, say that it shouldn't. I think users expect Cython to faithfully emulate the language (either Python 2 *or* 3), not some weird mash-up between the two.\r\n\r\nEssentially, Cython's stated purpose is:\r\n\r\n> Cython is an optimising static compiler for [â€¦] the Python programming language\r\n\r\nGiven that purpose, Cython's behavior here is incorrect: it isn't being a static compiler for Python any longer when it deviates from that language's specification. It is essentially running random code at random times (as far as the language specification is concerned, since it makes no comment on `__prepare__` being a special method in Python 2).\r\n\r\nThat *some* uses of `__prepare__` *happen* to function as they would in a future version of the language shouldn't matter. The current behavior also breaks code that presently executes just fine in CPython, and AFAICT, is valid Python.\r\n\r\nI really don't think many people are expecting `__prepare__` to function in Python 2, and I fully expect that _more_ people are depending on `six` and metaclasses than are depending on this weird corner case. \r\n\r\n> I think the easiest fix here is to not use six in Cython code. It is generally not very helpful. Cython does not understand it, so it only prevents some optimisations without giving any benefit. Cython has most of the functionality already built-in.\r\n\r\nI have to disagree here; even though it might prevent some optimizations, it provides a world of benefit in porting a legacy codebase to modern versions of Python. I fully expect some minor inefficiencies from its use, but that's not six's selling point.",
            "created_at": "2017-10-16T23:04:08Z",
            "html_url": "https://github.com/cython/cython/issues/1936#issuecomment-337068960",
            "id": 337068960,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1936",
            "updated_at": "2017-10-16T23:22:33Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/337068960",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/90853?v=4",
                "events_url": "https://api.github.com/users/thanatos/events{/privacy}",
                "followers_url": "https://api.github.com/users/thanatos/followers",
                "following_url": "https://api.github.com/users/thanatos/following{/other_user}",
                "gists_url": "https://api.github.com/users/thanatos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thanatos",
                "id": 90853,
                "login": "thanatos",
                "organizations_url": "https://api.github.com/users/thanatos/orgs",
                "received_events_url": "https://api.github.com/users/thanatos/received_events",
                "repos_url": "https://api.github.com/users/thanatos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thanatos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thanatos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thanatos"
            }
        },
        {
            "author_association": "OWNER",
            "body": "> \"some weird mash-up\", \"essentially running random code at random times\", etc.\r\n\r\nI can understand that you're upset, but I really wouldn't call it weird. It's rather pragmatic. We basically support all new features also in older Python versions if they a) can be backported at all and b) do not interfere with the old Python versions. You can use async/await in Cython code also under Py2.6, for example. Why? Because there is no reason not to support it. The same applies to the Py3 metaclass keyword syntax. It's just so much better than all those corresponding Py2 quirks that it would be annoying for users not to allow it.\r\n\r\n> [six] provides a world of benefit in porting a legacy codebase to modern versions of Python\r\n\r\nI'm not contradicting that at all, but it applies only to regular interpreted Python code. There is really no point in using six in Cython compiled code, because Cython is designed to apply as many Python version adaptations as possible under the hood, not even just for Py2/3. It's meant to be \"translate once, build anywhere\". In fact, Cython allows you to write Python 3 code, and then compile it to make it run in Python 2.6. It's *way* better than six! ;)\r\n\r\nThat being said, I do agree that picking up `__prepare__` in Python 2 *code* is stretching the adaptation part a bit. But this has been supported since 2010, for seven years now, and you're the first to complain about it. If the problem appeared with a recent change in six, then maybe six can be changed to not include a (useless and apparently conflict prone) `__prepare__` in Py2?\r\n",
            "created_at": "2017-10-17T17:29:39Z",
            "html_url": "https://github.com/cython/cython/issues/1936#issuecomment-337306497",
            "id": 337306497,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1936",
            "updated_at": "2017-10-17T17:29:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/337306497",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think the easiest fix here is to not use six in Cython code.\r\n\r\n...especially not for metaclasses. Just use the Python 3 metaclass syntax!\r\n\r\n> It's way better than six! ;)\r\n\r\n:+1:",
            "created_at": "2017-10-18T19:40:54Z",
            "html_url": "https://github.com/cython/cython/issues/1936#issuecomment-337705301",
            "id": 337705301,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1936",
            "updated_at": "2017-10-18T19:40:54Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/337705301",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> If the problem appeared with a recent change in six\r\n\r\nThat's indeed what happened.",
            "created_at": "2017-10-18T19:43:34Z",
            "html_url": "https://github.com/cython/cython/issues/1936#issuecomment-337706035",
            "id": 337706035,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1936",
            "updated_at": "2017-10-18T19:43:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/337706035",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Yes, it's a bug in six that was introduced here:\r\nhttps://github.com/benjaminp/six/pull/178\r\nIt unconditionally calls (the equivalent of) `super().__prepare__()`, which is not always available in Py2, unless explicitly implemented by users. (That's probably the \"stack trace\" that @thanatos was referring to above, but didn't actually provide.)\r\n\r\nThe correct fix on their side is to either a) implement `__prepare__` only in Py3, or b) call `super().__prepare()` conditionally only if the original metaclass implements it.",
            "created_at": "2017-10-20T06:48:25Z",
            "html_url": "https://github.com/cython/cython/issues/1936#issuecomment-338120827",
            "id": 338120827,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1936",
            "updated_at": "2017-10-20T06:54:11Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/338120827",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Closing as \"third party, not a bug in Cython\".",
            "created_at": "2017-10-20T06:55:42Z",
            "html_url": "https://github.com/cython/cython/issues/1936#issuecomment-338122025",
            "id": 338122025,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1936",
            "updated_at": "2017-10-20T06:55:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/338122025",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Fixed in https://github.com/benjaminp/six/pull/211",
            "created_at": "2017-10-20T08:31:24Z",
            "html_url": "https://github.com/cython/cython/issues/1936#issuecomment-338142376",
            "id": 338142376,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1936",
            "updated_at": "2017-10-20T08:31:24Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/338142376",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1936/comments",
    "created_at": "2017-10-13T21:16:20Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/90853?v=4",
                "events_url": "https://api.github.com/users/thanatos/events{/privacy}",
                "followers_url": "https://api.github.com/users/thanatos/followers",
                "following_url": "https://api.github.com/users/thanatos/following{/other_user}",
                "gists_url": "https://api.github.com/users/thanatos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thanatos",
                "id": 90853,
                "login": "thanatos",
                "organizations_url": "https://api.github.com/users/thanatos/orgs",
                "received_events_url": "https://api.github.com/users/thanatos/received_events",
                "repos_url": "https://api.github.com/users/thanatos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thanatos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thanatos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thanatos"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-10-20T06:54:11Z",
            "event": "mentioned",
            "id": 1302451312,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1302451312"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/90853?v=4",
                "events_url": "https://api.github.com/users/thanatos/events{/privacy}",
                "followers_url": "https://api.github.com/users/thanatos/followers",
                "following_url": "https://api.github.com/users/thanatos/following{/other_user}",
                "gists_url": "https://api.github.com/users/thanatos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thanatos",
                "id": 90853,
                "login": "thanatos",
                "organizations_url": "https://api.github.com/users/thanatos/orgs",
                "received_events_url": "https://api.github.com/users/thanatos/received_events",
                "repos_url": "https://api.github.com/users/thanatos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thanatos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thanatos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thanatos"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-10-20T06:54:11Z",
            "event": "subscribed",
            "id": 1302451313,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1302451313"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-10-20T06:55:17Z",
            "event": "labeled",
            "id": 1302452427,
            "label": {
                "color": "444444",
                "name": "R: invalid"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/1302452427"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2017-10-20T06:55:42Z",
            "event": "closed",
            "id": 1302452893,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1302452893"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1936/events",
    "html_url": "https://github.com/cython/cython/issues/1936",
    "id": 265421286,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425557122,
            "name": "R: invalid",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20invalid"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1936/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1936,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Cython emits Python 3 code for __prepare__ in Python 2",
    "updated_at": "2017-10-20T08:31:24Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1936",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/90853?v=4",
        "events_url": "https://api.github.com/users/thanatos/events{/privacy}",
        "followers_url": "https://api.github.com/users/thanatos/followers",
        "following_url": "https://api.github.com/users/thanatos/following{/other_user}",
        "gists_url": "https://api.github.com/users/thanatos/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/thanatos",
        "id": 90853,
        "login": "thanatos",
        "organizations_url": "https://api.github.com/users/thanatos/orgs",
        "received_events_url": "https://api.github.com/users/thanatos/received_events",
        "repos_url": "https://api.github.com/users/thanatos/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/thanatos/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thanatos/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/thanatos"
    }
}