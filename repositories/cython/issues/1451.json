{
    "assignee": null,
    "assignees": [],
    "body": "The [docs](http://cython.readthedocs.io/en/latest/src/userguide/wrapping_CPlusPlus.html) say that C++ containers may be iterated over \"Pythonically\" using \"for .. in\" syntax.\r\n\r\nThis works, but only sometimes.  The code that Cython generates is not const-correct.  Further, the code generated differs depending on the type of C++ container, affecting whether or not a function can be marked \"nogil\".\r\n\r\nFully-worked out examples are in this [git repo](https://github.com/molpopgen/CythonCpp), but here is a copy/paste of some Cython code with comments to document the issue:\r\n\r\n~~~{.py}\r\nfrom libcpp.map cimport map\r\nfrom libcpp.vector cimport vector\r\n\r\n#The map cannot be passed in as const,\r\n#otherwise will fail to compile.\r\n#Looking at the generated .cpp\r\n#shows that Cython will declare\r\n#iterator instead of const_iterator\r\n#if foo is passed in as const:\r\n#static unsigned int __pyx_f_10auto_like1_iterate_map(std::map<unsigned int,unsigned int>  const &__pyx_v_foo) {\r\n#  unsigned int __pyx_v_sum1;\r\n#  std::pair<unsigned int,unsigned int>  __pyx_v_i;\r\n#  unsigned int __pyx_r;\r\n#  std::map<unsigned int,unsigned int> ::iterator __pyx_t_1;\r\n#  std::pair<unsigned int,unsigned int>  __pyx_t_2;\r\ncdef unsigned iterate_map(map[unsigned,unsigned] & foo) nogil:\r\n\r\n    cdef unsigned sum1=0\r\n    for i in foo:\r\n        sum1+=i.second\r\n\r\n    return sum1\r\n\r\n#When used with a vector, \r\n#and modeling after the iterate_map function,\r\n#the function must NOT be nogil, else Cython will\r\n#fail to generate a .cpp file...\r\ncdef unsigned iterate_vector(vector[unsigned] & foo):\r\n\r\n    cdef unsigned sum1=0\r\n    #This code is generating PyObject temporaries,\r\n    #but the iterate_map function above correctly \r\n    #generated the pair as the temporary:\r\n    #static unsigned int __pyx_f_10auto_like1_iterate_vector(std::vector<unsigned int>  &__pyx_v_foo) {\r\n    #unsigned int __pyx_v_sum1;\r\n    #PyObject *__pyx_v_i = NULL;\r\n    #unsigned int __pyx_r;\r\n    #__Pyx_RefNannyDeclarations\r\n    #std::vector<unsigned int> ::iterator __pyx_t_1;\r\n    #unsigned int __pyx_t_2;\r\n    #PyObject *__pyx_t_3 = NULL;\r\n    #PyObject *__pyx_t_4 = NULL;\r\n    for i in foo:\r\n        sum1+=i\r\n\r\n    return sum1\r\n\r\n#...unless i gets declared as a cdef variable:\r\ncdef unsigned iterate_vector2(vector[unsigned] & foo) nogil:\r\n\r\n    cdef unsigned sum1=0\r\n    cdef unsigned i\r\n    for i in foo:\r\n        sum1+=i\r\n\r\n    return sum1\r\n~~~\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1451/comments",
    "created_at": "2016-08-26T21:30:58Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1451/events",
    "html_url": "https://github.com/cython/cython/issues/1451",
    "id": 173547643,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1451/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1451,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Inconsistent code generation for iterating over C++ containers with \"for .. in\" syntax",
    "updated_at": "2016-08-26T21:32:04Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1451",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6416159?v=3",
        "events_url": "https://api.github.com/users/molpopgen/events{/privacy}",
        "followers_url": "https://api.github.com/users/molpopgen/followers",
        "following_url": "https://api.github.com/users/molpopgen/following{/other_user}",
        "gists_url": "https://api.github.com/users/molpopgen/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/molpopgen",
        "id": 6416159,
        "login": "molpopgen",
        "organizations_url": "https://api.github.com/users/molpopgen/orgs",
        "received_events_url": "https://api.github.com/users/molpopgen/received_events",
        "repos_url": "https://api.github.com/users/molpopgen/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/molpopgen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/molpopgen/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/molpopgen"
    }
}