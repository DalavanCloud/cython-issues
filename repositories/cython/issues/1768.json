{
    "assignee": null,
    "assignees": [],
    "body": "I beg the attention of the Cython developer community towards the following [issue](https://stackoverflow.com/questions/45064370/cython-pass-a-2d-array-from-python-to-a-c-and-retrieve-it) posted on Stack-overflow and the solution provided therein.\r\nProblem in brief: The issue relates to initializing a 2D array in Python, passing it to C, modifying the values and retrieving the array for display. The compiler error message in this case is  _misleading_ and I had to spend a lot of time checking in the wrong place. \r\n\r\nIn detail: The code is below.\r\n\r\ndriver.h\r\n\r\n```Python\r\n    void assign_values2D(double **matrix, unsigned int row_size, unsigned int column_size);\r\n```\r\n\r\nc_driver.pyd\r\n\r\n```Python\r\n    cdef extern from \"driver.h\":\r\n        void assign_values2D(double **matrix, unsigned int row_size, unsigned int column_size)\r\n```\r\n\r\ntest.pyx\r\n\r\n```Python\r\n    from c_driver import assign_values2D\r\n    import numpy as np\r\n    cimport numpy as np\r\n    cimport cython\r\n    from libc.stdlib cimport malloc, free\r\n    import ctypes\r\n    \r\n    @cython.boundscheck(False)\r\n    @cython.wraparound(False)\r\n    def assignValues2D(self, np.ndarray[np.double_t,ndim=2,mode='c']mat):\r\n    \trow_size,column_size = np.shape(mat)\r\n    \tcdef np.ndarray[double, ndim=2, mode=\"c\"] temp_mat = np.ascontiguousarray(mat, dtype = ctypes.c_double)\r\n    \tcdef double ** mat_pointer = <double **>malloc(column_size * sizeof(double*))\r\n    \tif not mat_pointer:\r\n    \t\traise MemoryError\r\n    \ttry:\r\n    \t\tfor i in range(row_size):\r\n    \t\t\tmat_pointer[i] = &temp_mat[i, 0]\r\n    \t\r\n    \t\tassign_values2D(<double **> &mat_pointer[0], row_size, column_size)\r\n    \t\treturn np.array(mat)\r\n    \tfinally:\r\n    \t\tfree(mat_pointer)\r\n```\r\n\r\ntest_camera.py\r\n\r\n```Python\r\n    b = np.zeros((5,5), dtype=np.float) # sample code\r\n    print \"B Before = \"\r\n    print b\r\n    assignValues2D(b)\r\n    print \"B After = \"\r\n    print b\r\n```\r\n\r\nWhen compiled, it gives the error: \r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    if not mat_pointer:\r\n        raise MemoryError\r\n    try:\r\n        for i in range(row_size):\r\n            mat_pointer[i] = &temp_mat[i, 0]\r\n                ^\r\n ------------------------------------------------------------\r\n test.pyx:120:21: Cannot take address of Python variable\r\n```\r\n\r\nThe solution to this problem is that the variable `row_size` in `test.pyx`needs to be defined.\r\n\r\nI find the compiler message to be misleading. I request the Cython developer community to fix this issue so that the compiler suggests an appropriate error message.",
    "closed_at": null,
    "comment_data": [
        {
            "body": "`row_size` is not really the issue, it's `i` that needs to be declared (or inferred) as a C integer in order to allow the evaluation of `temp_mat[i, 0]` in C space. That was also the correct answer on StackOverflow.\r\n\r\nI've specialised the error message a little in 1befcd387da2382bdeff7e103d8105106b011c18, but adapting it to this very specific case of human error feels like it's stretching it too far.",
            "created_at": "2017-08-02T10:25:21Z",
            "html_url": "https://github.com/cython/cython/issues/1768#issuecomment-319633130",
            "id": 319633130,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1768",
            "updated_at": "2017-08-02T10:25:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/319633130",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1768/comments",
    "created_at": "2017-07-13T05:52:30Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": "1befcd387da2382bdeff7e103d8105106b011c18",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/1befcd387da2382bdeff7e103d8105106b011c18",
            "created_at": "2017-08-02T10:11:35Z",
            "event": "referenced",
            "id": 1189255525,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1189255525"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1768/events",
    "html_url": "https://github.com/cython/cython/issues/1768",
    "id": 242592570,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1768/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1768,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Appropriate compiler error/warning needed in the following case",
    "updated_at": "2017-08-02T10:25:21Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1768",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/12408125?v=4",
        "events_url": "https://api.github.com/users/dvsphanindra/events{/privacy}",
        "followers_url": "https://api.github.com/users/dvsphanindra/followers",
        "following_url": "https://api.github.com/users/dvsphanindra/following{/other_user}",
        "gists_url": "https://api.github.com/users/dvsphanindra/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dvsphanindra",
        "id": 12408125,
        "login": "dvsphanindra",
        "organizations_url": "https://api.github.com/users/dvsphanindra/orgs",
        "received_events_url": "https://api.github.com/users/dvsphanindra/received_events",
        "repos_url": "https://api.github.com/users/dvsphanindra/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dvsphanindra/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dvsphanindra/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dvsphanindra"
    }
}