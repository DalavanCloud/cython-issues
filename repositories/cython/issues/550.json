{
    "assignee": null,
    "assignees": [],
    "body": "```cython\r\nfrom libc.math cimport isnan\r\n\r\ncdef extern from \"numpy/npy_math.h\":\r\n    bint npy_isnan(double x)\r\n\r\nimport cmath\r\nimport numpy\r\n\r\ndef test_nans():\r\n    cdef float f_nan = numpy.nan\r\n    cdef double d_nan = numpy.nan\r\n\r\n    print(isnan(numpy.nan), isnan(f_nan), isnan(d_nan))\r\n    print(npy_isnan(numpy.nan), npy_isnan(f_nan), npy_isnan(d_nan))\r\n    print(numpy.isnan(numpy.nan), numpy.isnan(f_nan), numpy.isnan(d_nan))\r\n    print(cmath.isnan(numpy.nan), cmath.isnan(f_nan), cmath.isnan(d_nan))\r\n```\r\n\r\nI expect to see the following output:\r\n\r\n```\r\n(True, True, True)\r\n(True, True, True)\r\n(True, True, True)\r\n(True, True, True)\r\n```\r\n\r\n, but I get the following:\r\n\r\n```\r\n(False, False, False)\r\n(False, False, False)\r\n(True, True, True)\r\n(True, True, True)\r\n```\r\n\r\nAm I doing something wrong?\r\n\r\nThe only way to see `libc.math.isnan` outputs `True` is to pass `libc.math.NAN` into it.\r\n\r\nBTW, `cmath.isnan` is ~7 times faster than `numpy.isnan` on a scalar input, and `libc.math.isnan` is even faster especially when I work with raw `float`/`double` data:\r\n\r\n```\r\nIn []: a = numpy.nan\r\nIn []: numpy_isnan = numpy.isnan\r\nIn []: cmath_isnan = cmath.isnan\r\nIn []: %timeit numpy_isnan(a)\r\nThe slowest run took 18.52 times longer than the fastest. This could mean that an intermediate result is being cached.\r\n1000000 loops, best of 3: 844 ns per loop\r\nIn []: %timeit cmath_isnan(a)\r\nThe slowest run took 20.88 times longer than the fastest. This could mean that an intermediate result is being cached.\r\n10000000 loops, best of 3: 124 ns per loop\r\n```\r\n\r\nI use x86-64 Arch Linux with Python 3.5.2 and Cython 0.24.1.",
    "closed_at": "2016-08-12T07:05:04Z",
    "comment_data": [
        {
            "body": "On Sat, Aug 6, 2016 at 2:17 PM, Vlad Frolov <notifications@github.com> wrote:\n>\n> from libc.math cimport isnan\n>\n> cdef extern from \"numpy/npy_math.h\":\n>     bint npy_isnan(double x)\n>\n> import cmath\n> import numpy\n>\n> def test_nans():\n>     cdef float f_nan = numpy.nan\n>     cdef double d_nan = numpy.nan\n>\n>     print(isnan(numpy.nan), isnan(f_nan), isnan(d_nan))\n>     print(npy_isnan(numpy.nan), npy_isnan(f_nan), npy_isnan(d_nan))\n>     print(numpy.isnan(numpy.nan), numpy.isnan(f_nan), numpy.isnan(d_nan))\n>     print(cmath.isnan(numpy.nan), cmath.isnan(f_nan), cmath.isnan(d_nan))\n>\n> I expect to see the following output:\n>\n> (True, True, True)\n> (True, True, True)\n> (True, True, True)\n> (True, True, True)\n>\n> , but I get the following:\n>\n> (False, False, False)\n> (False, False, False)\n> (True, True, True)\n> (True, True, True)\n>\n> Am I doing something wrong?\n\nVery strange.  I get all Trues on both OS X and Ubuntu, as expected.\n(Cython 0.23 through 0.24.1, both Python 2).\n\nWhat do you get for\n\n  from libc.math cimport NAN\n\n  import struct, numpy as np\n  print struct.pack('d', np.nan).encode('hex')\n  print struct.pack('d', float('nan')).encode('hex')\n  print struct.pack('d', NAN).encode('hex')\n\nI see '000000000000f87f' for all.\n\n> The only way to see libc.math.isnan outputs True is to pass libc.math.NAN into it.\n>\n> BTW, cmath.isnan is ~7 times faster than numpy.isnan on a scalar input, and libc.math.isnan is even faster especially when I work with raw float/double data:\n>\n> In []: a = numpy.nan\n> In []: numpy_isnan = numpy.isnan\n> In []: cmath_isnan = cmath.isnan\n> In []: %timeit numpy_isnan(a)\n> The slowest run took 18.52 times longer than the fastest. This could mean that an intermediate result is being cached.\n> 1000000 loops, best of 3: 844 ns per loop\n> In []: %timeit cmath_isnan(a)\n> The slowest run took 20.88 times longer than the fastest. This could mean that an intermediate result is being cached.\n> 10000000 loops, best of 3: 124 ns per loop\n\nUsing timeit for something so small is grossly distorted due to the\noverhead of the timeit loop.\n\nSee https://gist.github.com/robertwb/806c3c942fd4825a1272c61bfdc3b470\n\nI'm getting\n\nisnan from math.h: 0.4 ns/call\nnp_isnan from npy_math.h: 0.5 ns/call\nisnan from math (python): 50 ns/call  # overhead is Python function call\nisnan from cmath (python): 170 ns/call  # likely converts the input to a complex\nisnan from numpy (python): 2000+ ns/call  # dispatch or conversion to array?\n\n> I use x86-64 Arch Linux with Python 3.5.2 and Cython 0.24.1.\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
            "created_at": "2016-08-11T17:23:15Z",
            "html_url": "https://github.com/cython/cython/issues/550#issuecomment-239229861",
            "id": 239229861,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/550",
            "updated_at": "2016-08-11T17:23:15Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/239229861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "```cython\r\nfrom libc.math cimport NAN, isnan\r\n\r\nimport cmath, binascii, struct, numpy as np\r\n\r\ncdef extern from \"numpy/npy_math.h\":\r\n    bint npy_isnan(double x)\r\n\r\n\r\ndef test_nans():\r\n    cdef float f_nan = np.nan\r\n    cdef double d_nan = np.nan\r\n\r\n    print(binascii.hexlify(struct.pack('d', np.nan)))\r\n    print(binascii.hexlify(struct.pack('d', float('nan'))))\r\n    print(binascii.hexlify(struct.pack('d', NAN)))\r\n\r\n    print(isnan(np.nan), isnan(f_nan), isnan(d_nan))\r\n    print(npy_isnan(np.nan), npy_isnan(f_nan), npy_isnan(d_nan))\r\n    print(np.isnan(np.nan), np.isnan(f_nan), np.isnan(d_nan))\r\n    print(cmath.isnan(np.nan), cmath.isnan(f_nan), cmath.isnan(d_nan))\r\n\r\ntest_nans()\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nb'000000000000f87f'\r\nb'000000000000f87f'\r\nb'000000000000f87f'\r\n(False, False, False)\r\n(False, False, False)\r\n(True, True, True)\r\n(True, True, True)\r\n```\r\n\r\nI have the same output using the following setup:\r\n\r\n1. Arch Linux, x86-64, Python 2.7.12 (compiled with GCC 6.1.1), Cython 0.24.1, GCC 6.1.1, Numpy 1.11.1\r\n2. Arch Linux, x86-64, Python 3.5.2 (compiled with GCC 6.1.1), Cython 0.24.1, GCC 6.1.1, Numpy 1.11.1\r\n3. Arch Linux, x86-64, Anaconda Python 3.5.2 (compiled with GCC 4.8.2), Cython 0.24.1, GCC 6.1.1, Numpy 1.11.1\r\n\r\nHowever, running the code on Ubuntu 14.04 with Python 2.7.9 (compiled with GCC 4.9.2) and GCC 4.9.2 indeed produced the expected output! This is weird! Any ideas?",
            "created_at": "2016-08-11T19:00:57Z",
            "html_url": "https://github.com/cython/cython/issues/550#issuecomment-239258154",
            "id": 239258154,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/550",
            "updated_at": "2016-08-11T19:00:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/239258154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/304265?v=3",
                "events_url": "https://api.github.com/users/frol/events{/privacy}",
                "followers_url": "https://api.github.com/users/frol/followers",
                "following_url": "https://api.github.com/users/frol/following{/other_user}",
                "gists_url": "https://api.github.com/users/frol/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/frol",
                "id": 304265,
                "login": "frol",
                "organizations_url": "https://api.github.com/users/frol/orgs",
                "received_events_url": "https://api.github.com/users/frol/received_events",
                "repos_url": "https://api.github.com/users/frol/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/frol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/frol/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/frol"
            }
        },
        {
            "body": "On Thu, Aug 11, 2016 at 12:00 PM, Vlad Frolov <notifications@github.com> wrote:\n>\n> from libc.math cimport NAN, isnan\n>\n> import cmath, binascii, struct, numpy as np\n>\n> cdef extern from \"numpy/npy_math.h\":\n>     bint npy_isnan(double x)\n>\n>\n> def test_nans():\n>     cdef float f_nan = np.nan\n>     cdef double d_nan = np.nan\n>\n>     print(binascii.hexlify(struct.pack('d', np.nan)))\n>     print(binascii.hexlify(struct.pack('d', float('nan'))))\n>     print(binascii.hexlify(struct.pack('d', NAN)))\n>\n>     print(isnan(np.nan), isnan(f_nan), isnan(d_nan))\n>     print(npy_isnan(np.nan), npy_isnan(f_nan), npy_isnan(d_nan))\n>     print(np.isnan(np.nan), np.isnan(f_nan), np.isnan(d_nan))\n>     print(cmath.isnan(np.nan), cmath.isnan(f_nan), cmath.isnan(d_nan))\n>\n> test_nans()\n>\n> Output:\n>\n> b'000000000000f87f'\n> b'000000000000f87f'\n> b'000000000000f87f'\n> (False, False, False)\n> (False, False, False)\n> (True, True, True)\n> (True, True, True)\n>\n> I have the same output using the following setup:\n>\n> Arch Linux, x86-64, Python 2.7.12 (compiled with GCC 6.1.1), Cython 0.24.1, GCC 6.1.1, Numpy 1.11.1\n> Arch Linux, x86-64, Python 3.5.2 (compiled with GCC 6.1.1), Cython 0.24.1, GCC 6.1.1, Numpy 1.11.1\n> Arch Linux, x86-64, Anaconda Python 3.5.2 (compiled with GCC 4.8.2), Cython 0.24.1, GCC 6.1.1, Numpy 1.11.1\n>\n> However, running the code on Ubuntu 14.04 with Python 2.7.9 (compiled with GCC 4.9.2) and GCC 4.9.2 indeed produced the expected output! This is weird! Any ideas?\n\nWhat does a straight C program give using isnan from math.h?\n",
            "created_at": "2016-08-11T23:20:52Z",
            "html_url": "https://github.com/cython/cython/issues/550#issuecomment-239322512",
            "id": 239322512,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/550",
            "updated_at": "2016-08-11T23:20:52Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/239322512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "Oh my, I have just shot myself in the foot by using `-ffast-math` while compiling my Cythonized module. `-ffast-math` disables nan and inf checks: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25975\r\n\r\nI'm sorry for this noise.",
            "created_at": "2016-08-12T07:05:04Z",
            "html_url": "https://github.com/cython/cython/issues/550#issuecomment-239375955",
            "id": 239375955,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/550",
            "updated_at": "2016-08-12T07:05:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/239375955",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/304265?v=3",
                "events_url": "https://api.github.com/users/frol/events{/privacy}",
                "followers_url": "https://api.github.com/users/frol/followers",
                "following_url": "https://api.github.com/users/frol/following{/other_user}",
                "gists_url": "https://api.github.com/users/frol/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/frol",
                "id": 304265,
                "login": "frol",
                "organizations_url": "https://api.github.com/users/frol/orgs",
                "received_events_url": "https://api.github.com/users/frol/received_events",
                "repos_url": "https://api.github.com/users/frol/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/frol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/frol/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/frol"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/550/comments",
    "created_at": "2016-08-06T21:17:22Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/304265?v=3",
                "events_url": "https://api.github.com/users/frol/events{/privacy}",
                "followers_url": "https://api.github.com/users/frol/followers",
                "following_url": "https://api.github.com/users/frol/following{/other_user}",
                "gists_url": "https://api.github.com/users/frol/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/frol",
                "id": 304265,
                "login": "frol",
                "organizations_url": "https://api.github.com/users/frol/orgs",
                "received_events_url": "https://api.github.com/users/frol/received_events",
                "repos_url": "https://api.github.com/users/frol/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/frol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/frol/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/frol"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-12T07:05:04Z",
            "event": "closed",
            "id": 753646738,
            "url": "https://api.github.com/repos/cython/cython/issues/events/753646738"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/550/events",
    "html_url": "https://github.com/cython/cython/issues/550",
    "id": 169766891,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/550/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 550,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "libc.math.isnan seems to be almost useless",
    "updated_at": "2016-08-12T07:05:04Z",
    "url": "https://api.github.com/repos/cython/cython/issues/550",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/304265?v=3",
        "events_url": "https://api.github.com/users/frol/events{/privacy}",
        "followers_url": "https://api.github.com/users/frol/followers",
        "following_url": "https://api.github.com/users/frol/following{/other_user}",
        "gists_url": "https://api.github.com/users/frol/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/frol",
        "id": 304265,
        "login": "frol",
        "organizations_url": "https://api.github.com/users/frol/orgs",
        "received_events_url": "https://api.github.com/users/frol/received_events",
        "repos_url": "https://api.github.com/users/frol/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/frol/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/frol/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/frol"
    }
}