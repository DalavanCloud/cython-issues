{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "If I define a class with `__cinit__` but not `__init__`:\r\n```python\r\ncdef class C:\r\n    def __cinit__(self):\r\n        \"\"\"Construct a C\"\"\"\r\n```\r\n\r\nthe constructor docstring is not picked up by [autodoc](http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html) and similar tools. Therefore I have to define a dummy `__init__` method simply to attach the constructor's docstring to it.\r\n\r\nIt would be nice if the `__cinit__`'s docstring was reflected in `C.__init__.__doc__` (assuming `__init__` is left undefined).\r\n",
    "closed_at": "2019-01-11T11:30:41Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Hmm. But there is no `__init__` in that case. Where should we stick the docstring?",
            "created_at": "2019-01-11T06:00:33Z",
            "html_url": "https://github.com/cython/cython/issues/2793#issuecomment-453388026",
            "id": 453388026,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2793",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzM4ODAyNg==",
            "updated_at": "2019-01-11T06:00:42Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/453388026",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ah! I would have thought that Cython always generates a `__init__`. Perhaps in the `__new__`? Though I'm not sure autodoc would pick it up correctly.\r\n",
            "created_at": "2019-01-11T10:11:13Z",
            "html_url": "https://github.com/cython/cython/issues/2793#issuecomment-453464642",
            "id": 453464642,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2793",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzQ2NDY0Mg==",
            "updated_at": "2019-01-11T10:11:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/453464642",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think your best choice is to put the user facing docstring into the class, rather than `__cinit__`. I'd be surprised if documentation tools didn't pick it up from there. `__cinit__` is mostly meant for (although not limited to) low-level internal initialisation, anything that needs to be done before calling up the `__init__` chain, which might execute arbitrary user code in subclasses (or not be executed at all). So whatever docstring `__cinit__` has might not even be meant to be seen by users.\r\n\r\nRegarding `__init__` and `__new__`, Cython does the same as Python. If they are not defined, they are simply inherited from the parent, so there is no place to copy a docstring to.\r\n```python\r\n>>> class T(object): pass\r\n>>> T.__new__\r\n<built-in method __new__ of type object at 0x9d1260>\r\n>>> T.__init__\r\n<slot wrapper '__init__' of 'object' objects>\r\n```\r\n",
            "created_at": "2019-01-11T11:30:41Z",
            "html_url": "https://github.com/cython/cython/issues/2793#issuecomment-453489048",
            "id": 453489048,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2793",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzQ4OTA0OA==",
            "updated_at": "2019-01-11T11:32:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/453489048",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2793/comments",
    "created_at": "2019-01-10T18:51:32Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-01-11T11:30:36Z",
            "event": "labeled",
            "id": 2068323968,
            "label": {
                "color": "444444",
                "name": "R: invalid"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDIwNjgzMjM5Njg=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2068323968"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-01-11T11:30:41Z",
            "event": "closed",
            "id": 2068324131,
            "node_id": "MDExOkNsb3NlZEV2ZW50MjA2ODMyNDEzMQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2068324131"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2793/events",
    "html_url": "https://github.com/cython/cython/issues/2793",
    "id": 397966282,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425557122,
            "name": "R: invalid",
            "node_id": "MDU6TGFiZWw0MjU1NTcxMjI=",
            "url": "https://api.github.com/repos/cython/cython/labels/R:%20invalid"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2793/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzOTc5NjYyODI=",
    "number": 2793,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "`__cinit__` docstring is lost",
    "updated_at": "2019-01-11T11:32:05Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2793",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
        "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
        "followers_url": "https://api.github.com/users/pitrou/followers",
        "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
        "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pitrou",
        "id": 1721820,
        "login": "pitrou",
        "node_id": "MDQ6VXNlcjE3MjE4MjA=",
        "organizations_url": "https://api.github.com/users/pitrou/orgs",
        "received_events_url": "https://api.github.com/users/pitrou/received_events",
        "repos_url": "https://api.github.com/users/pitrou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pitrou"
    }
}