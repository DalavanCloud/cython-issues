{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Currently, Cython introduces a compiler error in the C++ compiler when converting a C/C++ `bint/bool` to a Python bool in a complex statement, due to `__Pyx_PyBool_FromLong` being a macro.\r\n\r\n# Reproducing the Error\r\n\r\n**header.h**\r\n```cpp\r\ntemplate <class T1, class T2>\r\nclass BinaryAnd {\r\npublic:\r\n    static T1 call(T1 x, T2 y) { return x & y; }\r\n};\r\n```\r\n\r\n**source.pyx**\r\n```cython\r\ncdef extern from \"header.h\":\r\n    cdef cppclass BinaryAnd[T1, T2]:\r\n        @staticmethod\r\n        T1 call(T1 x, T2 y)\r\n\r\ndef return_bool(bool x, bool y):\r\n    return BinaryAnd[bool, bool].call(x, y)\r\n```\r\n\r\n# Error\r\n\r\n```bash\r\nerror: macro \"__Pyx_PyBool_FromLong\" passed 2 arguments, but takes just 1\r\n   __pyx_t_1 = __Pyx_PyBool_FromLong(BinaryAnd<bool,bool> ::call(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)\r\n                                                                                      ^\r\ncpp_templates.cpp: In function ‘PyObject* __pyx_pf_13cpp_templates_20test_compound_bool_return(PyObject*, bool, bool)’:\r\ncpp_templates.cpp:3238:15: error: ‘__Pyx_PyBool_FromLong’ was not declared in this scope\r\n   __pyx_t_1 = __Pyx_PyBool_FromLong(BinaryAnd<bool,bool> ::call(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)\r\n               ^~~~~~~~~~~~~~~~~~~~~\r\ncpp_templates.cpp:3238:15: note: suggested alternative: ‘__Pyx_PyInt_From_long’\r\n   __pyx_t_1 = __Pyx_PyBool_FromLong(BinaryAnd<bool,bool> ::call(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)\r\n               ^~~~~~~~~~~~~~~~~~~~~\r\n               __Pyx_PyInt_From_long\r\n```\r\n\r\n# Solution\r\n\r\nThe fix is simple: convert the macro to an inlined function.\r\n\r\n```diff\r\ndiff --git a/Cython/Utility/TypeConversion.c b/Cython/Utility/TypeConversion.c\r\nindex 734e293ed..20af1d92a 100644\r\n--- a/Cython/Utility/TypeConversion.c\r\n+++ b/Cython/Utility/TypeConversion.c\r\n@@ -84,7 +84,8 @@ static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {\r\n \r\n #define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)\r\n #define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)\r\n-#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))\r\n+static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);\r\n static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);\r\n static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);\r\n \r\n@@ -402,6 +403,12 @@ static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {\r\n   return ival;\r\n }\r\n \r\n+\r\n+static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {\r\n+  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);\r\n+}\r\n+\r\n+\r\n static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {\r\n     return PyInt_FromSize_t(ival);\r\n }\r\n```",
    "closed_at": "2018-05-01T15:50:46Z",
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2216/comments",
    "created_at": "2018-04-26T20:23:39Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-05-01T15:50:46Z",
            "event": "closed",
            "id": 1603604860,
            "node_id": "MDExOkNsb3NlZEV2ZW50MTYwMzYwNDg2MA==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/1603604860"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2216/events",
    "html_url": "https://github.com/cython/cython/issues/2216",
    "id": 318183541,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2216/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzMTgxODM1NDE=",
    "number": 2216,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Fix `__Pyx_PyBool_FromLong` for statements with internal commas.",
    "updated_at": "2018-05-01T15:50:46Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2216",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/9440903?v=4",
        "events_url": "https://api.github.com/users/Alexhuszagh/events{/privacy}",
        "followers_url": "https://api.github.com/users/Alexhuszagh/followers",
        "following_url": "https://api.github.com/users/Alexhuszagh/following{/other_user}",
        "gists_url": "https://api.github.com/users/Alexhuszagh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Alexhuszagh",
        "id": 9440903,
        "login": "Alexhuszagh",
        "node_id": "MDQ6VXNlcjk0NDA5MDM=",
        "organizations_url": "https://api.github.com/users/Alexhuszagh/orgs",
        "received_events_url": "https://api.github.com/users/Alexhuszagh/received_events",
        "repos_url": "https://api.github.com/users/Alexhuszagh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Alexhuszagh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Alexhuszagh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Alexhuszagh"
    }
}