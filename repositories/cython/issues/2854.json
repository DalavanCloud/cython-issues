{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "If I compile the following functions using Cython:\r\n```python\r\ndef _noop_bench():\r\n    pass\r\n\r\ndef _import_bench():\r\n    import pyarrow.pandas_compat as pdcompat\r\n```\r\n\r\nAnd then measure their performance:\r\n```python\r\n>>> %timeit lib._noop_bench()                                                                                                                                     \r\n66.3 ns ± 0.379 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)\r\n>>> %timeit lib._import_bench()                                                                                                                                   \r\n987 ns ± 21.1 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\r\n>>> %timeit lib._import_bench()                                                                                                                                   \r\n966 ns ± 17.6 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\r\n```\r\n\r\nThe import overhead (~ 900 ns. per import statement) appears much slower than what CPython achieves:\r\n```python\r\n>>> %timeit import pyarrow.pandas_compat as pdcompat                                                                                                              \r\n253 ns ± 4.52 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\r\n>>> %timeit import pyarrow.pandas_compat as pdcompat                                                                                                              \r\n254 ns ± 3.66 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\r\n```\r\n\r\nThis is with Python 3, Cython 0.29.4 and `language_level = 3`.",
    "closed_at": "2019-02-23T13:32:25Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Hmm, interesting. My first thought was Py2-style imports, but you're using `language_level=3`, so that's not it.\r\n\r\nImporting has never really been a priority for optimisation, more of a \"just make it work across all Python versions\" kind of task. But I can't see a reason why Cython should be slower than CPython here, let alone 4x as slow. Definitely worth investigating.",
            "created_at": "2019-02-20T21:51:38Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-465769197",
            "id": 465769197,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTc2OTE5Nw==",
            "updated_at": "2019-02-20T21:51:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/465769197",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I investigated this. CPython imports the module by dotted name and then looks up attributes on the result until it found the final imported sub-sub-sub-…module.  Cython (and probably Pyrex already) took the easy path of passing a non-empty name list into the import function (actually the list `['*']`), which then takes that as a signal to return the imported submodule instead of the top-level module. That is much slower. I'll see what I can do about it.",
            "created_at": "2019-02-21T22:42:38Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466197913",
            "id": 466197913,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjE5NzkxMw==",
            "updated_at": "2019-02-21T22:42:38Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466197913",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, all not that easy, due to CPython's long-grown import C-API, which is entirely backwards. If I want to import a module, then please give me the module and don't leave me standing in the rain with the top-level module that I have to look up attributes on. :(\r\n\r\nWhile many things can be worked around, it becomes tricky for circular and concurrent imports. If one module imports itself, then it might be in `sys.modules` already, but not yet in the package module, i.e. looking up `pkg1.pkg2.module` should work, but looking it up as attributed from `pkg1.pkg2` -> `pkg2.module` might not. So, what I did for now, was to ignore the import lock-unlock cycle that CPython does in `importlib` (to allow other threads to finish their import), and just take the module if it's in `sys.modules`.\r\n\r\n```\r\nCPython:\r\n$ python3.7 -m timeit 'import pyarrow.pandas_compat as pdcompat'\r\n1 loop, best of 5: 592 nsec per loop\r\n$ python3.6 -m timeit 'import pyarrow.pandas_compat as pdcompat'\r\n10 loops, best of 3: 0.302 usec per loop\r\n$ python3.5 -m timeit 'import pyarrow.pandas_compat as pdcompat'\r\n10 loops, best of 3: 0.946 usec per loop\r\n\r\nCython before:\r\n$ python3.7 -m timeit -s 'from importbench import _import_bench' '_import_bench()'\r\n1 loop, best of 5: 1.37 usec per loop\r\n\r\nNow:\r\n$ python3.7 -m timeit -n 100000 -r 50 -s 'from importbench import _import_bench' '_import_bench()'\r\n100000 loops, best of 50: 51.5 nsec per loop\r\n$ python3.6 -m timeit -n 100000 -r 50 -s 'from importbench import _import_bench' '_import_bench()'\r\n100000 loops, best of 50: 0.0424 usec per loop\r\n$ python3.5 -m timeit -n 100000 -r 50 -s 'from importbench import _import_bench' '_import_bench()'\r\n100000 loops, best of 50: 0.0454 usec per loop\r\n```\r\n",
            "created_at": "2019-02-22T17:20:37Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466475284",
            "id": 466475284,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ3NTI4NA==",
            "updated_at": "2019-02-22T17:20:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466475284",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Actually, there is already some code in CPython that you can copy to have a fast path while still guarding against uninitialized modules: see https://bugs.python.org/issue35943#msg335097\r\n\r\nGreat to see this advancing towards resolution :-)",
            "created_at": "2019-02-22T17:25:12Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466476791",
            "id": 466476791,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ3Njc5MQ==",
            "updated_at": "2019-02-22T17:25:12Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466476791",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Of course, if you want to limit the reliance on private APIs, you could just defer to regular importing if the `<module>.__spec__._initializing` attribute is True.",
            "created_at": "2019-02-22T17:30:55Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466478669",
            "id": 466478669,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ3ODY2OQ==",
            "updated_at": "2019-02-22T17:30:55Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466478669",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks, I had already found that code in `Python/import.c`. As you guessed, the problem is this bit: `interp->importlib`. We don't currently touch the interpreter state anywhere in Cython, and i would prefer to leave it that way. The C-API of `importlib` is a bit … limited.\r\n\r\nI had already implemented the flag check, but then noticed that I would then also have to duplicate the whole \"import importlib, call locking function\" part, which is a lot of overhead. (Also, importing importlib in import code feels a bit … meta.)\r\n\r\nhttps://github.com/cython/cython/blob/4993ba6a0194c2fbcf438ae2833f43c33781148d/Cython/Utility/ImportExport.c#L110-L131",
            "created_at": "2019-02-22T17:38:10Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466481026",
            "id": 466481026,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ4MTAyNg==",
            "updated_at": "2019-02-22T17:39:33Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466481026",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Well, the cost of calling into importlib will almost never be paid, so I'm not sure you should worry about that. Still, correctness is important IMHO.\r\n\r\nAs I wrote above, you needn't call importlib yourself, you can just fall back on the normal non-optimized path if the `initializing` attribute is True.\r\n",
            "created_at": "2019-02-22T17:40:47Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466481829",
            "id": 466481829,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ4MTgyOQ==",
            "updated_at": "2019-02-22T17:40:47Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466481829",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Well, \"almost never\" does not seem to take circular imports into account, which do not seem all that uncommon to me.",
            "created_at": "2019-02-22T17:46:10Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466483645",
            "id": 466483645,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ4MzY0NQ==",
            "updated_at": "2019-02-22T17:46:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466483645",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "But you would only pay the price on the first import, not once the module is entirely loaded... The point of the optimization here is to make imports of already-loaded modules fast. Making fresh imports faster is not really achievable within Cython (unless you decide to break import semantics, that is ;-)).",
            "created_at": "2019-02-22T17:49:47Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466484798",
            "id": 466484798,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ4NDc5OA==",
            "updated_at": "2019-02-22T17:50:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466484798",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As you can see from the code above, I've actually tried it. The problem then was to find a way how to make CPython use the right fallback. The import C-API is really horrible. Important functionality is scattered across different functions and entry points, some things are implemented in Python, and some are even in `ceval.c`.\r\n\r\nI agree about the correctness and will give it another try.",
            "created_at": "2019-02-22T17:57:20Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466487200",
            "id": 466487200,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ4NzIwMA==",
            "updated_at": "2019-02-22T17:57:20Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466487200",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ah... well, I suppose you could do whatever you did before this optimization? :-)",
            "created_at": "2019-02-22T17:58:04Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466487447",
            "id": 466487447,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ4NzQ0Nw==",
            "updated_at": "2019-02-22T17:58:04Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466487447",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So, the problem I had was really with circular imports. While resolving them, the module is already in `sys.modules`, but not yet available as an attribute of its package. Thus, the attribute lookup chain from the top-level module after the import fails. Long story short, I added another lookup in `sys.modules` right after the import to load the module from there. That's not 100% \"correct\" (at least, it differs from what CPython does), since the package attribute might be different from the module in `sys.modules`, but I'd argue that a setup where the module you get depends on the way you get at it is inherently broken anyway and thus not worth supporting.",
            "created_at": "2019-02-22T19:55:34Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-466526203",
            "id": 466526203,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjUyNjIwMw==",
            "updated_at": "2019-02-22T19:55:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/466526203",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "NONE",
            "body": "@scoder Falling back to checking sys.modules is pretty close to what CPython does to handle circular imports - it's a last-gasp attempt in the import opcodes when looking up the module attribute throws `AttributeError`.\r\n\r\nI agree on this being spectacularly convoluted though (and will comment further on that in Antoine's capi-sig thread).",
            "created_at": "2019-02-26T09:05:10Z",
            "html_url": "https://github.com/cython/cython/issues/2854#issuecomment-467356120",
            "id": 467356120,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2854",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM1NjEyMA==",
            "updated_at": "2019-02-26T09:05:10Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/467356120",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4",
                "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ncoghlan/followers",
                "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ncoghlan",
                "id": 1026649,
                "login": "ncoghlan",
                "node_id": "MDQ6VXNlcjEwMjY2NDk=",
                "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
                "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
                "repos_url": "https://api.github.com/users/ncoghlan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ncoghlan"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2854/comments",
    "created_at": "2019-02-20T12:45:31Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-02-20T21:51:09Z",
            "event": "labeled",
            "id": 2153294407,
            "label": {
                "color": "f9d0c4",
                "name": "performance"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDIxNTMyOTQ0MDc=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2153294407"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-02-20T21:51:09Z",
            "event": "labeled",
            "id": 2153294410,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDIxNTMyOTQ0MTA=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2153294410"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-02-20T21:51:09Z",
            "event": "labeled",
            "id": 2153294418,
            "label": {
                "color": "444444",
                "name": "Code Generation"
            },
            "node_id": "MDEyOkxhYmVsZWRFdmVudDIxNTMyOTQ0MTg=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2153294418"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": "4993ba6a0194c2fbcf438ae2833f43c33781148d",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/4993ba6a0194c2fbcf438ae2833f43c33781148d",
            "created_at": "2019-02-22T17:19:45Z",
            "event": "referenced",
            "id": 2158453733,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxNTg0NTM3MzM=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2158453733"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-02-22T17:25:44Z",
            "event": "milestoned",
            "id": 2158468035,
            "milestone": {
                "title": "3.0"
            },
            "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDIxNTg0NjgwMzU=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2158468035"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": "fb26190830ce90218070be95cac3ccf8e33717f1",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/fb26190830ce90218070be95cac3ccf8e33717f1",
            "created_at": "2019-02-22T19:55:08Z",
            "event": "referenced",
            "id": 2158809384,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxNTg4MDkzODQ=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2158809384"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-02-23T13:32:25Z",
            "event": "closed",
            "id": 2159588157,
            "node_id": "MDExOkNsb3NlZEV2ZW50MjE1OTU4ODE1Nw==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2159588157"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-02-26T09:05:10Z",
            "event": "mentioned",
            "id": 2164188179,
            "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjE2NDE4ODE3OQ==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2164188179"
        },
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-02-26T09:05:10Z",
            "event": "subscribed",
            "id": 2164188181,
            "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxNjQxODgxODE=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2164188181"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2854/events",
    "html_url": "https://github.com/cython/cython/issues/2854",
    "id": 412407209,
    "labels": [
        {
            "color": "444444",
            "default": false,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "f9d0c4",
            "default": false,
            "id": 414805151,
            "name": "performance",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxNTE=",
            "url": "https://api.github.com/repos/cython/cython/labels/performance"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2854/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 38,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 21,
        "state": "open",
        "title": "3.0",
        "updated_at": "2019-02-23T17:10:20Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDU6SXNzdWU0MTI0MDcyMDk=",
    "number": 2854,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Imports are slower than with CPython",
    "updated_at": "2019-02-26T09:05:10Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2854",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4",
        "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
        "followers_url": "https://api.github.com/users/pitrou/followers",
        "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
        "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pitrou",
        "id": 1721820,
        "login": "pitrou",
        "node_id": "MDQ6VXNlcjE3MjE4MjA=",
        "organizations_url": "https://api.github.com/users/pitrou/orgs",
        "received_events_url": "https://api.github.com/users/pitrou/received_events",
        "repos_url": "https://api.github.com/users/pitrou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pitrou"
    }
}