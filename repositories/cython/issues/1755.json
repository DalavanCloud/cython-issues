{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### print_exc()\r\n\r\nhello.pyx\r\n\r\n```\r\nimport traceback\r\n\r\ntry:\r\n    raise\r\nexcept:\r\n    traceback.print_exc()\r\n```\r\n\r\n=>\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"hello.pyx\", line 4, in hello (hello.c:1050)\r\n    raise\r\n```\r\n\r\n### print_stack()\r\n\r\nhello.pyx\r\n\r\n```\r\nimport traceback\r\n\r\ntraceback.print_stack()\r\n```\r\n\r\n=>\r\n\r\n```\r\n  File \"/home/sonots/.pyenv/versions/3.6.1/lib/python3.6/traceback.py\", line 186, in print_stack\r\n    print_list(extract_stack(f, limit=limit), file=file)\r\n```\r\n\r\nThis does not show `File \"hello.pyx\", line 4, in hello (hello.c:1050)`",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This is because in Cython one doesn't really have Python frames (we just insert fake ones when an exception is raised). \r\n\r\nThere are similar issues for using inspect to try to get at a Cython caller. It's probably infeasible, and certainly a performance hit, to create/inject these frames on every function call. ",
            "created_at": "2017-06-29T00:35:43Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-311829525",
            "id": 311829525,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTgyOTUyNQ==",
            "updated_at": "2017-06-29T00:35:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311829525",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there a more general feature request that we can check on regarding this? The documentation says \r\n\r\n\"Currently we generate fake tracebacks as part of exception propagation, but don’t fill in locals and can’t fill in co_code. To be fully compatible, we would have to generate these stack frame objects at function call time (with a potential performance penalty). We may have an option to enable this for debugging.\"\r\n\r\n",
            "created_at": "2017-12-20T22:25:56Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-353200758",
            "id": 353200758,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzIwMDc1OA==",
            "updated_at": "2017-12-20T22:25:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/353200758",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/380854?v=4",
                "events_url": "https://api.github.com/users/bgedik/events{/privacy}",
                "followers_url": "https://api.github.com/users/bgedik/followers",
                "following_url": "https://api.github.com/users/bgedik/following{/other_user}",
                "gists_url": "https://api.github.com/users/bgedik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bgedik",
                "id": 380854,
                "login": "bgedik",
                "node_id": "MDQ6VXNlcjM4MDg1NA==",
                "organizations_url": "https://api.github.com/users/bgedik/orgs",
                "received_events_url": "https://api.github.com/users/bgedik/received_events",
                "repos_url": "https://api.github.com/users/bgedik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bgedik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bgedik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bgedik"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi, could this be related to the strange behavor of warnings raised from Cython? If fake Python frames are only generated for raised exceptions, then I can see why warnings are not able to correctly refer to a line in a pyx file.\r\n\r\nWe asked a corresponding question on the cython-user list.\r\nhttps://groups.google.com/forum/#!topic/cython-users/hLNi1y4-Htg",
            "created_at": "2018-06-15T08:36:35Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-397553312",
            "id": 397553312,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU1MzMxMg==",
            "updated_at": "2018-06-15T08:36:35Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/397553312",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/2631586?v=4",
                "events_url": "https://api.github.com/users/HDembinski/events{/privacy}",
                "followers_url": "https://api.github.com/users/HDembinski/followers",
                "following_url": "https://api.github.com/users/HDembinski/following{/other_user}",
                "gists_url": "https://api.github.com/users/HDembinski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HDembinski",
                "id": 2631586,
                "login": "HDembinski",
                "node_id": "MDQ6VXNlcjI2MzE1ODY=",
                "organizations_url": "https://api.github.com/users/HDembinski/orgs",
                "received_events_url": "https://api.github.com/users/HDembinski/received_events",
                "repos_url": "https://api.github.com/users/HDembinski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HDembinski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HDembinski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HDembinski"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Hi, could this be related to the strange behavor of warnings raised from Cython? If fake Python frames are only generated for raised exceptions, then I can see why warnings are not able to correctly refer to a line in a pyx file.\r\n\r\nIndeed. Effectively, it's as if warnings raised from Cython have `stacklevel=2` by default. The only way around would be to special-case `warn` in the Cython compiler to insert a fake stack frame just like `raise` does.",
            "created_at": "2018-06-15T08:57:34Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-397558570",
            "id": 397558570,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU1ODU3MA==",
            "updated_at": "2018-06-15T08:57:34Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/397558570",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "...and even if Cython special-cases `warn()`, that still wouldn't fix cases where warnings are raised indirectly. Consider this example from the Python docs:\r\n```\r\ndef deprecation(message):\r\n    warnings.warn(message, DeprecationWarning, stacklevel=2)\r\n```\r\nSuppose that `deprecation()` is implemented in a plain Python file. Then calling `deprecation()` from Cython would hit the same bug. Since Cython doesn't know what `deprecation()` does, there is no way for Cython to fix that.",
            "created_at": "2018-06-15T09:16:57Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-397563578",
            "id": 397563578,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU2MzU3OA==",
            "updated_at": "2018-06-15T09:16:57Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/397563578",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You could try if enabling profiling support fixes this.",
            "created_at": "2018-06-15T09:23:56Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-397565283",
            "id": 397565283,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU2NTI4Mw==",
            "updated_at": "2018-06-15T09:23:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/397565283",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I haven't tried, but I don't think that profiling adds stack frames.",
            "created_at": "2018-06-15T09:26:05Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-397565781",
            "id": 397565781,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU2NTc4MQ==",
            "updated_at": "2018-06-15T09:26:05Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/397565781",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "author_association": "NONE",
            "body": "Maybe this is a stupid question, but why doesn't `Cython` somehow get `traceback.print_stack()` to throw an exception and catch it, get the backtrace from that, and return it? Since that sounds like something I could easily do myself, I am wondering why it would be a problem to just automatically do this in `traceback` itself.\r\n\r\n(If that slows `print_stack()` down I doubt anyone cares, you don't usually call `print_stack()` when in a performance hotspot unless you currently have other issues to deal with than performance)",
            "created_at": "2018-10-30T05:52:27Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-434180529",
            "id": 434180529,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDE4MDUyOQ==",
            "updated_at": "2018-10-30T05:53:13Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/434180529",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> why doesn't `Cython` somehow get `traceback.print_stack()` to throw an exception\r\n\r\nHow would you do that?\r\n\r\n> Since that sounds like something I could easily do myself\r\n\r\nCould you show your proof of concept for that?",
            "created_at": "2018-10-31T09:40:27Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-434621830",
            "id": 434621830,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDYyMTgzMA==",
            "updated_at": "2018-10-31T09:40:27Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/434621830",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "node_id": "MDQ6VXNlcjM2MjU3ODU=",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well as I said before, it was just a naive suggestion. I tried it now and it doesn't work, it traces back only up to where the error was caught, useless when done inside some `get_backtrace` function.",
            "created_at": "2018-10-31T10:05:00Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-434629532",
            "id": 434629532,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDYyOTUzMg==",
            "updated_at": "2018-11-15T10:38:37Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/434629532",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        },
        {
            "author_association": "NONE",
            "body": "This is by the way the one single issue that makes me consider bailing out of Cython as much as I can, unless I really need it for performance.\r\n\r\nOr is there any other way to see how a Cython function was called? Because I'm having a really hard time debugging some things without a proper backtrace...\r\n\r\nAs for performance, I would be completely fine with a debug mode that is slower, where backtrace generation works. I don't need them in regular operation because there I usually throw exceptions when things go really wrong, just for manual debugging",
            "created_at": "2018-11-14T19:25:48Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-438787141",
            "id": 438787141,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc4NzE0MQ==",
            "updated_at": "2018-11-14T19:27:30Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/438787141",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Trackebacks are added as the exception propagates upwards; for debugging you could simply raise an exception to see where you are. ",
            "created_at": "2018-11-14T22:06:49Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-438836513",
            "id": 438836513,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzODgzNjUxMw==",
            "updated_at": "2018-11-14T22:06:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/438836513",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "node_id": "MDQ6VXNlcjQ4NjAxNw==",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "NONE",
            "body": "Of course I could, but that falls super flat once you have any more complex scenario (like, any case where you need a bunch of tracebacks at different places to get a bigger picture). It would be really useful if there was a way to get `traceback.print_stack()` to work, no matter how slow it is.\r\n\r\nMaybe I'm the only one who needs that sometimes, but I definitely do, and it's a real pain that in Cython I can't make it work...",
            "created_at": "2018-11-14T22:44:19Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-438847098",
            "id": 438847098,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzODg0NzA5OA==",
            "updated_at": "2018-11-14T22:44:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/438847098",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        },
        {
            "author_association": "NONE",
            "body": "Another scenario where raising exceptions isn't really a useful approach is in a hang check, where I usually print a backtrace to the log. Raising an exception there is just not a useful thing to do since there are some cases where an action just takes way longer but isn't stuck, so a random kill doesn't do any good. The backtrace however is very useful, for getting a starting point for where the performance problem is.\r\n\r\nSummed up, there are a few cases where an exception either just doesn't cut it, or makes the process exceptionally more painful. (Exaggerated to make my point: of course I can debug everything with just `print`, but I'll still need 10x the time compared to when I have proper tools.)",
            "created_at": "2018-11-14T22:54:11Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-438849707",
            "id": 438849707,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzODg0OTcwNw==",
            "updated_at": "2018-11-15T07:54:14Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/438849707",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
                "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
                "followers_url": "https://api.github.com/users/JonasT/followers",
                "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
                "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JonasT",
                "id": 1573352,
                "login": "JonasT",
                "node_id": "MDQ6VXNlcjE1NzMzNTI=",
                "organizations_url": "https://api.github.com/users/JonasT/orgs",
                "received_events_url": "https://api.github.com/users/JonasT/received_events",
                "repos_url": "https://api.github.com/users/JonasT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JonasT"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1755/comments",
    "created_at": "2017-06-28T10:54:45Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1755/events",
    "html_url": "https://github.com/cython/cython/issues/1755",
    "id": 239126371,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1755/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyMzkxMjYzNzE=",
    "number": 1755,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "traceback.print_exc() shows stacktrace of cython layer, but traceback.print_stack() does not",
    "updated_at": "2018-11-15T10:38:37Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1755",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/2290461?v=4",
        "events_url": "https://api.github.com/users/sonots/events{/privacy}",
        "followers_url": "https://api.github.com/users/sonots/followers",
        "following_url": "https://api.github.com/users/sonots/following{/other_user}",
        "gists_url": "https://api.github.com/users/sonots/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sonots",
        "id": 2290461,
        "login": "sonots",
        "node_id": "MDQ6VXNlcjIyOTA0NjE=",
        "organizations_url": "https://api.github.com/users/sonots/orgs",
        "received_events_url": "https://api.github.com/users/sonots/received_events",
        "repos_url": "https://api.github.com/users/sonots/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sonots/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sonots/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sonots"
    }
}