{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### print_exc()\r\n\r\nhello.pyx\r\n\r\n```\r\nimport traceback\r\n\r\ntry:\r\n    raise\r\nexcept:\r\n    traceback.print_exc()\r\n```\r\n\r\n=>\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"hello.pyx\", line 4, in hello (hello.c:1050)\r\n    raise\r\n```\r\n\r\n### print_stack()\r\n\r\nhello.pyx\r\n\r\n```\r\nimport traceback\r\n\r\ntraceback.print_stack()\r\n```\r\n\r\n=>\r\n\r\n```\r\n  File \"/home/sonots/.pyenv/versions/3.6.1/lib/python3.6/traceback.py\", line 186, in print_stack\r\n    print_list(extract_stack(f, limit=limit), file=file)\r\n```\r\n\r\nThis does not show `File \"hello.pyx\", line 4, in hello (hello.c:1050)`",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "OWNER",
            "body": "This is because in Cython one doesn't really have Python frames (we just insert fake ones when an exception is raised). \r\n\r\nThere are similar issues for using inspect to try to get at a Cython caller. It's probably infeasible, and certainly a performance hit, to create/inject these frames on every function call. ",
            "created_at": "2017-06-29T00:35:43Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-311829525",
            "id": 311829525,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "updated_at": "2017-06-29T00:35:43Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/311829525",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there a more general feature request that we can check on regarding this? The documentation says \r\n\r\n\"Currently we generate fake tracebacks as part of exception propagation, but don’t fill in locals and can’t fill in co_code. To be fully compatible, we would have to generate these stack frame objects at function call time (with a potential performance penalty). We may have an option to enable this for debugging.\"\r\n\r\n",
            "created_at": "2017-12-20T22:25:56Z",
            "html_url": "https://github.com/cython/cython/issues/1755#issuecomment-353200758",
            "id": 353200758,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1755",
            "updated_at": "2017-12-20T22:25:56Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/353200758",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/380854?v=4",
                "events_url": "https://api.github.com/users/bgedik/events{/privacy}",
                "followers_url": "https://api.github.com/users/bgedik/followers",
                "following_url": "https://api.github.com/users/bgedik/following{/other_user}",
                "gists_url": "https://api.github.com/users/bgedik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bgedik",
                "id": 380854,
                "login": "bgedik",
                "organizations_url": "https://api.github.com/users/bgedik/orgs",
                "received_events_url": "https://api.github.com/users/bgedik/received_events",
                "repos_url": "https://api.github.com/users/bgedik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bgedik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bgedik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bgedik"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1755/comments",
    "created_at": "2017-06-28T10:54:45Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1755/events",
    "html_url": "https://github.com/cython/cython/issues/1755",
    "id": 239126371,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1755/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1755,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "traceback.print_exc() shows stacktrace of cython layer, but traceback.print_stack() does not",
    "updated_at": "2017-12-20T22:25:56Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1755",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/2290461?v=4",
        "events_url": "https://api.github.com/users/sonots/events{/privacy}",
        "followers_url": "https://api.github.com/users/sonots/followers",
        "following_url": "https://api.github.com/users/sonots/following{/other_user}",
        "gists_url": "https://api.github.com/users/sonots/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sonots",
        "id": 2290461,
        "login": "sonots",
        "organizations_url": "https://api.github.com/users/sonots/orgs",
        "received_events_url": "https://api.github.com/users/sonots/received_events",
        "repos_url": "https://api.github.com/users/sonots/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sonots/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sonots/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sonots"
    }
}