{
    "assignee": null,
    "assignees": [],
    "body": "The following code:\r\n\r\n``` python\r\nimport cython\r\n\r\ndef main():\r\n  d = cython.declare(dict, None)\r\n  i = cython.declare(int)\r\n\r\n  dget = d.get\r\n  for i in range(20):\r\n     dget(1)\r\n```\r\n\r\nWill generate the following check inside the for loop:\r\n\r\n``` C\r\n    if (unlikely(__pyx_v_d == Py_None)) {\r\n      PyErr_Format(PyExc_AttributeError, \"'NoneType' object has no attribute '%s'\", \"get\");\r\n      __PYX_ERR(0, 7, __pyx_L1_error)\r\n    }\r\n```\r\n\r\nBut it shouldn't be there, it should be outside the loop.\r\n\r\nAlso, and more importantly (since it's the slowest part), it will generate the following code for `dget = d.get`:\r\n\r\n``` C\r\n  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_d, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_1);\r\n  __pyx_v_dget = __pyx_t_1;\r\n  __pyx_t_1 = 0;\r\n```\r\n\r\nBut it would be more than enough to put the other check:\r\n\r\n``` C\r\n    if (unlikely(__pyx_v_d == Py_None)) {\r\n      PyErr_Format(PyExc_AttributeError, \"'NoneType' object has no attribute '%s'\", \"get\");\r\n      __PYX_ERR(0, 7, __pyx_L1_error)\r\n    }\r\n```\r\n\r\nEspecially since `dget` itself isn't used anywhere in the generated C code.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "body": "A very rough WIP fix for the unneeded None check attached. Sorry it's not a PR, I haven't really tested this much. May write a PR when/if I do.\r\n\r\n[needs_none_check_wip.zip](https://github.com/cython/cython/files/638396/needs_none_check_wip.zip)\r\n",
            "created_at": "2016-12-08T04:15:27Z",
            "html_url": "https://github.com/cython/cython/issues/1544#issuecomment-265648918",
            "id": 265648918,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1544",
            "updated_at": "2016-12-08T04:15:50Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/265648918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1746892?v=3",
                "events_url": "https://api.github.com/users/klaussfreire/events{/privacy}",
                "followers_url": "https://api.github.com/users/klaussfreire/followers",
                "following_url": "https://api.github.com/users/klaussfreire/following{/other_user}",
                "gists_url": "https://api.github.com/users/klaussfreire/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/klaussfreire",
                "id": 1746892,
                "login": "klaussfreire",
                "organizations_url": "https://api.github.com/users/klaussfreire/orgs",
                "received_events_url": "https://api.github.com/users/klaussfreire/received_events",
                "repos_url": "https://api.github.com/users/klaussfreire/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/klaussfreire/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/klaussfreire/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/klaussfreire"
            }
        },
        {
            "body": "Did you do any benchmarking to prove that this has a performance impact? I'd be surprised if it did.",
            "created_at": "2016-12-10T16:20:19Z",
            "html_url": "https://github.com/cython/cython/issues/1544#issuecomment-266219575",
            "id": 266219575,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1544",
            "updated_at": "2016-12-10T16:20:19Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/266219575",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=3",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "body": "Well, that same example, run through timeit with number=10000:\r\n\r\n```\r\n>>> import timeit\r\n>>> import pyximport ; pyximport.install(pyimport = True)\r\n(<pyximport.pyximport.PyImporter object at 0x7f85a7832050>, <pyximport.pyximport.PyxImporter object at 0x7f85a36bb590>)\r\n>>> import dgettest\r\n0.00285005569458\r\n```\r\n\r\nCommenting out `dget = d.get` and simply using `d.get` (which avoids the getattribute call):\r\n\r\n```\r\n>>> import pyximport ; pyximport.install(pyimport = True)\r\n(<pyximport.pyximport.PyImporter object at 0x7f77d9c79050>, <pyximport.pyximport.PyxImporter object at 0x7f77d5b02590>)\r\n>>> import dgettest\r\n0.00246286392212\r\n```\r\n\r\nThat's a 13% impact on the get attribute call.\r\n\r\nNow the None check will probably be a smaller impact, but it depends of course on the number of times dget is called. But it cannot be anything but an improvement removing code that isn't needed... right? I mean, by the time dget is called, we *know* d is not None, otherwise d.get would have blown.\r\n\r\nSo I believe the WIP fix I posted alone won't do the trick, it needs to also remove the get attribute call, and replace it with a None check instead. I'll try to get that working, but it doesn't look trivial.\r\n",
            "created_at": "2016-12-12T15:30:40Z",
            "html_url": "https://github.com/cython/cython/issues/1544#issuecomment-266460687",
            "id": 266460687,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1544",
            "updated_at": "2016-12-12T15:30:40Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/266460687",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1746892?v=3",
                "events_url": "https://api.github.com/users/klaussfreire/events{/privacy}",
                "followers_url": "https://api.github.com/users/klaussfreire/followers",
                "following_url": "https://api.github.com/users/klaussfreire/following{/other_user}",
                "gists_url": "https://api.github.com/users/klaussfreire/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/klaussfreire",
                "id": 1746892,
                "login": "klaussfreire",
                "organizations_url": "https://api.github.com/users/klaussfreire/orgs",
                "received_events_url": "https://api.github.com/users/klaussfreire/received_events",
                "repos_url": "https://api.github.com/users/klaussfreire/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/klaussfreire/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/klaussfreire/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/klaussfreire"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1544/comments",
    "created_at": "2016-12-08T03:02:37Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1544/events",
    "html_url": "https://github.com/cython/cython/issues/1544",
    "id": 194235243,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1544/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1544,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Using early-bound dict.get generates inefficient (and incorrect) code",
    "updated_at": "2016-12-12T15:30:40Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1544",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1746892?v=3",
        "events_url": "https://api.github.com/users/klaussfreire/events{/privacy}",
        "followers_url": "https://api.github.com/users/klaussfreire/followers",
        "following_url": "https://api.github.com/users/klaussfreire/following{/other_user}",
        "gists_url": "https://api.github.com/users/klaussfreire/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/klaussfreire",
        "id": 1746892,
        "login": "klaussfreire",
        "organizations_url": "https://api.github.com/users/klaussfreire/orgs",
        "received_events_url": "https://api.github.com/users/klaussfreire/received_events",
        "repos_url": "https://api.github.com/users/klaussfreire/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/klaussfreire/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/klaussfreire/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/klaussfreire"
    }
}