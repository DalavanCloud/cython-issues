{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "This example doesn't compile:\r\n```python\r\nctypedef fused my_type:\r\n    int\r\n    long\r\n\r\n\r\ncdef my_type add(my_type a, my_type b):\r\n    return a + b\r\n\r\n\r\ndef main_fused(my_type[:] array):\r\n    cdef int i\r\n\r\n    for i in range(array.shape[0]):\r\n        array[i] = add(array[i], 2)\r\n```\r\n\r\nI get this message:\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n\r\ndef main_fused(my_type[:] array):\r\n    cdef int i\r\n\r\n    for i in range(array.shape[0]):\r\n        array[i] = add(array[i], 2)\r\n                     ^\r\n------------------------------------------------------------\r\n\r\ncompute_typed.pyx:17:22: ambiguous overloaded method\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n\r\ndef main_fused(my_type[:] array):\r\n    cdef int i\r\n\r\n    for i in range(array.shape[0]):\r\n        array[i] = add(array[i], 2)\r\n                  ^\r\n------------------------------------------------------------\r\n\r\ncompute_typed.pyx:17:19: Invalid use of fused types, type cannot be specialized\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 13, in <module>\r\n    ext_modules=cythonize(\"compute_typed.pyx\", annotate=True),\r\n  File \"/mnt/c/Users/smith/Desktop/projects/cython/Cython/Build/Dependencies.py\", line 1050, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/mnt/c/Users/smith/Desktop/projects/cython/Cython/Build/Dependencies.py\", line 1173, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: compute_typed.pyx\r\n```\r\n\r\nfair enough, but this one does, and I just duplicated the last argument:\r\n```python\r\nctypedef fused my_type:\r\n    int\r\n    long\r\n\r\n\r\ncdef my_type add(my_type a, my_type b, my_type dummy):\r\n    return a + b\r\n\r\n\r\ndef main_fused(my_type[:] array):\r\n    cdef int i\r\n\r\n    for i in range(array.shape[0]):\r\n        array[i] = add(array[i], 2, 2)\r\n```\r\n\r\nI don't know what Cython should do, but I'm pretty sure one of those two cases is a bug (or there is undefined behavior). ",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "My _guess_ is that this is an artefact of the scoring function that we use for matching signatures. In the second case, the integer literals default to `long` and increase the score for the `long` type variant. In the first case, there might simply be a stalemate.\r\n\r\nI'd be ok with going either way, but `int` vs. `long` is generally a source of ambiguity, especially when literals are involved. Could be worth collecting some more examples here to get a better idea of the problem space, before taking a decision.",
            "created_at": "2018-09-23T15:21:17Z",
            "html_url": "https://github.com/cython/cython/issues/2551#issuecomment-423824092",
            "id": 423824092,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2551",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzgyNDA5Mg==",
            "updated_at": "2018-09-23T15:21:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/423824092",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2551/comments",
    "created_at": "2018-08-11T20:29:21Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2551/events",
    "html_url": "https://github.com/cython/cython/issues/2551",
    "id": 349761629,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2551/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNDk3NjE2Mjk=",
    "number": 2551,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Fused types: Duplicating an argument makes cython compile a bad script without raising errors.",
    "updated_at": "2018-09-23T15:21:17Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2551",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4",
        "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}",
        "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers",
        "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}",
        "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gabrieldemarmiesse",
        "id": 12891691,
        "login": "gabrieldemarmiesse",
        "node_id": "MDQ6VXNlcjEyODkxNjkx",
        "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs",
        "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events",
        "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gabrieldemarmiesse"
    }
}