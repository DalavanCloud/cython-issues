{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Here is an example (fails for Python 2, works for Python 3)\r\n\r\n```\r\ndef _create_A_from_state(kls, state):\r\n    obj = A.__new__(kls)\r\n    obj.__setstate__(state)\r\n    return obj\r\n\r\ncdef class A:\r\n    def __cinit__(self): pass\r\n    def __init__(self): pass\r\n    def __reduce__(self): return (_create_A_from_state, (type(self), self.__getstate__()))\r\n    def __getstate__(self): return ()\r\n    def __setstate__(self, state): return None\r\n\r\ncdef class B:\r\n    def __cinit__(self): pass\r\n    def __init__(self): pass\r\n    def __getstate__(self): return ()\r\n\r\n    def __setstate__(self, state): return None\r\n\r\nclass AA(A): pass\r\nclass BB(B): pass\r\n\r\ndef main():\r\n    import pickle\r\n    obj = AA()\r\n    s = pickle.dumps(obj)\r\n    obj2 = pickle.loads(s)\r\n    assert type(obj2) == AA\r\n\r\n    obj = BB()\r\n    s = pickle.dumps(obj)\r\n    obj2 = pickle.loads(s)\r\n    assert type(obj2) == BB\r\n\r\n```\r\nIf one provides `__reduce__`, pickling works (AA, the first assertion).\r\nIf one omits `__reduce__`, the second case (BB, before the second assertion) fails at line 31:\r\n\r\n```\r\n$ python -c 'import pyximport; pyximport.install(); import failcy; failcy.main()'\r\n\r\n...\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"failcy.pyx\", line 31, in failcy.main\r\n    s = pickle.dumps(obj)\r\n  File \"/home/yfeng1/anaconda3/install/envs/2.7/lib/python2.7/pickle.py\", line 1380, in dumps\r\n    Pickler(file, protocol).dump(obj)\r\n  File \"/home/yfeng1/anaconda3/install/envs/2.7/lib/python2.7/pickle.py\", line 224, in dump\r\n    self.save(obj)\r\n  File \"/home/yfeng1/anaconda3/install/envs/2.7/lib/python2.7/pickle.py\", line 306, in save\r\n    rv = reduce(self.proto)\r\n  File \"/home/yfeng1/anaconda3/install/envs/2.7/lib/python2.7/copy_reg.py\", line 71, in _reduce_ex\r\n    state = base(self)\r\nTypeError: __init__() takes exactly 0 positional arguments (1 given)\r\n\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "The documentation was not clear that the BB case shall fail, and a google search on 'cython pickle' lands to an example that uses the BB case:\r\n\r\nhttps://snorfalorpagus.net/blog/2016/04/16/pickling-cython-classes/\r\n\r\nSince Python is not going through the `__new__` function, I do not think the BB case shall work at all. But it could be just a bug in Cython that reported a wrong signature for __init__ to Python.",
            "created_at": "2018-12-12T22:48:41Z",
            "html_url": "https://github.com/cython/cython/issues/2757#issuecomment-446773712",
            "id": 446773712,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2757",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Njc3MzcxMg==",
            "updated_at": "2018-12-12T22:48:41Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/446773712",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/138060?v=4",
                "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
                "followers_url": "https://api.github.com/users/rainwoodman/followers",
                "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
                "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rainwoodman",
                "id": 138060,
                "login": "rainwoodman",
                "node_id": "MDQ6VXNlcjEzODA2MA==",
                "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
                "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
                "repos_url": "https://api.github.com/users/rainwoodman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rainwoodman"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2757/comments",
    "created_at": "2018-12-12T22:44:54Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2757/events",
    "html_url": "https://github.com/cython/cython/issues/2757",
    "id": 390441667,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2757/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzOTA0NDE2Njc=",
    "number": 2757,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "cdef classes fails at pickling using `__setstate__` interface in Python 2.",
    "updated_at": "2018-12-12T22:48:41Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2757",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/138060?v=4",
        "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
        "followers_url": "https://api.github.com/users/rainwoodman/followers",
        "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
        "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rainwoodman",
        "id": 138060,
        "login": "rainwoodman",
        "node_id": "MDQ6VXNlcjEzODA2MA==",
        "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
        "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
        "repos_url": "https://api.github.com/users/rainwoodman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rainwoodman"
    }
}