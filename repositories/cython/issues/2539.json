{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "From [enhancements buffer](https://github.com/cython/cython/wiki/enhancements-buffer):\r\n\r\n- `negative_indices` -- Boolean, defaults to True. If set to False, the buffer will not support the usual wrap-around for negative indices, i.e. all negative indices are out-of-bounds. This can make it more convenient to write code that is optimal when bounds-checking is turned off (i.e. no casting to unsigned ints is necesarry to get optimial access without any if-tests).\r\n\r\nIt seems like this argument is ignored if using a negative index to access a row of the array:\r\n\r\n```python\r\n# bufferstruct.pyx\r\n\r\nfrom cython cimport Py_ssize_t\r\nimport numpy as np\r\nfrom numpy cimport ndarray, float64_t, int64_t\r\ncimport numpy as cnp\r\ncnp.import_array()\r\n\r\ndef negind_read_one():\r\n    cdef ndarray[dtype=float64_t, ndim=2, negative_indices=False] arr\r\n    arr = np.arange(6, dtype=np.float64).reshape(2, 3)\r\n    return arr[-1]\r\n\r\ndef negind_read_both():\r\n    cdef ndarray[dtype=float64_t, ndim=2, negative_indices=False] arr\r\n    arr = np.arange(6, dtype=np.float64).reshape(2, 3)\r\n    return arr[-1, -1]\r\n\r\ndef negind_write():\r\n    cdef ndarray[dtype=float64_t, ndim=2, negative_indices=False] arr\r\n    arr = np.arange(6, dtype=np.float64).reshape(2, 3)\r\n    arr[-1, -1] = np.nan\r\n    return arr\r\n\r\ndef normal_write():\r\n    cdef ndarray[dtype=float64_t, ndim=2] arr\r\n    arr = np.arange(6, dtype=np.float64).reshape(2, 3)\r\n    arr[-1, -1] = np.nan\r\n    return arr\r\n```\r\n\r\nThat is, shouldn't `negind_read_one()` raise the same `IndexError` as the rest?\r\n\r\n```python\r\n>>> negind_read_one()\r\narray([3., 4., 5.])\r\n\r\n>>> negind_read_both()\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-4-1dbb30ed3ea9>\", line 1, in <module>\r\n    negind_read_both()\r\n  File \"bufferstruct.pyx\", line 17, in bufferstruct.negind_read_both\r\n    return arr[-1, -1]\r\nIndexError: Out of bounds on buffer access (axis 1)\r\n\r\n\r\n>>> negind_write()\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-5-36ef52623779>\", line 1, in <module>\r\n    negind_write()\r\n  File \"bufferstruct.pyx\", line 22, in bufferstruct.negind_write\r\n    arr[-1, -1] = np.nan\r\nIndexError: Out of bounds on buffer access (axis 1)\r\n\r\n\r\n>>> normal_write()\r\narray([[ 0.,  1.,  2.],\r\n       [ 3.,  4., nan]])\r\n```\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2539/comments",
    "created_at": "2018-08-08T02:57:52Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2539/events",
    "html_url": "https://github.com/cython/cython/issues/2539",
    "id": 348556980,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2539/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNDg1NTY5ODA=",
    "number": 2539,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "negative_indices=False seems to be ignored in some cases",
    "updated_at": "2018-08-08T02:57:52Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2539",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/25164676?v=4",
        "events_url": "https://api.github.com/users/bsolomon1124/events{/privacy}",
        "followers_url": "https://api.github.com/users/bsolomon1124/followers",
        "following_url": "https://api.github.com/users/bsolomon1124/following{/other_user}",
        "gists_url": "https://api.github.com/users/bsolomon1124/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bsolomon1124",
        "id": 25164676,
        "login": "bsolomon1124",
        "node_id": "MDQ6VXNlcjI1MTY0Njc2",
        "organizations_url": "https://api.github.com/users/bsolomon1124/orgs",
        "received_events_url": "https://api.github.com/users/bsolomon1124/received_events",
        "repos_url": "https://api.github.com/users/bsolomon1124/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bsolomon1124/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bsolomon1124/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bsolomon1124"
    }
}