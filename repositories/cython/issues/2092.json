{
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Test code:\r\n\r\ntest_run.py\r\n```python\r\nfrom test import test\r\n\r\nif __name__ == '__main__':\r\n    test()\r\n```\r\n\r\ntest.py\r\n```python\r\n# coding: utf-8\r\nimport asyncio\r\nimport inspect\r\nimport logging\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\n\r\nasync def async_func():\r\n    await asyncio.sleep(1)\r\n\r\n\r\ndef test():\r\n    logging.info(f' inspect.iscoroutinefunction='\r\n                 f'{inspect.iscoroutinefunction(async_func)}')\r\n\r\n    logging.info(f' asyncio.coroutines.iscoroutinefunction='\r\n                 f'{asyncio.coroutines.iscoroutinefunction(async_func)}')\r\n```\r\n\r\nrun:\r\n```\r\n$ /usr/local/lib/python3.6.3/bin/python3 ./test_run.py\r\nINFO:root: inspect.iscoroutinefunction=True\r\nINFO:root: asyncio.coroutines.iscoroutinefunction=True\r\n$ /usr/local/lib/python3.6.3/bin/cython -3 -X always_allow_keywords=True -D ./test.py\r\n$ /usr/local/bin/gcc -shared -pthread -pipe -fPIC -fwrapv -Wall -fno-strict-aliasing -O2 -I/usr/local/lib/python3.6.3/include/python3.6m -o ./test.so ./test.c\r\n$ /usr/local/lib/python3.6.3/bin/python3 ./test_run.py                                                                                                        \r\nINFO:root: inspect.iscoroutinefunction=False\r\nINFO:root: asyncio.coroutines.iscoroutinefunction=False\r\n$ rm ./test.so \r\n$ /usr/local/lib/python3.6.3/bin/python3 ./test_run.py \r\nINFO:root: inspect.iscoroutinefunction=True\r\nINFO:root: asyncio.coroutines.iscoroutinefunction=True\r\n```\r\n\r\nWhat I am doing wrong? Thanks\r\n\r\n```\r\n$ /usr/local/lib/python3.6.3/bin/cython --version                                                                                                             \r\nCython version 0.28a0\r\n```\r\n",
    "closed_at": "2018-02-10T22:34:21Z",
    "comment_data": [
        {
            "author_association": "OWNER",
            "body": "That's correct, yes. Cython compiled coroutines do not have byte code, and they are not Python generators. They implement the same protocol, but they are technically not the same thing (in the same way that a list iterator is not a dict iterator, even though both are iterators).\r\n\r\nThe `inspect` module should definitely return `False`. Whether the `asyncio` module should also return `False` is debatable. It could be argued that that's a bug in `asyncio`, but deciding that would require a deep look into the internals of `asyncio` to figure out the exact semantics that is intended there. Please reopen if you have reason to believe that Cython should do something about this, rather than fixing it in asyncio.",
            "created_at": "2018-02-10T22:34:21Z",
            "html_url": "https://github.com/cython/cython/issues/2092#issuecomment-364701257",
            "id": 364701257,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2092",
            "updated_at": "2018-02-10T22:34:21Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/364701257",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2092/comments",
    "created_at": "2018-02-05T10:59:48Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2018-02-10T22:34:21Z",
            "event": "closed",
            "id": 1468201857,
            "url": "https://api.github.com/repos/cython/cython/issues/events/1468201857"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2092/events",
    "html_url": "https://github.com/cython/cython/issues/2092",
    "id": 294352133,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2092/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 2092,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "iscoroutine returns False for native coroutines in python 3.5+",
    "updated_at": "2018-02-10T22:34:21Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2092",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1058344?v=4",
        "events_url": "https://api.github.com/users/ramonz/events{/privacy}",
        "followers_url": "https://api.github.com/users/ramonz/followers",
        "following_url": "https://api.github.com/users/ramonz/following{/other_user}",
        "gists_url": "https://api.github.com/users/ramonz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ramonz",
        "id": 1058344,
        "login": "ramonz",
        "organizations_url": "https://api.github.com/users/ramonz/orgs",
        "received_events_url": "https://api.github.com/users/ramonz/received_events",
        "repos_url": "https://api.github.com/users/ramonz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ramonz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ramonz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ramonz"
    }
}