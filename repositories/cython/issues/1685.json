{
    "assignee": null,
    "assignees": [],
    "body": "On macOS 10.12.4, Cython 0.25.2, Python 3.6.1, if you await asyncio.sleep() <= Cython <= Python chain, it will segfault. It won't die if you await Cython future right away, without first using Python.\r\n\r\nHere is an example that reproduces this bug:\r\n\r\nmain.py:\r\n```\r\nWANT_CRASH = True\r\n\r\nimport asyncio\r\nimport cy_test\r\n\r\nasync def main():\r\n    await cy_test.say()\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\nif WANT_CRASH:\r\n    loop.run_until_complete(main())\r\nelse:\r\n    loop.run_until_complete(cy_test.say())\r\n\r\nloop.close()\r\n```\r\n\r\ncy_test.pyx:\r\n```\r\nimport asyncio\r\nfrom py_test import py_async\r\n\r\nasync def cy_async():\r\n    print(\"- this one is from Cython\")\r\n\r\nasync def say():\r\n    await cb()\r\n\r\nasync def cb(): # renaming this to \"say\" would prevent crash\r\n    print(\"Async functions can be awaited without problem:\")\r\n    await cy_async()\r\n    await py_async()\r\n    print(\"And this will actually sleep for 3 seconds before crashing\")\r\n    await asyncio.sleep(3)\r\n    print(\"I will be never output, because app has crashed already\")\r\n```\r\n\r\npy_test.pyx:\r\n```\r\nasync def py_async():\r\n    print(\"- and this one is from Python\")\r\n```\r\n\r\nSetup.py:\r\n```\r\nfrom distutils.core import setup\r\nfrom distutils.extension import Extension\r\nfrom Cython.Build import cythonize\r\n\r\nsetup(\r\n    name='asyncio_cb',\r\n    ext_modules=cythonize([\r\n        Extension(\"cy_test\", [\"cy_test.pyx\"]),\r\n    ]),\r\n)\r\n```\r\n\r\nMakefile:\r\n```\r\nall:\r\n\tpython3 Setup.py build_ext --inplace\r\n\r\ntest:\tall\r\n\tpython3 main.py\r\n\r\nclean:\r\n\t@echo Cleaning Demos/callback\r\n\t@rm -f cy_*.c *.o *.so *~ core\r\n\t@rm -rf build\r\n```\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1685/comments",
    "created_at": "2017-04-25T19:51:15Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1685/events",
    "html_url": "https://github.com/cython/cython/issues/1685",
    "id": 224252540,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1685/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1685,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "segfault with asyncio",
    "updated_at": "2017-04-25T19:53:15Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1685",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14891625?v=3",
        "events_url": "https://api.github.com/users/toriningen/events{/privacy}",
        "followers_url": "https://api.github.com/users/toriningen/followers",
        "following_url": "https://api.github.com/users/toriningen/following{/other_user}",
        "gists_url": "https://api.github.com/users/toriningen/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/toriningen",
        "id": 14891625,
        "login": "toriningen",
        "organizations_url": "https://api.github.com/users/toriningen/orgs",
        "received_events_url": "https://api.github.com/users/toriningen/received_events",
        "repos_url": "https://api.github.com/users/toriningen/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/toriningen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/toriningen/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/toriningen"
    }
}