{
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "```\r\ncdef class X:\r\n    def callmeth(self):\r\n        return self.meth()\r\n    cpdef meth(self):\r\n        print(\"X.meth\")\r\n\r\nclass Y(X):\r\n    def meth(self):\r\n        print(\"Y.meth\")\r\n\r\nclass Z(X):\r\n    __slots__ = []\r\n    def meth(self):\r\n        print(\"Z.meth\")\r\n\r\nResult:\r\n\r\n>>> X().callmeth()\r\nX.meth\r\n>>> Y().callmeth()\r\nY.meth\r\n>>> Z().callmeth()\r\nX.meth\r\n```\r\n\r\nGiven that the method cannot be overridden at the type level, we could probably still make this call cheaper than a cpdef method on a class with a `__dict__`.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "What is Cython's plan here? It would be good to clarify how you expect `cpdef` methods to work.\r\n\r\nPersonally, I would be happy with accepting and documenting the current behaviour: simply accept that a `__dict__` is required to override `cpdef` methods.",
            "created_at": "2017-12-07T15:35:00Z",
            "html_url": "https://github.com/cython/cython/issues/1771#issuecomment-350003012",
            "id": 350003012,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1771",
            "updated_at": "2017-12-07T15:35:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/350003012",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "author_association": "OWNER",
            "body": "Ideally we could patch things in at type creation.\n\nOn Thu, Dec 7, 2017 at 7:35 AM, jdemeyer <notifications@github.com> wrote:\n\n> What is Cython's plan here? It would be good to clarify how you expect\n> cpdef methods to work.\n>\n> Personally, I would be happy with accepting and documenting the current\n> behaviour: simply accept that a __dict__ is required to override cpdef\n> methods.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cython/cython/issues/1771#issuecomment-350003012>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAdqgbViGswixCrChfjpMlSjOLk8HGO-ks5s-AWmgaJpZM4OYZHJ>\n> .\n>\n",
            "created_at": "2017-12-08T07:15:00Z",
            "html_url": "https://github.com/cython/cython/issues/1771#issuecomment-350191118",
            "id": 350191118,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1771",
            "updated_at": "2017-12-08T07:15:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/350191118",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Ideally we could patch things in at type creation.\r\n\r\nSounds like a great idea in theory, but you need either a metaclass or PEP 487 to actually do that. Or am I missing something...",
            "created_at": "2017-12-08T09:35:36Z",
            "html_url": "https://github.com/cython/cython/issues/1771#issuecomment-350217954",
            "id": 350217954,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1771",
            "updated_at": "2017-12-08T09:35:36Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/350217954",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I would really like for Cython to make at least a plan here. It this is a bug that you don't intend to fix, you might as well say that it's a feature.\r\n\r\nThe reason that I'm asking is that people might start to rely on the current behaviour. This will be especially true in the next release because of #2033: the multiple inheritance feature implicitly encourages people to create Python classes with `__slots__` (so without a `__dict__`).",
            "created_at": "2018-02-18T09:55:59Z",
            "html_url": "https://github.com/cython/cython/issues/1771#issuecomment-366504520",
            "id": 366504520,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1771",
            "updated_at": "2018-02-18T09:55:59Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/366504520",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/3625785?v=4",
                "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdemeyer/followers",
                "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdemeyer",
                "id": 3625785,
                "login": "jdemeyer",
                "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
                "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
                "repos_url": "https://api.github.com/users/jdemeyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdemeyer"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1771/comments",
    "created_at": "2017-07-14T15:27:09Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1771/events",
    "html_url": "https://github.com/cython/cython/issues/1771",
    "id": 243030287,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1771/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1771,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "Overriding of cpdef function doesn't work with __slots__",
    "updated_at": "2018-02-18T09:56:00Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1771",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/486017?v=4",
        "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
        "followers_url": "https://api.github.com/users/robertwb/followers",
        "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
        "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/robertwb",
        "id": 486017,
        "login": "robertwb",
        "organizations_url": "https://api.github.com/users/robertwb/orgs",
        "received_events_url": "https://api.github.com/users/robertwb/received_events",
        "repos_url": "https://api.github.com/users/robertwb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/robertwb"
    }
}