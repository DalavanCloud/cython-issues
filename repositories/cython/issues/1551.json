{
    "assignee": null,
    "assignees": [],
    "body": "In my [xraylib](https://github.com/tschoonj/xraylib) project, I recently noticed that importing the Cython generated bindings leads to a `SystemError`, provided they have been compiled with clang and with python3 support:\r\n\r\n````\r\nTraceback (most recent call last):\r\n  File \"../../example/xrlexample13.py\", line 14, in <module>\r\n    import xraylib_np as xrl_np\r\nSystemError: initialization of xraylib_np failed without raising an exception\r\n````\r\n\r\nAs soon as I switch to gcc, everything works as expected, as does the combination clang + python2.\r\n\r\nSo far, I have only tested this on macOS (with Homebrew's python3, and pip3 installed Cython 0.25.2), with at least two different clang versions (system and Homebrew provided), but it's possible this problem also occurs on other OS's.\r\n\r\nThe C code was generated with the options `-X boundscheck=False,wraparound=False` and was compiled into a library with libtool: \r\n\r\n````\r\n/bin/sh ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../python -I..    -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I../../include -I/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/include/python3.5m -I/usr/local/lib/python3.5/site-packages/numpy/core/include -g -O2 -MT xraylib_np_la-xraylib_np.lo -MD -MP -MF .deps/xraylib_np_la-xraylib_np.Tpo -c -o xraylib_np_la-xraylib_np.lo `test -f 'xraylib_np.c' || echo '../../python/'`xraylib_np.c\r\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../python -I.. -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I../../include -I/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/include/python3.5m -I/usr/local/lib/python3.5/site-packages/numpy/core/include -g -O2 -MT xraylib_np_la-xraylib_np.lo -MD -MP -MF .deps/xraylib_np_la-xraylib_np.Tpo -c xraylib_np.c  -fno-common -DPIC -o .libs/xraylib_np_la-xraylib_np.o\r\nIn file included from xraylib_np.c:436:\r\nIn file included from /usr/local/lib/python3.5/site-packages/numpy/core/include/numpy/arrayobject.h:4:\r\nIn file included from /usr/local/lib/python3.5/site-packages/numpy/core/include/numpy/ndarrayobject.h:18:\r\nIn file included from /usr/local/lib/python3.5/site-packages/numpy/core/include/numpy/ndarraytypes.h:1777:\r\n/usr/local/lib/python3.5/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: \"Using deprecated NumPy API, disable it by \" \"#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION\"\r\n      [-W#warnings]\r\n#warning \"Using deprecated NumPy API, disable it by \" \\\r\n ^\r\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../python -I.. -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I../../include -I/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/include/python3.5m -I/usr/local/lib/python3.5/site-packages/numpy/core/include -g -O2 -MT xraylib_np_la-xraylib_np.lo -MD -MP -MF .deps/xraylib_np_la-xraylib_np.Tpo -c xraylib_np.c -o xraylib_np_la-xraylib_np.o >/dev/null 2>&1\r\nmv -f .deps/xraylib_np_la-xraylib_np.Tpo .deps/xraylib_np_la-xraylib_np.Plo\r\n/bin/sh ../libtool  --tag=CC   --mode=link gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I../../include -I/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/include/python3.5m -I/usr/local/lib/python3.5/site-packages/numpy/core/include -g -O2 -avoid-version -module -shared -export-dynamic  -o xraylib_np.la -rpath /usr/local/lib/python3.5/site-packages xraylib_np_la-xraylib_np.lo ../src/libxrl.la -lm -lm -lm -lm \r\nlibtool: link: gcc -Wl,-undefined -Wl,dynamic_lookup -o .libs/xraylib_np.so -bundle  .libs/xraylib_np_la-xraylib_np.o   ../src/.libs/libxrl.dylib -lm  -g -O3 -g -O2  \r\nlibtool: link: ( cd \".libs\" && rm -f \"xraylib_np.la\" && ln -s \"../xraylib_np.la\" \"xraylib_np.la\" )\r\n````\r\n\r\nThe Cython generated source code can be found [here](https://gist.github.com/tschoonj/888cb289c80c4ce53027a18ea5c12ca6)\r\n\r\nLet me know if more information is required.\r\n\r\nThanks for looking into this.\r\n\r\nTom\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "body": "Could you try bisecting this down to a minimal example?",
            "created_at": "2016-12-13T08:37:07Z",
            "html_url": "https://github.com/cython/cython/issues/1551#issuecomment-266678101",
            "id": 266678101,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1551",
            "updated_at": "2016-12-13T08:37:07Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/266678101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "I investigated the issue a bit further and it looks like an optimization bug in clang, as it disappears when compiling with `-O0`.\r\n\r\nIt somehow has to do with the very large number of global variable assignments I make [here](https://github.com/tschoonj/xraylib/blob/xraylib-3.2.0/python/xraylib_np.pyx#L18-L1494)\r\nAs soon as the total number of assignments exceeds 783, the error shows up at runtime, regardless of what the 784th assignment is ðŸ˜© \r\n\r\nOf course the weird thing is that all of this works fine, at all optimization levels, when using (Homebrew's) python 2.7...",
            "created_at": "2016-12-13T10:43:39Z",
            "html_url": "https://github.com/cython/cython/issues/1551#issuecomment-266705888",
            "id": 266705888,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1551",
            "updated_at": "2016-12-13T10:43:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/266705888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65736?v=3",
                "events_url": "https://api.github.com/users/tschoonj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tschoonj/followers",
                "following_url": "https://api.github.com/users/tschoonj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tschoonj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tschoonj",
                "id": 65736,
                "login": "tschoonj",
                "organizations_url": "https://api.github.com/users/tschoonj/orgs",
                "received_events_url": "https://api.github.com/users/tschoonj/received_events",
                "repos_url": "https://api.github.com/users/tschoonj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tschoonj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tschoonj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tschoonj"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1551/comments",
    "created_at": "2016-12-12T12:00:23Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1551/events",
    "html_url": "https://github.com/cython/cython/issues/1551",
    "id": 194957271,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1551/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1551,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "macOS + python3 + clang: SystemError raised during initialization",
    "updated_at": "2016-12-13T10:43:39Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1551",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/65736?v=3",
        "events_url": "https://api.github.com/users/tschoonj/events{/privacy}",
        "followers_url": "https://api.github.com/users/tschoonj/followers",
        "following_url": "https://api.github.com/users/tschoonj/following{/other_user}",
        "gists_url": "https://api.github.com/users/tschoonj/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tschoonj",
        "id": 65736,
        "login": "tschoonj",
        "organizations_url": "https://api.github.com/users/tschoonj/orgs",
        "received_events_url": "https://api.github.com/users/tschoonj/received_events",
        "repos_url": "https://api.github.com/users/tschoonj/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tschoonj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tschoonj/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tschoonj"
    }
}