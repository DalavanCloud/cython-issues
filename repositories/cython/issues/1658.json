{
    "assignee": null,
    "assignees": [],
    "body": "Consider `test.pxd`:\r\n```cython\r\ncimport cython\r\n\r\n@cython.binding(True)\r\ncpdef inline bint fun():\r\n    return 1\r\n```\r\nand `test.pyx`:\r\n```cython\r\nx = repr(fun)   # Or anything else accessing \"fun\"\r\n```\r\n\r\nThis compiles but fails at runtime with a `NameError` saying that `fun` is not defined. The reason is that Cython generates code for `x = repr(fun)` **before** the code which assigns `fun` in the module global dict:\r\n```C\r\n  /* \"test.pyx\":1\r\n * x = repr(fun)             # <<<<<<<<<<<<<<\r\n */\r\n  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_fun); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_1);\r\n  __pyx_t_2 = PyObject_Repr(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_2);\r\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\r\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_x, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)\r\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)\r\n  __Pyx_GOTREF(__pyx_t_2);\r\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)\r\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n\r\n  /* \"test.pxd\":4\r\n * \r\n * @cython.binding(True)\r\n * cpdef inline bint fun():             # <<<<<<<<<<<<<<\r\n *     return 1\r\n */\r\n  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_4test_1fun, 0, __pyx_n_s_fun, NULL, __pyx_n_s_test_2, __pyx_d, ((PyObject *)__pyx_codeobj_)); if (unlikely(!__pyx_t_2))\r\n  __Pyx_GOTREF(__pyx_t_2);\r\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fun, __pyx_t_2) < 0) __PYX_ERR(0, 4, __pyx_L1_error)\r\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\r\n```\r\n\r\nThe problem does not occur when everything is in one `.pyx` file.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1658/comments",
    "created_at": "2017-04-03T13:23:49Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1658/events",
    "html_url": "https://github.com/cython/cython/issues/1658",
    "id": 218931767,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1658/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1658,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "binding=True in .pxd generates global too late",
    "updated_at": "2017-04-03T13:23:49Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1658",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/3625785?v=3",
        "events_url": "https://api.github.com/users/jdemeyer/events{/privacy}",
        "followers_url": "https://api.github.com/users/jdemeyer/followers",
        "following_url": "https://api.github.com/users/jdemeyer/following{/other_user}",
        "gists_url": "https://api.github.com/users/jdemeyer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jdemeyer",
        "id": 3625785,
        "login": "jdemeyer",
        "organizations_url": "https://api.github.com/users/jdemeyer/orgs",
        "received_events_url": "https://api.github.com/users/jdemeyer/received_events",
        "repos_url": "https://api.github.com/users/jdemeyer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jdemeyer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jdemeyer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jdemeyer"
    }
}