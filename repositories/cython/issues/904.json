{
    "assignee": null,
    "assignees": [],
    "body": "Especially if we want to introduce templates, the scheme below should be used to resolve a syntax ambiguity. This holds whether [or () is selected:\n\n * A[B](]) can (in type context) mean either a C array of size B, or a template with B as argument if [is chosen.\n * A(B) can (in type context) mean either an unnamed C function returning type A and taking an argument of type B (yes, really!), or a template with B as argument if () is chosen.\n\nBoth of these are only a problem where the declarator name can be dropped though, i.e. inside sizeof or for ```cdef extern``` function arguments.\n\nExtract from conversation from Dag to Kurt:\n\nSomeName[OtherName](]) is actually *not* ambiguous, it's just that it is ambiguous in the parser! Later on, SomeName can be resolved, and it will be known whether SomeName is a Cython type (=>buffer) or a struct/typedef/C type (=> C array without name).\n\nSo:\n\na) Forget about deciding this at parse time. Instead parse to a much rawer \"BracketTypeNode\" (containing base_type and axes), and leave the decision until Cython's declaration analysis phase (where the base_type can be analysed before axes, so base_type will tell what needs to be done with axes).\n\nb) However, this requires that the axes are also parsed without making too many assumptions -- which is potentially hard. Basically this calls for an additional method (in addition) to p_expr and p_c_declarator, which basically parses something which can be \"either an expression or declarator\". I.e. p_expr_or_c_declarator (with only the empty=True case for p_c_declarator).\n\nNow:\n - Some things must be type declarations -- like \"a*\", \"(a*)()\", \"unsigned int\".\n - Some things must be expressions -- like \"a+b\", \"a::b\" etc.\n - Some things are ambiguous:\n    - \"somename\" can of course be either\n    - \"a(b)\" can either be a function call, or a declaration like this:\n```\n# takes a function returning a and taking b as argument:\ncdef extern foo(a(b))\n# If giving the argument a name, it is written like this:\ncdef extern foo(a(argname)(b))\n# wierd stuff...\n```\nSo the strategy would be to have p_expr_or_c_declarator return a parse tree which was \"unresolved\" (like, ExprOrTypeNode). And then one could afterwards call either analyse_as_expr or analyse_as_type on the tree (when one knew what to expect). If the tree then e.g. contained something which could only be interpreted as an expression, and one called analyse_as_type, an error would be raised at that point.\n\nThis seems like a quite big task which I'm unsure about spending time on. But the result is much more \"correct\", in that the parser doesn't make decisions it really can't do. Also it helps moving logic out of the parser in general. What do you think?\n\nMigrated from http://trac.cython.org/ticket/342",
    "closed_at": "2010-02-04T06:47:42Z",
    "comment_data": [
        {
            "body": "@dagss changed **description** from\n\nEspecially if we want to introduce templates, the scheme below should be used to resolve a syntax ambiguity. This holds whether [or () is selected:\n\n * A[B](]) can (in type context) mean either a C array of size B, or a template with B as argument if [is chosen.\n * A(B) can (in type context) mean either an unnamed C function returning type A and taking an argument of type B (yes, really!), or a template with B as argument if () is chosen.\n\nBoth of these are only a problem where the declarator name can be dropped though, i.e. inside sizeof or for ```cdef extern``` function arguments.\n\nExtract from conversation from Dag to Kurt:\n```\n\nSomeName[OtherName](]) is actually *not* ambiguous, it's just that it is ambiguous in the parser! Later on, SomeName can be resolved, and it will be known whether SomeName is a Cython type (=>buffer) or a struct/typedef/C type (=> C array without name).\n\nSo:\n\na) Forget about deciding this at parse time. Instead parse to a much rawer \"BracketTypeNode\" (containing base_type and axes), and leave the decision until Cython's declaration analysis phase (where the base_type can be analysed before axes, so base_type will tell what needs to be done with axes).\n\nb) However, this requires that the axes are also parsed without making too many assumptions -- which is potentially hard. Basically this calls for an additional method (in addition) to p_expr and p_c_declarator, which basically parses something which can be \"either an expression or declarator\". I.e. p_expr_or_c_declarator (with only the empty=True case for p_c_declarator).\n\nNow:\n - Some things must be type declarations -- like \"a*\", \"(a*)()\", \"unsigned int\".\n - Some things must be expressions -- like \"a+b\", \"a::b\", \"d()\" (?) etc.\n - Some things are ambiguous:\n    - \"somename\" can of course be either\n    - \"a(b)\" can either be a function call, or a declaration like this:\n\n# takes a function returning a and taking b as argument:\ncdef extern foo(a(b))\n# If giving the argument a name, it is written like this:\ncdef extern foo(a(argname)(b))\n# wierd stuff...\n\nSo the strategy would be to have p_expr_or_c_declarator return a parse tree which was \"unresolved\" (like, ExprOrTypeNode). And then one could afterwards call either analyse_as_expr or analyse_as_type on the tree (when one knew what to expect). If the tree then e.g. contained something which could only be interpreted as an expression, and one called analyse_as_type, an error would be raised at that point.\n\nThis seems like a quite big task which I'm unsure about spending time on. But the result is much more \"correct\", in that the parser doesn't make decisions it really can't do. Also it helps moving logic out of the parser in general. What do you think?\n```\n\nto\n\nEspecially if we want to introduce templates, the scheme below should be used to resolve a syntax ambiguity. This holds whether [or () is selected:\n\n * A[B](]) can (in type context) mean either a C array of size B, or a template with B as argument if [is chosen.\n * A(B) can (in type context) mean either an unnamed C function returning type A and taking an argument of type B (yes, really!), or a template with B as argument if () is chosen.\n\nBoth of these are only a problem where the declarator name can be dropped though, i.e. inside sizeof or for ```cdef extern``` function arguments.\n\nExtract from conversation from Dag to Kurt:\n\nSomeName[OtherName](]) is actually *not* ambiguous, it's just that it is ambiguous in the parser! Later on, SomeName can be resolved, and it will be known whether SomeName is a Cython type (=>buffer) or a struct/typedef/C type (=> C array without name).\n\nSo:\n\na) Forget about deciding this at parse time. Instead parse to a much rawer \"BracketTypeNode\" (containing base_type and axes), and leave the decision until Cython's declaration analysis phase (where the base_type can be analysed before axes, so base_type will tell what needs to be done with axes).\n\nb) However, this requires that the axes are also parsed without making too many assumptions -- which is potentially hard. Basically this calls for an additional method (in addition) to p_expr and p_c_declarator, which basically parses something which can be \"either an expression or declarator\". I.e. p_expr_or_c_declarator (with only the empty=True case for p_c_declarator).\n\nNow:\n - Some things must be type declarations -- like \"a*\", \"(a*)()\", \"unsigned int\".\n - Some things must be expressions -- like \"a+b\", \"a::b\", \"d()\" (?) etc.\n - Some things are ambiguous:\n    - \"somename\" can of course be either\n    - \"a(b)\" can either be a function call, or a declaration like this:\n```\n# takes a function returning a and taking b as argument:\ncdef extern foo(a(b))\n# If giving the argument a name, it is written like this:\ncdef extern foo(a(argname)(b))\n# wierd stuff...\n```}\nSo the strategy would be to have p_expr_or_c_declarator return a parse tree which was \"unresolved\" (like, ExprOrTypeNode). And then one could afterwards call either analyse_as_expr or analyse_as_type on the tree (when one knew what to expect). If the tree then e.g. contained something which could only be interpreted as an expression, and one called analyse_as_type, an error would be raised at that point.\n\nThis seems like a quite big task which I'm unsure about spending time on. But the result is much more \"correct\", in that the parser doesn't make decisions it really can't do. Also it helps moving logic out of the parser in general. What do you think?\ncommented",
            "created_at": "2009-06-30T08:02:43Z",
            "html_url": "https://github.com/cython/cython/issues/904#issuecomment-240044799",
            "id": 240044799,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/904",
            "updated_at": "2016-08-16T09:00:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044799",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "@dagss changed **description** from\n\nEspecially if we want to introduce templates, the scheme below should be used to resolve a syntax ambiguity. This holds whether [or () is selected:\n\n * A[B](]) can (in type context) mean either a C array of size B, or a template with B as argument if [is chosen.\n * A(B) can (in type context) mean either an unnamed C function returning type A and taking an argument of type B (yes, really!), or a template with B as argument if () is chosen.\n\nBoth of these are only a problem where the declarator name can be dropped though, i.e. inside sizeof or for ```cdef extern``` function arguments.\n\nExtract from conversation from Dag to Kurt:\n\nSomeName[OtherName](]) is actually *not* ambiguous, it's just that it is ambiguous in the parser! Later on, SomeName can be resolved, and it will be known whether SomeName is a Cython type (=>buffer) or a struct/typedef/C type (=> C array without name).\n\nSo:\n\na) Forget about deciding this at parse time. Instead parse to a much rawer \"BracketTypeNode\" (containing base_type and axes), and leave the decision until Cython's declaration analysis phase (where the base_type can be analysed before axes, so base_type will tell what needs to be done with axes).\n\nb) However, this requires that the axes are also parsed without making too many assumptions -- which is potentially hard. Basically this calls for an additional method (in addition) to p_expr and p_c_declarator, which basically parses something which can be \"either an expression or declarator\". I.e. p_expr_or_c_declarator (with only the empty=True case for p_c_declarator).\n\nNow:\n - Some things must be type declarations -- like \"a*\", \"(a*)()\", \"unsigned int\".\n - Some things must be expressions -- like \"a+b\", \"a::b\", \"d()\" (?) etc.\n - Some things are ambiguous:\n    - \"somename\" can of course be either\n    - \"a(b)\" can either be a function call, or a declaration like this:\n```\n# takes a function returning a and taking b as argument:\ncdef extern foo(a(b))\n# If giving the argument a name, it is written like this:\ncdef extern foo(a(argname)(b))\n# wierd stuff...\n```}\nSo the strategy would be to have p_expr_or_c_declarator return a parse tree which was \"unresolved\" (like, ExprOrTypeNode). And then one could afterwards call either analyse_as_expr or analyse_as_type on the tree (when one knew what to expect). If the tree then e.g. contained something which could only be interpreted as an expression, and one called analyse_as_type, an error would be raised at that point.\n\nThis seems like a quite big task which I'm unsure about spending time on. But the result is much more \"correct\", in that the parser doesn't make decisions it really can't do. Also it helps moving logic out of the parser in general. What do you think?\n\n\nto\n\nEspecially if we want to introduce templates, the scheme below should be used to resolve a syntax ambiguity. This holds whether [or () is selected:\n\n * A[B](]) can (in type context) mean either a C array of size B, or a template with B as argument if [is chosen.\n * A(B) can (in type context) mean either an unnamed C function returning type A and taking an argument of type B (yes, really!), or a template with B as argument if () is chosen.\n\nBoth of these are only a problem where the declarator name can be dropped though, i.e. inside sizeof or for ```cdef extern``` function arguments.\n\nExtract from conversation from Dag to Kurt:\n\nSomeName[OtherName](]) is actually *not* ambiguous, it's just that it is ambiguous in the parser! Later on, SomeName can be resolved, and it will be known whether SomeName is a Cython type (=>buffer) or a struct/typedef/C type (=> C array without name).\n\nSo:\n\na) Forget about deciding this at parse time. Instead parse to a much rawer \"BracketTypeNode\" (containing base_type and axes), and leave the decision until Cython's declaration analysis phase (where the base_type can be analysed before axes, so base_type will tell what needs to be done with axes).\n\nb) However, this requires that the axes are also parsed without making too many assumptions -- which is potentially hard. Basically this calls for an additional method (in addition) to p_expr and p_c_declarator, which basically parses something which can be \"either an expression or declarator\". I.e. p_expr_or_c_declarator (with only the empty=True case for p_c_declarator).\n\nNow:\n - Some things must be type declarations -- like \"a*\", \"(a*)()\", \"unsigned int\".\n - Some things must be expressions -- like \"a+b\", \"a::b\" etc.\n - Some things are ambiguous:\n    - \"somename\" can of course be either\n    - \"a(b)\" can either be a function call, or a declaration like this:\n```\n# takes a function returning a and taking b as argument:\ncdef extern foo(a(b))\n# If giving the argument a name, it is written like this:\ncdef extern foo(a(argname)(b))\n# wierd stuff...\n```\nSo the strategy would be to have p_expr_or_c_declarator return a parse tree which was \"unresolved\" (like, ExprOrTypeNode). And then one could afterwards call either analyse_as_expr or analyse_as_type on the tree (when one knew what to expect). If the tree then e.g. contained something which could only be interpreted as an expression, and one called analyse_as_type, an error would be raised at that point.\n\nThis seems like a quite big task which I'm unsure about spending time on. But the result is much more \"correct\", in that the parser doesn't make decisions it really can't do. Also it helps moving logic out of the parser in general. What do you think?\ncommented",
            "created_at": "2009-06-30T08:03:54Z",
            "html_url": "https://github.com/cython/cython/issues/904#issuecomment-240044800",
            "id": 240044800,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/904",
            "updated_at": "2016-08-16T09:00:00Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044800",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "**scoder** commented\n\nWhy a new node type? Isn't ```IndexNode``` enough to deal with this in the parser? There would then be a transform after (early?) type analysis that would replace it with the right implementation node depending on the object it operates on.",
            "created_at": "2009-07-02T05:09:29Z",
            "html_url": "https://github.com/cython/cython/issues/904#issuecomment-240044802",
            "id": 240044802,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/904",
            "updated_at": "2016-08-16T09:00:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044802",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "@dagss commented\n\nIndexNode is in an expression context, this is in type context. While technically possible, IndexNode inherits from ExprNode, which BracketTypeNode definitely wouldn't.",
            "created_at": "2009-07-05T14:10:07Z",
            "html_url": "https://github.com/cython/cython/issues/904#issuecomment-240044803",
            "id": 240044803,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/904",
            "updated_at": "2016-08-16T09:00:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "@robertwb changed **component** from `Parsing` to `C++`\n**milestone** from `wishlist` to `0.13`\n**owner** from `somebody` to `robertwb`\ncommented",
            "created_at": "2010-02-04T06:46:49Z",
            "html_url": "https://github.com/cython/cython/issues/904#issuecomment-240044806",
            "id": 240044806,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/904",
            "updated_at": "2016-08-16T09:00:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044806",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "@robertwb changed **resolution** to `fixed`\n**status** from `new` to `closed`\ncommented\n\nI believe I resolved this when I wrote support for declaring templated C++ types. ",
            "created_at": "2010-02-04T06:47:42Z",
            "html_url": "https://github.com/cython/cython/issues/904#issuecomment-240044807",
            "id": 240044807,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/904",
            "updated_at": "2016-08-16T09:00:01Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/240044807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/904/comments",
    "created_at": "2009-06-30T08:01:53Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:00Z",
            "event": "labeled",
            "id": 756748665,
            "label": {
                "color": "f9d0c4",
                "name": "C++"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748665"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:00Z",
            "event": "labeled",
            "id": 756748666,
            "label": {
                "color": "444444",
                "name": "defect"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748666"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:00Z",
            "event": "milestoned",
            "id": 756748668,
            "milestone": {
                "title": "0.13"
            },
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748668"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2010-02-04T06:47:42Z",
            "event": "closed",
            "id": 756748672,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748672"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:00Z",
            "event": "mentioned",
            "id": 756748676,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748676"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:00Z",
            "event": "subscribed",
            "id": 756748677,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748677"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:00Z",
            "event": "mentioned",
            "id": 756748681,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748681"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:00Z",
            "event": "subscribed",
            "id": 756748682,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748682"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:01Z",
            "event": "mentioned",
            "id": 756748688,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748688"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/118410?v=3",
                "events_url": "https://api.github.com/users/dagss/events{/privacy}",
                "followers_url": "https://api.github.com/users/dagss/followers",
                "following_url": "https://api.github.com/users/dagss/following{/other_user}",
                "gists_url": "https://api.github.com/users/dagss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dagss",
                "id": 118410,
                "login": "dagss",
                "organizations_url": "https://api.github.com/users/dagss/orgs",
                "received_events_url": "https://api.github.com/users/dagss/received_events",
                "repos_url": "https://api.github.com/users/dagss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dagss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dagss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dagss"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:01Z",
            "event": "subscribed",
            "id": 756748690,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748690"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:01Z",
            "event": "mentioned",
            "id": 756748698,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748698"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:01Z",
            "event": "subscribed",
            "id": 756748699,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748699"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:01Z",
            "event": "mentioned",
            "id": 756748700,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748700"
        },
        {
            "actor": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2016-08-16T09:00:01Z",
            "event": "subscribed",
            "id": 756748701,
            "url": "https://api.github.com/repos/cython/cython/issues/events/756748701"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/904/events",
    "html_url": "https://github.com/cython/cython/issues/904",
    "id": 171358482,
    "labels": [
        {
            "color": "f9d0c4",
            "name": "C++",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "444444",
            "name": "defect",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        }
    ],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/904/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2016-08-16T08:38:57Z",
        "closed_issues": 56,
        "created_at": "2016-08-16T08:38:57Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
            "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
            "followers_url": "https://api.github.com/users/robertwb/followers",
            "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
            "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/robertwb",
            "id": 486017,
            "login": "robertwb",
            "organizations_url": "https://api.github.com/users/robertwb/orgs",
            "received_events_url": "https://api.github.com/users/robertwb/received_events",
            "repos_url": "https://api.github.com/users/robertwb/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/robertwb"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestones/0.13",
        "id": 1944453,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/17/labels",
        "number": 17,
        "open_issues": 0,
        "state": "closed",
        "title": "0.13",
        "updated_at": "2016-08-16T09:09:55Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/17"
    },
    "number": 904,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "Templates/memory views: Resolve parser ambiguities at a later stage",
    "updated_at": "2010-02-04T06:47:42Z",
    "url": "https://api.github.com/repos/cython/cython/issues/904",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/486017?v=3",
        "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
        "followers_url": "https://api.github.com/users/robertwb/followers",
        "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
        "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/robertwb",
        "id": 486017,
        "login": "robertwb",
        "organizations_url": "https://api.github.com/users/robertwb/orgs",
        "received_events_url": "https://api.github.com/users/robertwb/received_events",
        "repos_url": "https://api.github.com/users/robertwb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/robertwb"
    }
}