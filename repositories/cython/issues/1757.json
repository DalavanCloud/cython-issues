{
    "assignee": null,
    "assignees": [],
    "body": "Those weren't present before.\r\nWe're building with -Wall because until now the generated code was clean.\r\nHere's an example of failure:\r\n\r\n```\r\nbuilding 'xpra.codecs.csc_swscale.colorspace_converter' extension\r\ncreating build/temp.linux-x86_64-2.7/xpra/codecs/csc_swscale\r\ngcc -pthread -fno-strict-aliasing -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -DNDEBUG -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -I/usr/include/xpra -I/usr/include/python2.7 -c xpra/codecs/csc_swscale/colorspace_converter.c -o build/temp.linux-x86_64-2.7/xpra/codecs/csc_swscale/colorspace_converter.o -Wl,-rpath,/usr/lib64/xpra -Wall -Werror -fPIC\r\nxpra/codecs/csc_swscale/colorspace_converter.c:12227:12: error: ‘__Pyx_carray_from_py_unsigned_long’ defined but not used [-Werror=unused-function]\r\n static int __Pyx_carray_from_py_unsigned_long(PyObject *__pyx_v_o, unsigned long *__pyx_v_v, Py_ssize_t __pyx_v_length) {\r\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nxpra/codecs/csc_swscale/colorspace_converter.c:11690:12: error: ‘__Pyx_carray_from_py_int’ defined but not used [-Werror=unused-function]\r\n static int __Pyx_carray_from_py_int(PyObject *__pyx_v_o, int *__pyx_v_v, Py_ssize_t __pyx_v_length) {\r\n            ^~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\nerror: command 'gcc' failed with exit status 1\r\n```\r\n\r\nAnd:\r\n```\r\nbuilding 'xpra.codecs.vpx.encoder' extension\r\ncreating build/temp.linux-x86_64-2.7/xpra/codecs/vpx\r\ngcc -pthread -fno-strict-aliasing -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -DNDEBUG -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -I/usr/include/xpra -I/usr/include/python2.7 -c xpra/codecs/vpx/encoder.c -o build/temp.linux-x86_64-2.7/xpra/codecs/vpx/encoder.o -Wall -Werror -fPIC\r\nxpra/codecs/vpx/encoder.c:21241:30: error: ‘__pyx_convert__to_py_vpx_codec_enc_cfg_t’ defined but not used [-Werror=unused-function]\r\n             static PyObject* __pyx_convert__to_py_vpx_codec_enc_cfg_t(vpx_codec_enc_cfg_t s) {\r\n                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nxpra/codecs/vpx/encoder.c:13358:28: error: ‘__pyx_convert__from_py_vpx_codec_enc_cfg_t’ defined but not used [-Werror=unused-function]\r\n static vpx_codec_enc_cfg_t __pyx_convert__from_py_vpx_codec_enc_cfg_t(PyObject *__pyx_v_obj) {\r\n                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\nerror: command 'gcc' failed with exit status 1\r\n```\r\n\r\nNot sure why those functions are generated at all.\r\nThis problem only affects these two modules out of a well over a dozen.\r\nHow can I workaround this and get Cython not to generate those functions?",
    "closed_at": null,
    "comment_data": [
        {
            "body": "We shouldn't be producing these if they're not used. Can you give us a minimal repro and I'll see if I can get it fixed before the release? ",
            "created_at": "2017-07-04T03:31:46Z",
            "html_url": "https://github.com/cython/cython/issues/1757#issuecomment-312772315",
            "id": 312772315,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1757",
            "updated_at": "2017-07-04T03:31:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/312772315",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        },
        {
            "body": "Minimal example (no idea why removing either cdef line from the object fixes things!):\r\n```\r\ncdef extern from \"vpx/vpx_codec.h\":\r\n    ctypedef struct vpx_codec_ctx_t:\r\n        pass\r\n\r\ncdef extern from \"vpx/vpx_encoder.h\":\r\n    ctypedef struct vpx_codec_enc_cfg_t:\r\n        unsigned int g_usage\r\n\r\ncdef class Encoder:\r\n    cdef vpx_codec_ctx_t *context\r\n    cdef vpx_codec_enc_cfg_t cfg\r\n```\r\nBuild it with the libvpx headers installed (on Fedora 26, that's \"libvpx-devel\"):\r\n```\r\nfrom distutils.core import setup\r\nfrom distutils.extension import Extension\r\nfrom Cython.Build import cythonize\r\n\r\nvpx_pkgconfig = {\r\n    'libraries':            ['vpx', 'm'],\r\n    'extra_compile_args':   ['-Wall', '-Werror'],\r\n    }\r\nmodule = Extension(\"vpx\", [\"vpx.pyx\"], **vpx_pkgconfig)\r\nsetup(ext_modules = cythonize([module]))\r\n```\r\nResult is exactly as above.",
            "created_at": "2017-07-04T04:49:08Z",
            "html_url": "https://github.com/cython/cython/issues/1757#issuecomment-312779598",
            "id": 312779598,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1757",
            "updated_at": "2017-07-04T04:49:08Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/312779598",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1049737?v=3",
                "events_url": "https://api.github.com/users/totaam/events{/privacy}",
                "followers_url": "https://api.github.com/users/totaam/followers",
                "following_url": "https://api.github.com/users/totaam/following{/other_user}",
                "gists_url": "https://api.github.com/users/totaam/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/totaam",
                "id": 1049737,
                "login": "totaam",
                "organizations_url": "https://api.github.com/users/totaam/orgs",
                "received_events_url": "https://api.github.com/users/totaam/received_events",
                "repos_url": "https://api.github.com/users/totaam/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/totaam/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/totaam/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/totaam"
            }
        },
        {
            "body": "I guess it's the automatic pickling support that we have now. It seems to generate the struct field conversion functions, before it decides that it cannot actually pickle the class because it contains pointers. Removing the pointer field makes it picklable and thus uses the functions, and removing the struct field enables the decision without generating the functions.\n\nIt's a bug that you can't really work around currently.\n",
            "created_at": "2017-07-04T05:02:03Z",
            "html_url": "https://github.com/cython/cython/issues/1757#issuecomment-312780900",
            "id": 312780900,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1757",
            "updated_at": "2017-07-04T05:02:03Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/312780900",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/491659?v=3",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "body": "Is there a way to turn off pickling?\r\nAFAIK, I don't need it for anything, so the extra pickling code would be just bloat for me anyway?\r\n\r\nIf I was desperate (which I am not), I guess I could use `uintptr_t` instead of the struct pointer in the object, and cast back and forth.",
            "created_at": "2017-07-04T05:08:46Z",
            "html_url": "https://github.com/cython/cython/issues/1757#issuecomment-312781562",
            "id": 312781562,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1757",
            "updated_at": "2017-07-04T05:08:46Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/312781562",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/1049737?v=3",
                "events_url": "https://api.github.com/users/totaam/events{/privacy}",
                "followers_url": "https://api.github.com/users/totaam/followers",
                "following_url": "https://api.github.com/users/totaam/following{/other_user}",
                "gists_url": "https://api.github.com/users/totaam/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/totaam",
                "id": 1049737,
                "login": "totaam",
                "organizations_url": "https://api.github.com/users/totaam/orgs",
                "received_events_url": "https://api.github.com/users/totaam/received_events",
                "repos_url": "https://api.github.com/users/totaam/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/totaam/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/totaam/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/totaam"
            }
        },
        {
            "body": "This can be disabled with the auto_pickle directive, e.g. `#cython: auto_pickle=False` at the top of the file. However, we should be able to test whether conversion is possible without actually generating them, so this bug still should be fixed. ",
            "created_at": "2017-07-04T06:18:39Z",
            "html_url": "https://github.com/cython/cython/issues/1757#issuecomment-312790140",
            "id": 312790140,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/1757",
            "updated_at": "2017-07-04T06:18:39Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/312790140",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/486017?v=3",
                "events_url": "https://api.github.com/users/robertwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/robertwb/followers",
                "following_url": "https://api.github.com/users/robertwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/robertwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robertwb",
                "id": 486017,
                "login": "robertwb",
                "organizations_url": "https://api.github.com/users/robertwb/orgs",
                "received_events_url": "https://api.github.com/users/robertwb/received_events",
                "repos_url": "https://api.github.com/users/robertwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robertwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robertwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robertwb"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/1757/comments",
    "created_at": "2017-07-04T01:29:22Z",
    "event_data": [],
    "events_url": "https://api.github.com/repos/cython/cython/issues/1757/events",
    "html_url": "https://github.com/cython/cython/issues/1757",
    "id": 240290638,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/1757/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 1757,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "open",
    "title": "carray_from_* unused-function warnings with 0.26b0",
    "updated_at": "2017-07-04T06:18:39Z",
    "url": "https://api.github.com/repos/cython/cython/issues/1757",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/1049737?v=3",
        "events_url": "https://api.github.com/users/totaam/events{/privacy}",
        "followers_url": "https://api.github.com/users/totaam/followers",
        "following_url": "https://api.github.com/users/totaam/following{/other_user}",
        "gists_url": "https://api.github.com/users/totaam/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/totaam",
        "id": 1049737,
        "login": "totaam",
        "organizations_url": "https://api.github.com/users/totaam/orgs",
        "received_events_url": "https://api.github.com/users/totaam/received_events",
        "repos_url": "https://api.github.com/users/totaam/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/totaam/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/totaam/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/totaam"
    }
}