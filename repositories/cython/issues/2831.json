{
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Moving off-topic part of discussion in #1628.\r\n\r\nThe learning curve for newbies (this guy!) would be easier if the dependency structure between modules were simplified.  Some low-hanging fruit I would like to refactor:\r\n\r\n- `Cython.Utils` - The only intra-cython import in this file is `from Cython.Compiler.Scanning import FileSourceDescriptor` for `search_include_directories`, which is only used once in `Compiler.Main`.  I propose to move `search_include_directories` to `Main` (or a new file with scope TBD) so that `Cython.Utils` is unambiguously dependency-free.\r\n\r\n- `Compiler.Lexicon` and `Compiler.Scanning` have circular imports that can be resolved by just putting the contents of Lexicon into Scanning and removing Lexicon.py\r\n\r\n- `CompilationOptions` and `default_options` should be moved from `Main` to `Options`.\r\n  - `CmdLine` would then depend only on `Options` and not need runtime import from `Main`.  `Main`'s runtime import from `CmdLine` could be moved to the module level.\r\n  - `CompilationOptions.create_context` would be removed and be replaced by a `Context.from_options` classmethod.\r\n\r\n- (lower priority) a `Compiler.util` directory could hold dependency-free `StringEncoding`, `Naming`, `Future`, `DebugFlags`.\r\n  - Possibly `TreePath` just to get it out of the way.\r\n  - `Error` would also be nice to add to that list, but it depends on `Options`.  Possibly try to avoid that dependency.\r\n\r\n- At this point\r\n  - `CmdLine` depends only on `Options`\r\n  - `Scanning` depends only on `util` and `Errors`\r\n\r\n- (The connection to #1628) `Context` could have a parent class refactored out that defines only enough methods/attributes to pass to `PyrexScanner` inside the `parse` method.  (The following line inside `parse` passes the `PyrexScanner` to `Parsing.p_module`, and I'm not yet sure what `Context` attributes that expects to exist, so I'm not sure whether `Context.parse` can be entirely refactored out)",
    "closed_at": "2019-02-11T18:48:48Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> move `search_include_directories` to `Main`\r\n\r\nSeems reasonable. Although all the \"search directory for whatever\" functionality might merit its own module at some point. It's fairly complex (and probably needs to be, at least a little). It's a good start, though.\r\n\r\n> putting the contents of Lexicon into Scanning\r\n\r\nNo, but I think it should work to move the `Method` class into `Actions.py` (including its `.pxd` declaration in `Scanning.pxd`), because that is essentially what it is, a scanner action.\r\n\r\n> `CompilationOptions` and `default_options` should be moved from `Main` to `Options`\r\n\r\nThere are probably some uncomfortable details somewhere that escape me right now, but this sounds like a good idea. There are basically four types of options: the debug flags and the global ones in `Options.py`, then the compile options set from the `default_options` dict, and the directives (which currently fill most of `Options.py`). I can well live with having the `DebugFlags` out of sight, but the others can nicely live together.\r\n\r\n> a `Compiler.util` directory could hold …\r\n\r\n- `Future` – That's a compiler feature, not a utility. I think it should be visible. Maybe goes together with compiler options, at best.\r\n- `Naming` is part of the code generation, helping to avoid naming conflicts. Doesn't feel like a utility.\r\n- `DebugFlags` isn't really a utility thing either, it's more like the options, just less end user facing.\r\n- `StringEncoding` is the most \"utility-like\" on your list. It's a part of the compiler infrastructure, with functionality for parsing, string value handling and code generation. Also not necessarily something to move out of the way, I guess.\r\n- `TreePath`, ok, that's mostly test support.\r\n- `Error`, also compiler infrastructure, I'd say.\r\n\r\nOverall, I don't really see enough to put into a \"utility\" sub-package. I rather see a functional split between \"scanner/parser\", \"syntax tree nodes\", and \"transformations\". Potentially also the \"type system\" (PyrexTypes + Buffer + MemoryView + maybe Builtin), which is really what makes Cython a programming language. But I don't think it's a good idea to split up the package right now, when we might end up with a long-living Py2 legacy branch where any difficulty to cherry-pick changes will the a major annoyance. That's a decision to postpone until we have decided when and in which version to cut off the Py2 support. If we do it _after_ the next release, then doing any restructuring before that would actually be helpful. Although, flat is better than nested, right? ;)",
            "created_at": "2019-02-09T17:41:31Z",
            "html_url": "https://github.com/cython/cython/issues/2831#issuecomment-462064039",
            "id": 462064039,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2831",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjA2NDAzOQ==",
            "updated_at": "2019-02-09T17:41:31Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/462064039",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Overall, I don't really see enough to put into a \"utility\" sub-package.\r\n\r\nTotally reasonable.  Unless there is a better shorthand available, I'm going to keep referring to these modules collectively as `util` for the purpose of saying \"`X` depends only on `util` and `Y`\".\r\n\r\n> Although, flat is better than nested, right?\r\n\r\nCan't argue with the principle.\r\n\r\nI'll put together a PR with the parts of this that you're on board with.  Later I might make a proof of concept for other parts, in particular the `Context` refactor.",
            "created_at": "2019-02-09T18:26:48Z",
            "html_url": "https://github.com/cython/cython/issues/2831#issuecomment-462067575",
            "id": 462067575,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2831",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjA2NzU3NQ==",
            "updated_at": "2019-02-09T18:26:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/462067575",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "node_id": "MDQ6VXNlcjgwNzg5Njg=",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Regarding the `Method` \"Action\", [here is](https://github.com/cython/cython/blob/0907d71f962623239c561fef14fb6d7bdf47076f/Cython/Plex/Lexicons.py#L148-L159) what happens when building the lexicon. It gets wrapped in a `Call` Action. I think it would be best to actually make it inherit from `Action` instead and implement `.perform()` and `.same_as()` directly.",
            "created_at": "2019-02-09T20:49:17Z",
            "html_url": "https://github.com/cython/cython/issues/2831#issuecomment-462078176",
            "id": 462078176,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2831",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjA3ODE3Ng==",
            "updated_at": "2019-02-09T20:49:17Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/462078176",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I have working code for the `Method` refactoring. Can I push it, or would it get in the way of anything you're doing right now?",
            "created_at": "2019-02-10T17:15:45Z",
            "html_url": "https://github.com/cython/cython/issues/2831#issuecomment-462152467",
            "id": 462152467,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2831",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE1MjQ2Nw==",
            "updated_at": "2019-02-10T17:15:45Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/462152467",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Go for it.  Next PR I have in mind will be to move CompilationOptions.",
            "created_at": "2019-02-10T17:16:49Z",
            "html_url": "https://github.com/cython/cython/issues/2831#issuecomment-462152572",
            "id": 462152572,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2831",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE1MjU3Mg==",
            "updated_at": "2019-02-10T17:16:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/462152572",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "node_id": "MDQ6VXNlcjgwNzg5Njg=",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can we close this ticket, or is there something you would like to keep it open for?",
            "created_at": "2019-02-11T18:43:49Z",
            "html_url": "https://github.com/cython/cython/issues/2831#issuecomment-462444905",
            "id": 462444905,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2831",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjQ0NDkwNQ==",
            "updated_at": "2019-02-11T18:43:49Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/462444905",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This can be closed.  I've been trying to simplify things further by moving a few low-dependency classes out of Compiler.Code but have hit a wall there.",
            "created_at": "2019-02-11T18:48:48Z",
            "html_url": "https://github.com/cython/cython/issues/2831#issuecomment-462446784",
            "id": 462446784,
            "issue_url": "https://api.github.com/repos/cython/cython/issues/2831",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjQ0Njc4NA==",
            "updated_at": "2019-02-11T18:48:48Z",
            "url": "https://api.github.com/repos/cython/cython/issues/comments/462446784",
            "user": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "node_id": "MDQ6VXNlcjgwNzg5Njg=",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/cython/cython/issues/2831/comments",
    "created_at": "2019-02-09T16:38:36Z",
    "event_data": [
        {
            "actor": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "commit_id": "ba9ea5f72eace129cc68d2435e8d91755660f675",
            "commit_url": "https://api.github.com/repos/cython/cython/commits/ba9ea5f72eace129cc68d2435e8d91755660f675",
            "created_at": "2019-02-10T17:25:42Z",
            "event": "referenced",
            "id": 2129313724,
            "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxMjkzMTM3MjQ=",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2129313724"
        },
        {
            "actor": {
                "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
                "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbrockmendel/followers",
                "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbrockmendel",
                "id": 8078968,
                "login": "jbrockmendel",
                "node_id": "MDQ6VXNlcjgwNzg5Njg=",
                "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
                "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
                "repos_url": "https://api.github.com/users/jbrockmendel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbrockmendel"
            },
            "commit_id": null,
            "commit_url": null,
            "created_at": "2019-02-11T18:48:48Z",
            "event": "closed",
            "id": 2131458207,
            "node_id": "MDExOkNsb3NlZEV2ZW50MjEzMTQ1ODIwNw==",
            "url": "https://api.github.com/repos/cython/cython/issues/events/2131458207"
        }
    ],
    "events_url": "https://api.github.com/repos/cython/cython/issues/2831/events",
    "html_url": "https://github.com/cython/cython/issues/2831",
    "id": 408447027,
    "labels": [],
    "labels_url": "https://api.github.com/repos/cython/cython/issues/2831/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0MDg0NDcwMjc=",
    "number": 2831,
    "repository_url": "https://api.github.com/repos/cython/cython",
    "state": "closed",
    "title": "REF: Refactor to avoid circular dependencies",
    "updated_at": "2019-02-11T18:48:48Z",
    "url": "https://api.github.com/repos/cython/cython/issues/2831",
    "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
        "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
        "followers_url": "https://api.github.com/users/jbrockmendel/followers",
        "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
        "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jbrockmendel",
        "id": 8078968,
        "login": "jbrockmendel",
        "node_id": "MDQ6VXNlcjgwNzg5Njg=",
        "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
        "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
        "repos_url": "https://api.github.com/users/jbrockmendel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jbrockmendel"
    }
}