exporting patch:
# HG changeset patch
# User Vitja Makarov <vitja.makarov@gmail.com>
# Date 1289669954 -10800
# Node ID a7be01017caf7d0185ea1beb0598fb668588cb49
# Parent  9cdb8d8171c1c1519cc7cf7deda21abbd6533483
Add testcase for ticket #593

diff -r 9cdb8d8171c1 -r a7be01017caf tests/bugs.txt
--- a/tests/bugs.txt	Sat Nov 13 18:56:02 2010 +0300
+++ b/tests/bugs.txt	Sat Nov 13 20:39:14 2010 +0300
@@ -17,7 +17,7 @@
 closure_inside_cdef_T554
 ipow_crash_T562
 pure_mode_cmethod_inheritance_T583
-
+decorators_T593
 
 # CPython regression tests that don't current work:
 pyregr.test_threadsignals
diff -r 9cdb8d8171c1 -r a7be01017caf tests/run/decorators_T593.pyx
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/tests/run/decorators_T593.pyx	Sat Nov 13 20:39:14 2010 +0300
@@ -0,0 +1,48 @@
+"""
+>>> am_i_buggy
+False
+>>> Foo
+False
+"""
+def testme(func):
+    try:
+        am_i_buggy
+        return True
+    except NameError:
+        return False
+@testme
+def am_i_buggy():
+    pass
+
+def testclass(klass):
+    try:
+        Foo
+        return True
+    except NameError:
+        return False
+@testclass
+class Foo:
+    pass
+
+class ODict(dict):
+   def __init__(self):
+       dict.__init__(self)
+       self._order = []
+       dict.__setitem__(self, '_order', self._order)
+   def __setitem__(self, key, value):
+       dict.__setitem__(self, key, value)
+       self._order.append(key)
+
+class Base(type):
+   @staticmethod
+   def __prepare__(*args, **kwargs):
+       return ODict()
+
+class Bar(metaclass=Base):
+   """
+   >>> Bar._order
+   ['__module__', '__doc__', 'bar']
+   """
+   @property
+   def bar(self):
+       return 0
