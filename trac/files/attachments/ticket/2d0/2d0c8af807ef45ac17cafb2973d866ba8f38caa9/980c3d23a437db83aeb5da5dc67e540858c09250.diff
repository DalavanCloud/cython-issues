diff -r 57467649c34c Cython/Compiler/ModuleNode.py
--- a/Cython/Compiler/ModuleNode.py	Wed Oct 15 12:10:09 2008 -0300
+++ b/Cython/Compiler/ModuleNode.py	Thu Oct 16 13:20:54 2008 -0300
@@ -1633,7 +1633,7 @@ class ModuleNode(Nodes.Node, Nodes.Block
             rev_entries.reverse()
             for entry in rev_entries:
                 if entry.visibility != 'extern':
-                    if entry.type.is_pyobject:
+                    if entry.type.is_pyobject and entry.used:
                         code.put_var_decref_clear(entry)
         if Options.generate_cleanup_code >= 3:
             code.putln("/*--- Type import cleanup code ---*/")
@@ -1734,7 +1734,7 @@ class ModuleNode(Nodes.Node, Nodes.Block
         # variables to None.
         for entry in env.var_entries:
             if entry.visibility != 'extern':
-                if entry.type.is_pyobject:
+                if entry.type.is_pyobject and entry.used:
                     code.put_init_var_to_py_none(entry)
 
     def generate_c_function_export_code(self, env, code):
diff -r 57467649c34c Cython/Compiler/ParseTreeTransforms.py
--- a/Cython/Compiler/ParseTreeTransforms.py	Wed Oct 15 12:10:09 2008 -0300
+++ b/Cython/Compiler/ParseTreeTransforms.py	Thu Oct 16 13:20:54 2008 -0300
@@ -183,9 +183,10 @@ class PostParse(CythonTransform):
                                     handler(decl)
                                     continue # Remove declaration
                             raise PostParseError(decl.pos, ERR_CDEF_INCLASS)
+                        first_assignment = self.scope_type != 'module'
                         stats.append(SingleAssignmentNode(node.pos,
                             lhs=NameNode(node.pos, name=declbase.name),
-                            rhs=declbase.default, first=True))
+                            rhs=declbase.default, first=first_assignment))
                         declbase.default = None
                 newdecls.append(decl)
             node.declarators = newdecls
diff -r 57467649c34c Cython/Compiler/Symtab.py
--- a/Cython/Compiler/Symtab.py	Wed Oct 15 12:10:09 2008 -0300
+++ b/Cython/Compiler/Symtab.py	Thu Oct 16 13:20:54 2008 -0300
@@ -934,6 +934,8 @@ class ModuleScope(Scope):
             entry.is_pyglobal = 1
         else:
             entry.is_cglobal = 1
+            if entry.type.is_pyobject:
+                entry.init = 0
             self.var_entries.append(entry)
         return entry
     
