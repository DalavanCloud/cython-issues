Fix PyDict_Next optimization by using a local temp variable for iteration.

diff --git a/Cython/Compiler/Optimize.py b/Cython/Compiler/Optimize.py
--- a/Cython/Compiler/Optimize.py
+++ b/Cython/Compiler/Optimize.py
@@ -74,7 +74,9 @@
         temp = UtilNodes.TempHandle(PyrexTypes.py_object_type)
         temps.append(temp)
         dict_temp = temp.ref(dict_obj.pos)
-        pos_temp = node.iterator.counter
+        temp = UtilNodes.TempHandle(PyrexTypes.c_py_ssize_t_type)
+        temps.append(temp)
+        pos_temp = temp.ref(node.pos)
         pos_temp_addr = ExprNodes.AmpersandNode(
             node.pos, operand=pos_temp,
             type=PyrexTypes.c_ptr_type(PyrexTypes.c_py_ssize_t_type))
