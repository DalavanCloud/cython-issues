Add a check in FlattenBuiltinTypeCreation._find_handler() to make sure that
function.name exists.

diff -r c1b135a099d1 Cython/Compiler/Optimize.py
--- a/Cython/Compiler/Optimize.py	Mon Dec 15 08:44:59 2008 -0800
+++ b/Cython/Compiler/Optimize.py	Mon Dec 15 09:06:04 2008 -0800
@@ -370,9 +370,12 @@
     def _find_handler(self, call_type, function):
         if not function.type.is_builtin_type:
             return None
-        handler = getattr(self, '_handle_%s_%s' % (call_type, function.name), None)
+        name = getattr(function, 'name', None)
+        if name is None:
+            return None
+        handler = getattr(self, '_handle_%s_%s' % (call_type, name), None)
         if handler is None:
-            handler = getattr(self, '_handle_any_%s' % function.name, None)
+            handler = getattr(self, '_handle_any_%s' % name, None)
         return handler
 
     def _handle_general_dict(self, node, pos_args, kwargs):
