{
    "1": {
        "title": "Several inplace operators not defined", 
        "github_issue": 558
    }, 
    "2": {
        "title": "Cython needs better support for API documentation", 
        "github_issue": 559
    }, 
    "3": {
        "title": "Cython calls ExtType.__init__() as Python function", 
        "github_issue": 560
    }, 
    "4": {
        "title": "from package cimport module doesn't work", 
        "github_issue": 561
    }, 
    "5": {
        "title": "no mangling of double underscore names in class", 
        "github_issue": 562
    }, 
    "6": {
        "title": "gcc warns of unused variables in module initialization", 
        "github_issue": 563
    }, 
    "7": {
        "title": "Problems with automatic pxd inclusion", 
        "github_issue": 564
    }, 
    "8": {
        "title": "DEF X = -1 raises TypeError in ExprNodes.py", 
        "github_issue": 565
    }, 
    "9": {
        "title": "patch: RFC: constify Cython output all over the place  (newbie approach)", 
        "github_issue": 566, 
        "attachments": {
            "constify.patch": "files/attachments/ticket/0ad/0ade7c2cf97f75d009975f4d720d1fa6c19f4897/72bb13eb3ae0a7ca9af40e89545d0015c8e9a939.patch"
        }
    }, 
    "10": {
        "title": "[patch] Fix for raising exceptions from iterator bug", 
        "github_issue": 567, 
        "attachments": {
            "iteratorexceptionbug.patch": "files/attachments/ticket/b1d/b1d5781111d84f7b3fe45a0852e59758cd7a87e5/59460e25c287397aba40fb3b96ad5074ad0d10d3.patch"
        }
    }, 
    "11": {
        "title": "[patch] Transform utilities", 
        "github_issue": 568, 
        "attachments": {
            "dagss-branch-changes.diff": "files/attachments/ticket/17b/17ba0791499db908433b80f37c5fbc89b870084b/53f824be8dc9a24ffca163ed0602280185c4b337.diff", 
            "dagss-branch.bundle": "files/attachments/ticket/17b/17ba0791499db908433b80f37c5fbc89b870084b/4c58b682aca3143b228cf14967832a43a2d8d56f.bundle"
        }
    }, 
    "12": {
        "title": "__stdcall define wrong for Windows platform", 
        "github_issue": 569, 
        "attachments": {
            "windows.jek.patch": "files/attachments/ticket/7b5/7b52009b64fd0a2a49e6d8a939753077792b0554/d7e939637ecbc918608e3f337f2e5ad324158072.patch", 
            "stdcall.hg": "files/attachments/ticket/7b5/7b52009b64fd0a2a49e6d8a939753077792b0554/97e0ffaaceb8630b62e2ece2a4556b8142787ba2.hg"
        }
    }, 
    "13": {
        "title": "Minor patch set for Python 2.6a3 on Windows VS2008", 
        "github_issue": 570, 
        "attachments": {
            "py26.hg": "files/attachments/ticket/bd3/bd307a3ec329e10a2cff8fb87480823da114f8f4/7cd3501cf1fea155eb2eace3b56a9e44a5635147.hg"
        }
    }, 
    "14": {
        "title": "Emit code to guard declarations for this module's public functions", 
        "github_issue": 571, 
        "attachments": {
            "guarddll.hg": "files/attachments/ticket/fa3/fa35e192121eabf3dabf9f5ea6abdbcbc107ac3b/2e4f2912fc42e117bb8a1298f5024ffc106f88a2.hg"
        }
    }, 
    "15": {
        "title": "Better dependancy tracking", 
        "github_issue": 572, 
        "attachments": {
            "dependancies.patch": "files/attachments/ticket/f1a/f1abd670358e036c31296e66b3b66c382ac00812/dca074555150ba339fbfafbda1e9ac4724e46fb8.patch"
        }
    }, 
    "16": {
        "title": "IF clauses inside definitions", 
        "github_issue": 573
    }, 
    "17": {
        "title": "Error in default values", 
        "github_issue": 574
    }, 
    "18": {
        "title": "req: support cdef class attrib initialisation", 
        "github_issue": 575
    }, 
    "19": {
        "title": "Cython annotation breaks on certain pointer casts", 
        "github_issue": 576
    }, 
    "20": {
        "title": "Type checking in method overriding broken for \"ctypedef extern class\" types", 
        "github_issue": 577, 
        "attachments": {
            "files.zip": "files/attachments/ticket/910/91032ad7bbcb6cf72875e8e8207dcfba80173f7c/85e05b6c647ff44caad9004d9d542bc269048992.zip"
        }
    }, 
    "21": {
        "title": "mcubnte", 
        "github_issue": 578
    }, 
    "22": {
        "title": "future feature division is not defined", 
        "github_issue": 579
    }, 
    "23": {
        "title": "cdef public attributes don't work for extension types", 
        "github_issue": 580
    }, 
    "24": {
        "title": "cpdef memory leak", 
        "github_issue": 581
    }, 
    "25": {
        "title": "bug in char* declaration", 
        "github_issue": 582, 
        "attachments": {
            "test.pyx": "files/attachments/ticket/f6e/f6e1126cedebf23e1463aee73f9df08783640400/4e56ea94dd117b0c06b60a6a67ad86d6b8b05888.pyx"
        }
    }, 
    "26": {
        "title": "Cython doesn't catch double declaration with args", 
        "github_issue": 583, 
        "attachments": {
            "bug2.pyx": "files/attachments/ticket/887/887309d048beef83ad3eabf2a79a64a389ab1c9f/d01fc2b475ac91d98a7be77dbfe3db4d313ee815.pyx"
        }
    }, 
    "27": {
        "title": "inspection of compilation namespace for IF/ELIF/ELSE/DEF", 
        "github_issue": 584, 
        "attachments": {
            "defined.patch": "files/attachments/ticket/bc3/bc33ea4e26e5e1af1408321416956113a4658763/9524f4fc09628ac98f847610d97a39f54350acc7.patch"
        }
    }, 
    "28": {
        "title": "Potential problems for extern cdefs in argument parsing", 
        "github_issue": 585
    }, 
    "29": {
        "title": "'make all' to build Scanners.so", 
        "github_issue": 586, 
        "attachments": {
            "make-all.patch": "files/attachments/ticket/771/7719a1c782a1ba91c031a682a0a2f8658209adbf/0140404b8ea443526669c9f3c90411416a098765.patch"
        }
    }, 
    "30": {
        "title": "Cython .bat-script for windows", 
        "github_issue": 587, 
        "attachments": {
            "cython.bat": "files/attachments/ticket/22d/22d200f8670dbdb3e253a90eee5098477c95c23d/c3b29c61a31ab4d34add9ffc1d1b31fd6478a5f4.bat"
        }
    }, 
    "31": {
        "title": "function pointers not accepted as function arguments", 
        "github_issue": 588
    }, 
    "32": {
        "title": "unsigned integer suffix not parsed", 
        "github_issue": 589
    }, 
    "33": {
        "title": "Cython long and long long integer suffixes", 
        "github_issue": 590
    }, 
    "34": {
        "title": "cython generates horrible bint comparison code", 
        "github_issue": 591
    }, 
    "35": {
        "title": "The following code causes mysterious exceptions", 
        "github_issue": 592
    }, 
    "36": {
        "title": "Bad code generation", 
        "github_issue": 593
    }, 
    "37": {
        "title": "Casting is slow because of TypeCheck Call", 
        "github_issue": 594
    }, 
    "38": {
        "title": "Non-optimal code generation for equality test", 
        "github_issue": 595
    }, 
    "39": {
        "title": "Bad list constructor code", 
        "github_issue": 596
    }, 
    "40": {
        "title": "Annotate mode disables inline source comments", 
        "github_issue": 597
    }, 
    "41": {
        "title": "Bug accessing internals of Python long", 
        "github_issue": 598
    }, 
    "42": {
        "title": "C++ compile error when exception part declared on function", 
        "github_issue": 599
    }, 
    "43": {
        "title": "Mysterious error with conflicting types", 
        "github_issue": 600
    }, 
    "44": {
        "title": "bad declarations do not produce warning", 
        "github_issue": 601
    }, 
    "45": {
        "title": "Inefficient comparison code generation", 
        "github_issue": 602
    }, 
    "46": {
        "title": "slicing string literals is broken", 
        "github_issue": 603
    }, 
    "47": {
        "title": "annotation broken in dagss branch?", 
        "github_issue": 604
    }, 
    "48": {
        "title": "Better error for casts", 
        "github_issue": 605
    }, 
    "49": {
        "title": "Missing opening parenthesis in code generation", 
        "github_issue": 606, 
        "attachments": {
            "fix_parenthesis.patch": "files/attachments/ticket/2e0/2e01e17467891f7c933dbaa00e1459d23db3fe4f/c7448ac097b5e4e4bf5db202010fb6d5db74a1ff.patch"
        }
    }, 
    "50": {
        "title": "Generate shorter string literals", 
        "github_issue": 607, 
        "attachments": {
            "donotuselongstring.patch": "files/attachments/ticket/e18/e1822db470e60d090affd0956d743cb0e7cdf113/70eab1d0f360c5c8be37b38ec39fec5706cba6d2.patch"
        }
    }, 
    "51": {
        "title": "sizeof() only works for types, not variables", 
        "github_issue": 608
    }, 
    "52": {
        "title": "internal compiler error if first argument of cpdef method has type \"int\"", 
        "github_issue": 609
    }, 
    "53": {
        "title": "emit pyx #line and #file in the source", 
        "github_issue": 610
    }, 
    "54": {
        "title": "unsigned int arithmatic", 
        "github_issue": 611
    }, 
    "55": {
        "title": "tags in hgignore", 
        "github_issue": 612
    }, 
    "56": {
        "title": "Support for structs/records in buffers", 
        "github_issue": 613
    }, 
    "57": {
        "title": "Buffer utility functions", 
        "github_issue": 614
    }, 
    "58": {
        "title": "Compiler directive \"nonecheck\"", 
        "github_issue": 615
    }, 
    "59": {
        "title": "Failing case #1 for annotating code with errors", 
        "github_issue": 616
    }, 
    "60": {
        "title": "Failing case #2 for annotating code with errors", 
        "github_issue": 617
    }, 
    "61": {
        "title": "Buffers in cdef function argument list", 
        "github_issue": 618
    }, 
    "62": {
        "title": "Should support PEP-3118 also in Py2.6", 
        "github_issue": 619
    }, 
    "63": {
        "title": "long long index fails", 
        "github_issue": 621
    }, 
    "64": {
        "title": "Trying to set variable inside struct crashes parser", 
        "github_issue": 622, 
        "attachments": {
            "disallow.patch": "files/attachments/ticket/c66/c66c65175fecc3103b3b587be9b5b230889c8628/b9bc1467a0691933280155e3cd7d7b6be1e06d2b.patch"
        }
    }, 
    "65": {
        "title": "C compiler warning for cdef'ed variable in list comprehension", 
        "github_issue": 623, 
        "attachments": {
            "Parsing.pyx": "files/attachments/ticket/2a4/2a459380709e2fe4ac2dae5733c73225ff6cfee1/738a39dce678b4ab67aae680d1771747d37ce6f6.pyx"
        }
    }, 
    "66": {
        "title": "Buffers: Handle more alignments", 
        "github_issue": 625
    }, 
    "67": {
        "title": "Move result_code from analysis to generation", 
        "github_issue": 626
    }, 
    "68": {
        "title": "Finish moving constant generation to Code.py", 
        "github_issue": 627
    }, 
    "69": {
        "title": "Cython should emulate the Py3 print() function in Py2 < 2.6", 
        "github_issue": 628
    }, 
    "70": {
        "title": "Website Google link is wrong...", 
        "github_issue": 629
    }, 
    "71": {
        "title": "Support for contiguous modes in buffers", 
        "github_issue": 630
    }, 
    "72": {
        "title": "Crash when there's a compilation error earlier in the pipeline", 
        "github_issue": 631
    }, 
    "73": {
        "title": "types not imported on import *", 
        "github_issue": 632
    }, 
    "74": {
        "title": "make isinstance do a type check for extension types", 
        "github_issue": 633
    }, 
    "75": {
        "title": "Buffers: negative_indices option", 
        "github_issue": 635
    }, 
    "76": {
        "title": "Buffers: cast option", 
        "github_issue": 636
    }, 
    "77": {
        "title": "temp allocation should be done in code generation phase", 
        "github_issue": 637
    }, 
    "78": {
        "title": "DifferencesFromPyrex should include removal of typecheck", 
        "github_issue": 638
    }, 
    "79": {
        "title": "optimize argument parsing when kwds empty", 
        "github_issue": 639
    }, 
    "80": {
        "title": "raise error when function defined in pxd not in pyx", 
        "github_issue": 640
    }, 
    "81": {
        "title": "Make CloneNode obsolete", 
        "github_issue": 641
    }, 
    "82": {
        "title": "Implement closures", 
        "github_issue": 643
    }, 
    "83": {
        "title": "Implement Generators", 
        "github_issue": 644
    }, 
    "84": {
        "title": "Mod operator on floats", 
        "github_issue": 645
    }, 
    "85": {
        "title": "implement locals", 
        "github_issue": 646
    }, 
    "86": {
        "title": "implement globals", 
        "github_issue": 647
    }, 
    "87": {
        "title": "definitions in control structures", 
        "github_issue": 648
    }, 
    "88": {
        "title": "optimize list, tuple access", 
        "github_issue": 649
    }, 
    "89": {
        "title": "pxd caching", 
        "github_issue": 650, 
        "attachments": {
            "pxd-cache.patch": "files/attachments/ticket/16b/16b06bd9b738835e2d134fe8d596e9ab0086a985/5d015902adcdb2e9a9d9728a0fec1f137d5c4030.patch"
        }
    }, 
    "90": {
        "title": "Reference to None leaked in module globals.", 
        "github_issue": 651, 
        "attachments": {
            "fixnoneleaks.diff": "files/attachments/ticket/2d0/2d0c8af807ef45ac17cafb2973d866ba8f38caa9/ef4eb8ea64ae1162cc8e6f7ec0c5736ad4eb71d4.diff", 
            "GLOBALS.diff": "files/attachments/ticket/2d0/2d0c8af807ef45ac17cafb2973d866ba8f38caa9/980c3d23a437db83aeb5da5dc67e540858c09250.diff", 
            "dagss_attempt2.diff": "files/attachments/ticket/2d0/2d0c8af807ef45ac17cafb2973d866ba8f38caa9/16f0c2ca30e66076f27fcd2e61928625d532191d.diff", 
            "fixnoneleaks_alternative.diff": "files/attachments/ticket/2d0/2d0c8af807ef45ac17cafb2973d866ba8f38caa9/a84b1e20c06ab18d57657f9ab774d5c2df2acd60.diff"
        }
    }, 
    "91": {
        "title": "pyximport miss-installed", 
        "github_issue": 652
    }, 
    "92": {
        "title": "public enums in extern blocks", 
        "github_issue": 653
    }, 
    "93": {
        "title": "static array creation", 
        "github_issue": 654
    }, 
    "94": {
        "title": "cimport module cdef globals", 
        "github_issue": 655
    }, 
    "95": {
        "title": "public and readonly module globals", 
        "github_issue": 656
    }, 
    "96": {
        "title": "static struct creation", 
        "github_issue": 658
    }, 
    "97": {
        "title": "optimization testing", 
        "github_issue": 659
    }, 
    "98": {
        "title": "Bug in error reporting when type does not exist", 
        "github_issue": 660
    }, 
    "99": {
        "title": "Char assignment allocates unused string literal", 
        "github_issue": 661
    }, 
    "100": {
        "title": "Buffers: Better errors for dtype mismatch", 
        "github_issue": 662
    }, 
    "101": {
        "title": "Clean up numpy.pxd", 
        "github_issue": 620
    }, 
    "102": {
        "title": "from blah import (a, b, c)", 
        "github_issue": 663
    }, 
    "103": {
        "title": "Module docstrings doesn't work if comments precede them", 
        "github_issue": 664
    }, 
    "104": {
        "title": "removing GCC warnings for test suite", 
        "github_issue": 665, 
        "attachments": {
            "TESTS.diff": "files/attachments/ticket/78a/78a8efcbaaa1a9a30f9f327aa89d0b6acaaffb03/2a5de822f257f6e449c0bf98a4d542b611f2ba1d.diff"
        }
    }, 
    "105": {
        "title": "bug in new temp allocation", 
        "github_issue": 666
    }, 
    "106": {
        "title": "Regression tests fail for Python 2.6 on Win32", 
        "github_issue": 667
    }, 
    "107": {
        "title": "Parser throws exception for double* argument of function", 
        "github_issue": 668
    }, 
    "108": {
        "title": "Optimized argument parsing", 
        "github_issue": 624
    }, 
    "109": {
        "title": "backport cdef sets support for Py 2.3", 
        "github_issue": 669
    }, 
    "110": {
        "title": "deletion of dict entry with integer index broken", 
        "github_issue": 670
    }, 
    "111": {
        "title": "Pure python mode", 
        "github_issue": 671
    }, 
    "112": {
        "title": "Declare c(p)def classes/methods without need for .pxd file", 
        "github_issue": 672
    }, 
    "113": {
        "title": "literal lists don't work at module level", 
        "github_issue": 673
    }, 
    "114": {
        "title": "NumPy integration fails on Python 2.4/64-bit due to Py_ssize_t != Py_intptr_t", 
        "github_issue": 674
    }, 
    "115": {
        "title": "Buffer typestring bug with external struct fields", 
        "github_issue": 675
    }, 
    "116": {
        "title": "missing files in MANIFEST", 
        "github_issue": 677
    }, 
    "117": {
        "title": "Buffer typedefs raises parser exception", 
        "github_issue": 678
    }, 
    "118": {
        "title": "Cython 0.10 can't \"import\" sub-packages \"as\" names", 
        "github_issue": 679
    }, 
    "119": {
        "title": "request compile time value without raising error (allow constant folding)", 
        "github_issue": 680
    }, 
    "120": {
        "title": "Make TupleNode use new temp allocation", 
        "github_issue": 681
    }, 
    "121": {
        "title": "ref-count bug in try-except handling", 
        "github_issue": 682
    }, 
    "122": {
        "title": "segfault problem with recent numpy.pxd/Python 2.4", 
        "github_issue": 683
    }, 
    "123": {
        "title": "Regression due to PyDict_Next optimization", 
        "github_issue": 634, 
        "attachments": {
            "foo.pyx": "files/attachments/ticket/40b/40bd001563085fc35165329ea1ff5c5ecbdbbeef/c6f6d58d73dbbe12b6eaba0a3789e85636caef36.pyx", 
            "PyDict_Next": "files/attachments/ticket/40b/40bd001563085fc35165329ea1ff5c5ecbdbbeef/303e71704a2c1fac3ba7d5ee3ca16d8079a1bfdc"
        }
    }, 
    "124": {
        "title": "Misplaced decref due to PyDict_Next optimization", 
        "github_issue": 684, 
        "attachments": {
            "foo.pyx": "files/attachments/ticket/f38/f38cfe2e2facbcc742bad63f91ad55637300cb45/c6f6d58d73dbbe12b6eaba0a3789e85636caef36.pyx", 
            "foo.c": "files/attachments/ticket/f38/f38cfe2e2facbcc742bad63f91ad55637300cb45/e55780e6340b6e110e51e79f077052cb086292a3.c"
        }
    }, 
    "125": {
        "title": "Add support for Spam/__init__.pyx", 
        "github_issue": 685, 
        "attachments": {
            "__init__.pyx": "files/attachments/ticket/0ca/0ca9277f91e40054767f69afeb0426711ca0fddd/69ef47b1bac440ddadf2e60f475d06003738a797.pyx"
        }
    }, 
    "126": {
        "title": "includes form cimported modules should come before this module's includes", 
        "github_issue": 686
    }, 
    "127": {
        "title": "power operator (**) should be allowed in Python code", 
        "github_issue": 687
    }, 
    "128": {
        "title": "Reduce name collisions in Pure Python mode", 
        "github_issue": 688
    }, 
    "129": {
        "title": "from module import (a,b,c)", 
        "github_issue": 689
    }, 
    "130": {
        "title": "Missing support for Python special methods for rich comparison", 
        "github_issue": 690
    }, 
    "131": {
        "title": "getattr3() should be merged with getattr()", 
        "github_issue": 691
    }, 
    "132": {
        "title": "Deletion of local variables in functions is not supported", 
        "github_issue": 692
    }, 
    "133": {
        "title": "Illegal casting caused by new PyDict_Next iteration with typed variables", 
        "github_issue": 693
    }, 
    "134": {
        "title": "cpdef method w/ unused buffer causes compilation error", 
        "github_issue": 694
    }, 
    "135": {
        "title": "bad code segment crashes cython", 
        "github_issue": 695, 
        "attachments": {
            "ticket-135.patch": "files/attachments/ticket/40f/40f7c01f4189510031adccd9c604a128adaf9b00/3c0d450d8ba41931f453a74e5cda1043ad9e55bf.patch"
        }
    }, 
    "136": {
        "title": "invalid c code with recursive typedef struct", 
        "github_issue": 696
    }, 
    "137": {
        "title": "fix compiler crash on forward declarations", 
        "github_issue": 642
    }, 
    "138": {
        "title": "infinite loop in buffer code", 
        "github_issue": 697
    }, 
    "139": {
        "title": "empty switch block when if statement contains pass", 
        "github_issue": 698
    }, 
    "140": {
        "title": "Feature: Inline function definition in pxd file", 
        "github_issue": 699
    }, 
    "141": {
        "title": "cpdef special methods", 
        "github_issue": 700
    }, 
    "142": {
        "title": "module dictionaries not deallocated at Python finalization", 
        "github_issue": 701
    }, 
    "143": {
        "title": "Need to change syntax for pxd function typing", 
        "github_issue": 702, 
        "attachments": {
            "200.diff": "files/attachments/ticket/f47/f47aea8bdcbd1179a1f3d91e6afeeb259488f2d1/52eb9601fd91dd83946f3a12c6642e000d29802e.diff"
        }
    }, 
    "144": {
        "title": "Fix BlockNode/move literals/constants to code generation", 
        "github_issue": 703
    }, 
    "145": {
        "title": "Problem with literals and boolean operators", 
        "github_issue": 704
    }, 
    "146": {
        "title": "FlattenInListTransform is disabled", 
        "github_issue": 705
    }, 
    "147": {
        "title": "BoolBinopNode doesn't reuse temps", 
        "github_issue": 706
    }, 
    "148": {
        "title": "for-loop crashes due to double allocation of temps", 
        "github_issue": 707
    }, 
    "149": {
        "title": "Call subexpr.free_temps from everywhere needed", 
        "github_issue": 708
    }, 
    "150": {
        "title": "object not a builtin", 
        "github_issue": 709
    }, 
    "151": {
        "title": "'with' statement doesn't compile on C++", 
        "github_issue": 710
    }, 
    "152": {
        "title": "subtyping PyVarObject (e.g. bytes/tuple)", 
        "github_issue": 711
    }, 
    "153": {
        "title": "safe, ref-counted support for dynamic memory allocation", 
        "github_issue": 712
    }, 
    "154": {
        "title": "cleanup attempted for unused (so undeclared) buffer", 
        "github_issue": 713
    }, 
    "155": {
        "title": "AssertionError w/ CloneNode when mixing python objects, buffers, and +=", 
        "github_issue": 657
    }, 
    "156": {
        "title": "cpdef method w/ no self crashes cython", 
        "github_issue": 714
    }, 
    "157": {
        "title": "multiple definitions of method fails in c code, not cython", 
        "github_issue": 715
    }, 
    "158": {
        "title": "out-of-order assignment with strings causes segfault", 
        "github_issue": 716
    }, 
    "159": {
        "title": "implement set literals, set comprehensions and dict comprehensions", 
        "github_issue": 717
    }, 
    "160": {
        "title": "support for subinterpreters and module cleanup in Py3", 
        "github_issue": 718
    }, 
    "161": {
        "title": "sort method on lists should be able to take optional arguments", 
        "github_issue": 719
    }, 
    "162": {
        "title": "memory leak in error handling", 
        "github_issue": 720
    }, 
    "163": {
        "title": "Crash in FlattenBuiltinTypeCreation._find_handler()", 
        "github_issue": 721, 
        "attachments": {
            "fix-Flatten": "files/attachments/ticket/fd9/fd93751649ac3ea8f8772ba49c8c1fe068002835/b1700016e41da668af9002d1f0bfc5f8516ac74b"
        }
    }, 
    "164": {
        "title": "pyximport reportedly does not work on Python 2.6", 
        "github_issue": 722
    }, 
    "165": {
        "title": "cython crashes on cpdef without \"self\"", 
        "github_issue": 723
    }, 
    "166": {
        "title": "cdef'd list raises wrong exception on append when list is None", 
        "github_issue": 724
    }, 
    "167": {
        "title": "Better error message for lack of pointer buffers support", 
        "github_issue": 725
    }, 
    "168": {
        "title": "fix bugs in Visitor cache", 
        "github_issue": 727
    }, 
    "169": {
        "title": "Fix error in buffer typestring checking", 
        "github_issue": 728
    }, 
    "170": {
        "title": "better error when user-declared type conflicts with builtin type", 
        "github_issue": 729
    }, 
    "171": {
        "title": "Refcount nanny", 
        "github_issue": 730
    }, 
    "172": {
        "title": "Compiler crash for non-builtin ValueError plus numpy cimport", 
        "github_issue": 731
    }, 
    "173": {
        "title": "per-interpreter module state in Py3 (PEP 3121)", 
        "github_issue": 732
    }, 
    "174": {
        "title": "slow code", 
        "github_issue": 733
    }, 
    "175": {
        "title": "embedsignatures discards existing cpdef docstrings", 
        "github_issue": 734, 
        "attachments": {
            "embedsignature.patch": "files/attachments/ticket/04f/04f1241ed2b1b531c2c853ce1eeff952cd0f40f3/1afec061483affc40239b0fda7505233c701b497.patch"
        }
    }, 
    "176": {
        "title": "long long and VC6", 
        "github_issue": 735, 
        "attachments": {
            "py_long_long.patch": "files/attachments/ticket/5c8/5c8f5ac0b7ad23c110793ad1fcf4d3c8d41344d5/1220a35b87888532db86f00110906d3c4fb78972.patch"
        }
    }, 
    "177": {
        "title": "Efficient cdef calling convention for buffers", 
        "github_issue": 736
    }, 
    "178": {
        "title": "Efficient slices in buffers", 
        "github_issue": 737
    }, 
    "179": {
        "title": "include syntax tree path in compiler crash output", 
        "github_issue": 738
    }, 
    "180": {
        "title": "Optimize buffer assignments", 
        "github_issue": 739
    }, 
    "181": {
        "title": "embedsignature prints default args incorrectly", 
        "github_issue": 740, 
        "attachments": {
            "embedsignature.patch": "files/attachments/ticket/aee/aee544ceddfe7ab69a02f82bdf8ce6ea3862ff02/1afec061483affc40239b0fda7505233c701b497.patch"
        }
    }, 
    "182": {
        "title": "Inline iterator utility functions", 
        "github_issue": 676
    }, 
    "183": {
        "title": "Compiler directives on cpdef/cdef functions", 
        "github_issue": 741
    }, 
    "184": {
        "title": "range behaves in an odd way with unsigned types", 
        "github_issue": 742
    }, 
    "185": {
        "title": "Enum constant name mangling can't be disabled", 
        "github_issue": 743, 
        "attachments": {
            "declare_const.patch": "files/attachments/ticket/cfa/cfa2ed2aac6d61f44ca9cba73e1e8946b7cd7d22/f3b985596de5f7e4745eb21adc2ad759f1daf57e.patch"
        }
    }, 
    "186": {
        "title": "Unnecessary typechecking for getitem", 
        "github_issue": 744
    }, 
    "187": {
        "title": "cython.py not installed for pure python use", 
        "github_issue": 745
    }, 
    "188": {
        "title": "#include ordering should be consistent with order of includes and cimports in the file", 
        "github_issue": 747
    }, 
    "189": {
        "title": "Allow slicing of char*", 
        "github_issue": 749
    }, 
    "190": {
        "title": "don't use str() for literal floats", 
        "github_issue": 750
    }, 
    "191": {
        "title": "Syntax error in python_version.pxd", 
        "github_issue": 751
    }, 
    "192": {
        "title": "language and other options for cython docs", 
        "github_issue": 752
    }, 
    "193": {
        "title": "pyximport should support compiling plain .py files", 
        "github_issue": 753
    }, 
    "194": {
        "title": "Support for buffer typedefs", 
        "github_issue": 754
    }, 
    "195": {
        "title": "Implement lambda functions", 
        "github_issue": 755
    }, 
    "196": {
        "title": "Optimized integer for loops leave index variable incremented one step too far", 
        "github_issue": 756, 
        "attachments": {
            "for-dec-patch.txt": "files/attachments/ticket/4de/4dea1daedbe9dc1d643b0f0eb8ab57c7d532f771/3c8fc6cb3292b14e95b390fbd4b53479e03e6a90.txt"
        }
    }, 
    "197": {
        "title": "Think through and clean up various TempBlock classes", 
        "github_issue": 757
    }, 
    "198": {
        "title": "Complete temp transition and remove old temp system", 
        "github_issue": 758
    }, 
    "199": {
        "title": "FlattenInListTransform causes leaks", 
        "github_issue": 759
    }, 
    "200": {
        "title": "Memory leak related to return in try/finally", 
        "github_issue": 760, 
        "attachments": {
            "200.diff": "files/attachments/ticket/9f9/9f9af029585ba014e07cd3910ca976cf56160616/52eb9601fd91dd83946f3a12c6642e000d29802e.diff"
        }
    }, 
    "201": {
        "title": "Refnanny isn't automatically compiled by runtests.py", 
        "github_issue": 761
    }, 
    "202": {
        "title": "Refnanny: Module initialization code isn't refnannied", 
        "github_issue": 762
    }, 
    "203": {
        "title": "Bug in optimization of range", 
        "github_issue": 763
    }, 
    "204": {
        "title": "Cast functions for object <-> pointer", 
        "github_issue": 764
    }, 
    "205": {
        "title": "Check for allowed \"nogil\" operations happens at the wrong time", 
        "github_issue": 765
    }, 
    "206": {
        "title": "Provide syntax for public/readonly attribute docstrings", 
        "github_issue": 766
    }, 
    "207": {
        "title": "make Cython understand 'size_t' as a native C type", 
        "github_issue": 767, 
        "attachments": {
            "SIZE_T.diff": "files/attachments/ticket/3be/3be76cc016a8c850661956c5f71d14c621cf6a69/cfc48abaedf71d6adf36b30103ea34acaf05cf93.diff"
        }
    }, 
    "208": {
        "title": "empty for-int-in-range loop doesn't behave as in Python", 
        "github_issue": 768, 
        "attachments": {
            "if_patch.txt": "files/attachments/ticket/baa/baab34018148392463ef4c49b5a924409cf5f7b0/9612fe1ca1eac6e03c5b347902ab4c4a769df95f.txt"
        }
    }, 
    "209": {
        "title": "Slow object buffers", 
        "github_issue": 769
    }, 
    "210": {
        "title": "Proper nogil check for buffer access", 
        "github_issue": 770, 
        "attachments": {
            "buffernogil.patch": "files/attachments/ticket/135/135debd4837026bf06c7bfc5d1e0c6a31611af1d/8939cc25778ee4f4d4ec98a28d0cec53a32b2f26.patch"
        }
    }, 
    "211": {
        "title": "Vote over whether OpenMP support is wanted, and if so, implement", 
        "github_issue": 771
    }, 
    "212": {
        "title": "Refnanny shouldn't affect execution flow", 
        "github_issue": 772
    }, 
    "213": {
        "title": "initialising long literals (1L) fails in Python 3", 
        "github_issue": 773
    }, 
    "214": {
        "title": "pyxbuild is not Py3 compatible, so refnanny can't be built", 
        "github_issue": 774
    }, 
    "215": {
        "title": "Code generated for __setslice__ and __delslice__ fails to build in Py3", 
        "github_issue": 775
    }, 
    "216": {
        "title": "Exceptions in __Pyx_InitGlobals() lead to a crash", 
        "github_issue": 776
    }, 
    "217": {
        "title": "Support Py3 exception chaining (PEP 3134)", 
        "github_issue": 777
    }, 
    "218": {
        "title": "Support m_free() in Py3 (PEP 3121)", 
        "github_issue": 778
    }, 
    "219": {
        "title": "old exceptions leak into newly raised ones under Python 3", 
        "github_issue": 779
    }, 
    "220": {
        "title": "Cython should remove old output file before writing new output file", 
        "github_issue": 780
    }, 
    "221": {
        "title": "Memory leaks when exiting try blocks", 
        "github_issue": 781
    }, 
    "222": {
        "title": "Bad code when from...import target typed", 
        "github_issue": 782
    }, 
    "223": {
        "title": "Memory leak in cascaded comparisons", 
        "github_issue": 783
    }, 
    "224": {
        "title": "optimize printing of one object", 
        "github_issue": 784
    }, 
    "225": {
        "title": "[with patch, needs review] recursion stack overflow in control flow analysis", 
        "github_issue": 785, 
        "attachments": {
            "iterative-controlflow-traversal.patch": "files/attachments/ticket/cfe/cfe21c6800c88f06d7d0683b1535821c75c954ad/a15c84d80becb39347c97704a514feb352452739.patch", 
            "Sieves.2.py": "files/attachments/ticket/cfe/cfe21c6800c88f06d7d0683b1535821c75c954ad/6974db0ad2c6a7f584b04430a214724f718365ba.py", 
            "Sieves.py": "files/attachments/ticket/cfe/cfe21c6800c88f06d7d0683b1535821c75c954ad/a129d25637e3ba6b915af6b58622a09c417a602a.py"
        }
    }, 
    "226": {
        "title": "Type vtable needs types assignments for strict aliasing", 
        "github_issue": 786
    }, 
    "227": {
        "title": "PyBool_CheckExact not defined in c code for python 2.5.4.", 
        "github_issue": 787
    }, 
    "228": {
        "title": "Exceptions get lost inside except blocks when shadowed by exceptions raised by Cython", 
        "github_issue": 788
    }, 
    "229": {
        "title": "Cython % operator on cdef int has C semantics, not Python semantics", 
        "github_issue": 790
    }, 
    "230": {
        "title": "def-to-c(p)def method override in .pxd files fails for subclass methods", 
        "github_issue": 791
    }, 
    "231": {
        "title": "The remaining parts of lexer and parser should get compiled into C code", 
        "github_issue": 792
    }, 
    "232": {
        "title": "result type of calling an extension type is unknown", 
        "github_issue": 793
    }, 
    "233": {
        "title": "Calls to known types need better optimisation support", 
        "github_issue": 794
    }, 
    "234": {
        "title": "Cython must become 2to3 clean to port it to Py3", 
        "github_issue": 795
    }, 
    "235": {
        "title": "Support PEP 3132: Extended Iterable Unpacking", 
        "github_issue": 796
    }, 
    "236": {
        "title": "Python methods on corresponding C types (float/int)", 
        "github_issue": 797
    }, 
    "237": {
        "title": "Large integer constants wrap around or fail to compile", 
        "github_issue": 798
    }, 
    "238": {
        "title": "support __new__() in extension types", 
        "github_issue": 799
    }, 
    "239": {
        "title": "lexicon unpickling", 
        "github_issue": 800
    }, 
    "240": {
        "title": "Invalid syntax leads to cython crash", 
        "github_issue": 801
    }, 
    "241": {
        "title": "cryptic error when keyword arguments used with cdef method", 
        "github_issue": 802
    }, 
    "242": {
        "title": "cryptic error when keyword arguments used with cdef method", 
        "github_issue": 803
    }, 
    "243": {
        "title": "Fix all the loop bugs", 
        "github_issue": 804
    }, 
    "244": {
        "title": "Crash when using \"with gil\" in Py2.3-2.4.1 before threading is initialised", 
        "github_issue": 805
    }, 
    "245": {
        "title": "Compiler crash on invalid code (external structs to object conversion)", 
        "github_issue": 806
    }, 
    "246": {
        "title": "support const keyword on types", 
        "github_issue": 807
    }, 
    "247": {
        "title": "Better error when Python headers not found", 
        "github_issue": 808
    }, 
    "248": {
        "title": "line breaks between imported names", 
        "github_issue": 809
    }, 
    "249": {
        "title": "build overhead", 
        "github_issue": 810, 
        "attachments": {
            "t249.patch": "files/attachments/ticket/ee4/ee44c6bcc4e0dfae682057bafe6d80f880169bd9/508b951985ce3143cc84ad43c3b6dc8d0ed33b4d.patch"
        }
    }, 
    "250": {
        "title": "Traceback method name is wrong for exceptions caught in methods", 
        "github_issue": 811
    }, 
    "251": {
        "title": "Suboptimal code for empty \"except\" blocks", 
        "github_issue": 812
    }, 
    "252": {
        "title": "names of parameters with defaults not mangled in cdef, cpdef functions", 
        "github_issue": 813
    }, 
    "253": {
        "title": "move constant folding before type analysis", 
        "github_issue": 814
    }, 
    "254": {
        "title": "for..from by step doesn't work with floating point steps", 
        "github_issue": 815
    }, 
    "255": {
        "title": "better c int <-> python object conversion", 
        "github_issue": 816, 
        "attachments": {
            "c_int_types.pyx": "files/attachments/ticket/302/3028f51407d83338f72f994bc283572452a877de/c401dbbe5105718afbe6faedc559d8eee504086a.pyx", 
            "NUMERICTYPES.diff": "files/attachments/ticket/302/3028f51407d83338f72f994bc283572452a877de/4cd36a125c3bb43261a197b4b58217c286d72175.diff", 
            "c-int-types.diff": "files/attachments/ticket/302/3028f51407d83338f72f994bc283572452a877de/a79ddf35d88422fb87bc7cd3f28806f72ef6b3f8.diff"
        }
    }, 
    "256": {
        "title": "for..from by step doesn't work with pointers", 
        "github_issue": 817
    }, 
    "257": {
        "title": "create_convert_utility_code() in PyrexTypes needs a rewrite", 
        "github_issue": 818
    }, 
    "258": {
        "title": "redeclaration of builtin types, followup for #170", 
        "github_issue": 726
    }, 
    "259": {
        "title": "future division not respected by C ints (including literals)", 
        "github_issue": 819, 
        "attachments": {
            "division_cint.patch": "files/attachments/ticket/5f5/5f573b82f1da8677c86d695538c530d136b6c489/c2548cf168ef2893170c2f4eda13b59cda2fc31c.patch"
        }
    }, 
    "260": {
        "title": "floor division not respected by c floats", 
        "github_issue": 820
    }, 
    "261": {
        "title": "Cython emits references to std::exception without #include-ing it", 
        "github_issue": 821
    }, 
    "262": {
        "title": "pre-declaring a cdef class without its base type doesn't raise an error", 
        "github_issue": 822
    }, 
    "263": {
        "title": "module local (private) cdef classes", 
        "github_issue": 823
    }, 
    "264": {
        "title": "handle @property decorator", 
        "github_issue": 824
    }, 
    "265": {
        "title": "stdexcept should be added when cpp exception handling used", 
        "github_issue": 825
    }, 
    "266": {
        "title": "builtin exceptions used in except + clauses not getting initalized", 
        "github_issue": 826
    }, 
    "267": {
        "title": "Temp error related to if-else expression", 
        "github_issue": 827
    }, 
    "268": {
        "title": "optimise away redundant None and type checks", 
        "github_issue": 828
    }, 
    "269": {
        "title": "Change command line compiler directive priority", 
        "github_issue": 829
    }, 
    "270": {
        "title": "CEnumDefNode leaks memory during construction", 
        "github_issue": 830
    }, 
    "271": {
        "title": "Module init code doesn't decref new temps on exception", 
        "github_issue": 831
    }, 
    "272": {
        "title": "Missing test: Raising exception from module init code", 
        "github_issue": 832
    }, 
    "273": {
        "title": "nogil check for usage of new temps", 
        "github_issue": 833
    }, 
    "274": {
        "title": "use PY_FORMAT_SIZE_T to format Py_ssize_t values", 
        "github_issue": 834, 
        "attachments": {
            "PY_FORMAT_SIZE_T.diff": "files/attachments/ticket/431/431bf3b995a99c2cd6899b97187d1542a965cec9/225895dd9bb7190c7de7e18cc551af6a6f9f62be.diff"
        }
    }, 
    "275": {
        "title": "fix for \"exec\" statement implementation", 
        "github_issue": 835, 
        "attachments": {
            "exec-statement.diff": "files/attachments/ticket/df5/df518c2e0702a3bec12b032911d3090d9bfef76c/ae484edcead2bec05d4689066c3982c1c04a6798.diff"
        }
    }, 
    "276": {
        "title": "bad code generation for ctypedef classes when initializing 'tp_weaklistoffset' type slot", 
        "github_issue": 836, 
        "attachments": {
            "weakref.diff": "files/attachments/ticket/6d3/6d363479c97439b921ad2bcba054992d8eda9a0c/504f26d69e3ea2cbae680b2885cbf58ab1ecd0e1.diff"
        }
    }, 
    "277": {
        "title": "some tests are cpp specific", 
        "github_issue": 837
    }, 
    "278": {
        "title": "Sage segfaults", 
        "github_issue": 838
    }, 
    "279": {
        "title": "compiler crash on .pxd -> .py definitions", 
        "github_issue": 839
    }, 
    "280": {
        "title": "\"cdef\" statement allows invalid syntax", 
        "github_issue": 840, 
        "attachments": {
            "cdef-syntax.patch": "files/attachments/ticket/ba6/ba613d1fc0d9300175611e31cca7cf9f525056cb/d5eecef9edad7f75806eb65cc9b3de2544b8245b.patch"
        }
    }, 
    "281": {
        "title": "Possible race condition w/ nogil exception propagation", 
        "github_issue": 841
    }, 
    "282": {
        "title": "explore ways to trap SIGFPE instead of doing runtime checks", 
        "github_issue": 842
    }, 
    "283": {
        "title": "cdef inline functions in pxds can't have default arguments", 
        "github_issue": 843
    }, 
    "284": {
        "title": "\"cdef list\" variable generates incorrect PyList_SetItem code", 
        "github_issue": 844
    }, 
    "285": {
        "title": "numpy.pxd: No endianness or packing in buffer format string", 
        "github_issue": 846, 
        "attachments": {
            "patch1": "files/attachments/ticket/367/367ac64a16d19e2afefcf7c5fab8666dda92f9de/5b77236920ce1f89b9f6b0ad44a3220b49fe7b1d"
        }
    }, 
    "286": {
        "title": "error parsing .pxd with derived class", 
        "github_issue": 847
    }, 
    "287": {
        "title": "incorrect C code generated on method assignment", 
        "github_issue": 848, 
        "attachments": {
            "type_slots_int_long.diff": "files/attachments/ticket/f0a/f0a4acfc86dfa0637e085abf0bbaef7bd0ec5aa4/e845194abfca92260442858c988c7e2c28b51578.diff"
        }
    }, 
    "288": {
        "title": "method aliasing via assignment", 
        "github_issue": 849
    }, 
    "289": {
        "title": "make cython natively support embedding", 
        "github_issue": 850
    }, 
    "290": {
        "title": "Support for packed structs", 
        "github_issue": 851
    }, 
    "291": {
        "title": "make embedded mode handle errors better", 
        "github_issue": 852
    }, 
    "292": {
        "title": "Garbage in HTML/annotation in simple example code", 
        "github_issue": 853, 
        "attachments": {
            "matmul_cy.pyx": "files/attachments/ticket/85f/85f1002bf139bebdb7f0d07b31fa14155aea9dfc/ac172e6b87751f06c5bbc569f9484d31ca998390.pyx"
        }
    }, 
    "293": {
        "title": "implement closures", 
        "github_issue": 854
    }, 
    "294": {
        "title": "Document feature: packed struct", 
        "github_issue": 855
    }, 
    "295": {
        "title": "compiler directive to control METH_O and METH_NOARGS flags", 
        "github_issue": 856, 
        "attachments": {
            "always_allow_keywords_T295.diff": "files/attachments/ticket/a02/a02b857f2eff73e8e188f35529dd91f8144b23b9/0d3a0be54e3e2de3b7a9a14814922c8893605efd.diff", 
            "optimize_simple_methods_T295.diff": "files/attachments/ticket/a02/a02b857f2eff73e8e188f35529dd91f8144b23b9/7acb9bb82b8427f449de40254d6a6d2d7927687a.diff"
        }
    }, 
    "296": {
        "title": "Buffers: Copy-in/copy-out of buffers", 
        "github_issue": 857
    }, 
    "297": {
        "title": "Enable for-in-range optimisation also for untyped loop vars", 
        "github_issue": 858, 
        "attachments": {
            "for-in-range-to-C-loop.patch": "files/attachments/ticket/dd5/dd500e1c0fa5792340acd988b4e8a3338cdc609a/69fec8e07e3b06f11f0a16f60224f0d67350e8d2.patch"
        }
    }, 
    "298": {
        "title": "recursive tuple unpacking is broken in 0.11 due to old-style temps", 
        "github_issue": 746
    }, 
    "299": {
        "title": "Buffers: Clean up internal representation of acquired buffers", 
        "github_issue": 859
    }, 
    "300": {
        "title": "Buffers: Acquire through coercion", 
        "github_issue": 861
    }, 
    "301": {
        "title": "Buffers: Store acquired buffers as typed fields in cdef classes + global variables", 
        "github_issue": 862
    }, 
    "302": {
        "title": "Usability problem: Cannot access .shape member of numpy.ndarray as tuple", 
        "github_issue": 863
    }, 
    "303": {
        "title": "extension type member of type numpy.float_t looses its value", 
        "github_issue": 864
    }, 
    "304": {
        "title": "Error reporting: Invalid code crashes Cython", 
        "github_issue": 865
    }, 
    "305": {
        "title": "support for c complex numbers in Cython", 
        "github_issue": 748
    }, 
    "306": {
        "title": "wraparound directive", 
        "github_issue": 866
    }, 
    "307": {
        "title": "Crash on non_existing(None, keyword=3)", 
        "github_issue": 867
    }, 
    "308": {
        "title": "closures for module scope", 
        "github_issue": 868, 
        "attachments": {
            "lambda-module-scope.patch": "files/attachments/ticket/3e0/3e0f83cc51276227de3cfebca941faace8aaa317/46b22b421768747c46c1bd42d1e14346e840129b.patch"
        }
    }, 
    "309": {
        "title": "type of a list/tuple slice is unknown", 
        "github_issue": 869
    }, 
    "310": {
        "title": "Documentation: Buffer slot/PEP 3118 special functions", 
        "github_issue": 870
    }, 
    "311": {
        "title": "Buffers: Acquisition counted buffers", 
        "github_issue": 871
    }, 
    "312": {
        "title": "[with patch] pyximport patch: use distutils.cfg + setup() args in .pyxbld + fast install()", 
        "github_issue": 872, 
        "attachments": {
            "pyxi3.patch": "files/attachments/ticket/a93/a93c168323147d1135503939396cac628dc194c5/d51c75f285aa9934b7b9b24dd2166fd2da61facb.patch", 
            "pyxi2.patch": "files/attachments/ticket/a93/a93c168323147d1135503939396cac628dc194c5/dda9df82d8bc68e756417150e3fa00f031646543.patch", 
            "pyxi.patch": "files/attachments/ticket/a93/a93c168323147d1135503939396cac628dc194c5/40f4b28f93e76d6cd6f80ed60f2b95796fcbd12e.patch"
        }
    }, 
    "313": {
        "title": "Disallow <double*>python_obj cast", 
        "github_issue": 873
    }, 
    "314": {
        "title": "[patch] array.pxd - fast Cython access for Python's builtin array.array", 
        "github_issue": 874, 
        "attachments": {
            "arrayarray.h": "files/attachments/ticket/6e2/6e21fce62b88ee824118ee6f3d791d78a748f9a5/9385f1518d259998c96e112d616927bac622e67c.h", 
            "array_example.pyx": "files/attachments/ticket/6e2/6e21fce62b88ee824118ee6f3d791d78a748f9a5/5bd035df40311381b22970eaceb00d226ae0f8a0.pyx", 
            "array.simple.diff": "files/attachments/ticket/6e2/6e21fce62b88ee824118ee6f3d791d78a748f9a5/85e7e681e419a903d9291549c9b9926903c7f3e9.diff", 
            "array.zip": "files/attachments/ticket/6e2/6e21fce62b88ee824118ee6f3d791d78a748f9a5/725478c8c2b151e4ea09579623d47e93b9f0fef3.zip", 
            "array.pxd": "files/attachments/ticket/6e2/6e21fce62b88ee824118ee6f3d791d78a748f9a5/30d9ef4057aa66869554530cdd682efdc6cf3df8.pxd", 
            "array.2.zip": "files/attachments/ticket/6e2/6e21fce62b88ee824118ee6f3d791d78a748f9a5/bac9808b8579e50af6158349d1358a36e1cb1de4.zip"
        }
    }, 
    "315": {
        "title": "ValueError Exception raised during type checking when mixing bint and ndarray", 
        "github_issue": 875
    }, 
    "316": {
        "title": "optimise enumerate()", 
        "github_issue": 876
    }, 
    "317": {
        "title": "extsetslice testcase fails in Python 3", 
        "github_issue": 877
    }, 
    "318": {
        "title": "Buffers, complex floats and C++ on gcc 4.2.4 fails", 
        "github_issue": 878
    }, 
    "319": {
        "title": "Some testcases fail on py3", 
        "github_issue": 879
    }, 
    "320": {
        "title": "Type checking when casting objects to pointers", 
        "github_issue": 880
    }, 
    "321": {
        "title": "Test suite for pyximport", 
        "github_issue": 881
    }, 
    "322": {
        "title": "Honor distutils dependencies", 
        "github_issue": 882, 
        "attachments": {
            "cython-depend3": "files/attachments/ticket/811/81110df80ca4086e306c4c52ab485a35cf761acc/ef2272cb334eabbe0397dca4111b6e6aea9beebf"
        }
    }, 
    "323": {
        "title": "Allow conditional compilation environment in distutils", 
        "github_issue": 883, 
        "attachments": {
            "cython-cond3": "files/attachments/ticket/cb4/cb4dd52770e258826c4174c36202b18f649e262f/ffacb2544195dcb00db2ae5cdf840d27c1b6505c"
        }
    }, 
    "324": {
        "title": "Wrap docstrings with PyDoc_STRVAR macro.", 
        "github_issue": 884, 
        "attachments": {
            "cython-pydoc3": "files/attachments/ticket/914/914127d1002e9938e2e1ee54cd92fd8195a248b0/353bd29105f534747d7fc053bad812a01a5e8616"
        }
    }, 
    "325": {
        "title": "calling len() on char*", 
        "github_issue": 885
    }, 
    "326": {
        "title": "__hash__ gives runtime error when -1 returned", 
        "github_issue": 886
    }, 
    "327": {
        "title": "cpdef attributes should give an compile-time error", 
        "github_issue": 887
    }, 
    "328": {
        "title": "cython 0.11.2 runtest.py errors on solaris 8 (sparc) due to fmodf()", 
        "github_issue": 888
    }, 
    "329": {
        "title": "gil checks in .pxd files cannot rely on type information", 
        "github_issue": 890
    }, 
    "330": {
        "title": "pxd locals ignored in .py compilation", 
        "github_issue": 891
    }, 
    "331": {
        "title": "use -ansi flag for runtests", 
        "github_issue": 892
    }, 
    "332": {
        "title": "misleading error message for buffer types", 
        "github_issue": 893
    }, 
    "333": {
        "title": "[with patch, positive review] extern ctypedef integral <-> python object conversion", 
        "github_issue": 894, 
        "attachments": {
            "ctypedef_int_types_T333.3.diff": "files/attachments/ticket/438/43814346e21444aaf4f70841bf7ed5ae93f55a9d/352136cfd9bd01c89486a59c7d7485055e3edaa6.diff", 
            "ctypedef_int_types_T333.2.diff": "files/attachments/ticket/438/43814346e21444aaf4f70841bf7ed5ae93f55a9d/24563cd9be48cc238bfaf8831aa3db73b78d5359.diff"
        }
    }, 
    "334": {
        "title": "support duplicating cdef class fields in both pxd and pyx", 
        "github_issue": 895
    }, 
    "335": {
        "title": "Utility code written in Cython", 
        "github_issue": 896
    }, 
    "336": {
        "title": "class decorators (PEP 3129)", 
        "github_issue": 897
    }, 
    "337": {
        "title": "class decorators for cdef classes", 
        "github_issue": 898
    }, 
    "338": {
        "title": "for-from with object argument allowed in nogil mode", 
        "github_issue": 899
    }, 
    "339": {
        "title": "Add library functions to numpy.pxd", 
        "github_issue": 901
    }, 
    "340": {
        "title": "Problem with buffer/memview parsing strategy", 
        "github_issue": 902
    }, 
    "341": {
        "title": "Move Cython-language utility code inclusion to code generation phase", 
        "github_issue": 903
    }, 
    "342": {
        "title": "Templates/memory views: Resolve parser ambiguities at a later stage", 
        "github_issue": 904
    }, 
    "343": {
        "title": "__future__.division doesn't apply to constants and C integers", 
        "github_issue": 905
    }, 
    "344": {
        "title": "Check all possible errors prior to code generation", 
        "github_issue": 906
    }, 
    "345": {
        "title": "Necessary refactoring of mangling methods in Symtab.py", 
        "github_issue": 907
    }, 
    "346": {
        "title": "Exceptions caught and handled in Cython are \"leaked\" into Python", 
        "github_issue": 908
    }, 
    "347": {
        "title": "numpy.complex128_t etc. does not result in a Cython complex type", 
        "github_issue": 910
    }, 
    "348": {
        "title": "warn on unpaired __cinit__ and __dealloc__", 
        "github_issue": 911
    }, 
    "349": {
        "title": "Should extern typedefs require an explicit cast?", 
        "github_issue": 912
    }, 
    "350": {
        "title": "Ship Mark Lodato's Cython Freeze", 
        "github_issue": 913
    }, 
    "351": {
        "title": "switch transform is broken for in-list tests", 
        "github_issue": 914
    }, 
    "352": {
        "title": "Code object support in exec statement", 
        "github_issue": 915, 
        "attachments": {
            "Builtin.diff": "files/attachments/ticket/efb/efbc0848b836a9de4b0c18c93ec052d87647fb06/b10de2ca8abc89235b8674909655a8a8a2a57699.diff"
        }
    }, 
    "353": {
        "title": "[kurt-gsoc branch] Add nice string representation to MemoryViewSliceType", 
        "github_issue": 916
    }, 
    "354": {
        "title": "bint type isn't handled in readonly property access", 
        "github_issue": 917
    }, 
    "355": {
        "title": "Bad ordering in [type ..., object ...] class declaration", 
        "github_issue": 918
    }, 
    "356": {
        "title": "Fix Rectangle Demo in manual and on wiki", 
        "github_issue": 919
    }, 
    "357": {
        "title": "calculate_result_code not implemented", 
        "github_issue": 920
    }, 
    "358": {
        "title": "remove genindex and modindex links in sphinx docs", 
        "github_issue": 921
    }, 
    "359": {
        "title": "allow string -> unsigned char*", 
        "github_issue": 922
    }, 
    "360": {
        "title": "Extern typedef float <-> Python object conversion", 
        "github_issue": 923
    }, 
    "361": {
        "title": "remove is_longlong on PyrexTypes", 
        "github_issue": 924
    }, 
    "362": {
        "title": "PyErr_Restore declaration", 
        "github_issue": 925
    }, 
    "363": {
        "title": "Make sure we handle ob_type->tp_flags inheritance correctly", 
        "github_issue": 926
    }, 
    "364": {
        "title": "Python literals loose their type information during type analysis", 
        "github_issue": 927
    }, 
    "365": {
        "title": "unicode.encode() should call the specific C-API encoding functions", 
        "github_issue": 928
    }, 
    "366": {
        "title": "Error reporting can fail when the code contains Unicode", 
        "github_issue": 929
    }, 
    "367": {
        "title": "Some tests fail in Py 2.4 due to non-portable test code", 
        "github_issue": 930
    }, 
    "368": {
        "title": "Cascading assignments of Python bools are inefficient", 
        "github_issue": 931
    }, 
    "369": {
        "title": "Compiler directive: warning_undeclared", 
        "github_issue": 932
    }, 
    "370": {
        "title": "Unraisable exceptions should be a compile time error whenever possible", 
        "github_issue": 933
    }, 
    "371": {
        "title": "numpy.pxd creates erroneous format string on record dtype", 
        "github_issue": 934
    }, 
    "372": {
        "title": "bug in range optimization", 
        "github_issue": 935
    }, 
    "373": {
        "title": "bug in typed computed default arguments", 
        "github_issue": 936
    }, 
    "374": {
        "title": "Enable profiling of Cython modules", 
        "github_issue": 937
    }, 
    "375": {
        "title": "Many warnings for buffer access.", 
        "github_issue": 789
    }, 
    "376": {
        "title": "More missing files in manifest.in", 
        "github_issue": 938
    }, 
    "377": {
        "title": "cython.locals in pxd broken for pure mode", 
        "github_issue": 939
    }, 
    "378": {
        "title": "Trunk NumPy doesn't work with numpy.pxd", 
        "github_issue": 940
    }, 
    "379": {
        "title": "cython -r recursive option broken", 
        "github_issue": 941
    }, 
    "380": {
        "title": "Integrate \"Fast numerical computations in Cython\" paper into docs", 
        "github_issue": 942
    }, 
    "381": {
        "title": "Integrate \"Cython Tutorial\" paper into docs", 
        "github_issue": 943
    }, 
    "382": {
        "title": "Document compiler directives", 
        "github_issue": 944
    }, 
    "383": {
        "title": "Easy script to build and push documentation.", 
        "github_issue": 945
    }, 
    "384": {
        "title": "floor division on ctypedef-ed type results in non-compilable C code", 
        "github_issue": 946
    }, 
    "385": {
        "title": "Cleanup: Make after_types the default in UtilityCode", 
        "github_issue": 947
    }, 
    "386": {
        "title": "Make complex number type from typedef float", 
        "github_issue": 948
    }, 
    "387": {
        "title": "Make Cython modules work with doctest", 
        "github_issue": 949
    }, 
    "388": {
        "title": "Document the autotestdict directive (#387)", 
        "github_issue": 950
    }, 
    "389": {
        "title": "Temp handling in ForFromStatNode needs cleanup", 
        "github_issue": 951
    }, 
    "390": {
        "title": "[with patch] Make cython_freeze.py executable", 
        "github_issue": 953, 
        "attachments": {
            "make-cython_freeze.py-executable": "files/attachments/ticket/f36/f369b411c5eb95ab252e1ab9de70f787fa720784/bf2bfae78762b198d2d366bca553aaacf9281fb0"
        }
    }, 
    "391": {
        "title": "conjugate() method on complex numbers", 
        "github_issue": 954
    }, 
    "392": {
        "title": "Inplace operators on complex numbers", 
        "github_issue": 955
    }, 
    "393": {
        "title": "[with patch] Set module_is_main = 1 in main(), not globally", 
        "github_issue": 956, 
        "attachments": {
            "0001-set-module_is_main-1-in-main-not-globally.patch": "files/attachments/ticket/b0c/b0c68924acc44f1f1ed598a8b2b2d4568b02dcfc/49cf5acf09efe54944466652f9786190c3e5ce9c.patch"
        }
    }, 
    "394": {
        "title": "[with patch] remove -Wextra empty body warning", 
        "github_issue": 957, 
        "attachments": {
            "0001-fix-Wextra-warning-for-empty-else-body.patch": "files/attachments/ticket/bc6/bc62305b6cff49d43aed5f6550716c89890a3ccc/b75a70d87ab53dbac4ef1a72309a344372acf0bf.patch"
        }
    }, 
    "395": {
        "title": "type-punning warning when accessing built-in types as objects", 
        "github_issue": 958
    }, 
    "396": {
        "title": "Optimise unicode.encode()", 
        "github_issue": 959
    }, 
    "397": {
        "title": "Optimise further list methods", 
        "github_issue": 960
    }, 
    "398": {
        "title": "Seamless C99/C++ complex numbers support", 
        "github_issue": 961, 
        "attachments": {
            "ccomplex.diff": "files/attachments/ticket/103/10309cbe2800a679343754aa99688bac884f9fac/3766145e04055fe83c08fad761c6df1ed5e8a989.diff"
        }
    }, 
    "399": {
        "title": "Let ssize_t be a native type.", 
        "github_issue": 962, 
        "attachments": {
            "add_ssize_t.patch": "files/attachments/ticket/9ed/9ed4f29f8b6857ffe123d6e41d5c699edc0d62a1/46f703d1cad4d2fd217e7645d54332ced56b6ce3.patch"
        }
    }, 
    "400": {
        "title": "Optimize \"int\" when used for \"floor and conversion to integral type\"", 
        "github_issue": 963
    }, 
    "401": {
        "title": "Implement CEP 108: split bytes/str/unicode into separate types", 
        "github_issue": 964
    }, 
    "402": {
        "title": "[with patch] update cython_freeze", 
        "github_issue": 965, 
        "attachments": {
            "0009-freeze-use-optparse-to-parse-arguments.patch": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/24017203e07d9535035d4728de560de0610dae75.patch", 
            "0013-freeze-add-pymain-example.patch": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/e42a0d845aca6794c15acfcf3965093f46cdd60f.patch", 
            "0001-freeze-in-documentation-reference-Demos-freeze.hg": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/4fa2a904f6572f12772e2d873e8a17c63e080d80.hg", 
            "0015-freeze-Makefile-add-target-to-build-README.html.patch": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/28459a6fda425c1503470b4cf393ad87b027e6c3.patch", 
            "freeze-updates.tar.gz": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/ad8b0102b761241af31d03f3ea3f74766546857c.gz", 
            "0005-freeze-remove-mistaken-semicolon.hg": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/6e96998e5a3dba5caf6a25a784bf106edaa6dc67.hg", 
            "0006-freeze-Makefile-only-clean-specific-C-files.hg": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/45152ff24459d21df5cf69ba9d8386628e4d6b1e.hg", 
            "0010-freeze-add-o-option-for-setting-output-file.patch": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/665ac70c7e4ef25aeb93c8a45ba950aed19c3bab.patch", 
            "0002-freeze-rename-cython_freeze.py-to-cython_freeze.hg": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/88a2162bf11d1ffd1a3527a68260748b0058a9c2.hg", 
            "0016-freeze-Makefile-use-fno-strict-aliasing.patch": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/f0468f5ac51cfa316f73967ab16ee41cb579b286.patch", 
            "0004-freeze-fix-cmath.pyx-when-run-as-__main__.hg": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/27169efd667ac0e1ea338a335021515a92fccd17.hg", 
            "0003-freeze-fix-Makefile-s-CYTHON-path.hg": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/3823aa1c98824c96e5f80134e6268de6e9b9ba87.hg", 
            "0014-freeze-rename-README.rst-to-README.txt.patch": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/3fa02ba6a4b1aef387e996a77d8c1069a1e1e50a.patch", 
            "0007-freeze-README-fix-typos-and-mistakes-in-example.hg": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/e099890807d2a1517a491b141c7212aa44b8fec2.hg", 
            "0011-freeze-remove-blank-lines-from-beginning-and-end.patch": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/23becefc543239f6648316e1a1c41d98c4370dc6.patch", 
            "0008-freeze-Makefile-flags-from-distutils.sysconfig.patch": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/8ec9b55c346a63c558903dc49ddbeb610d954fa0.patch", 
            "0012-freeze-add-p-option-for-calling-Py_Main.patch": "files/attachments/ticket/5e6/5e63673cbc075e2d21cef6bde4c591c263380bee/2ce9f8cd9b64c78e03dcb2f4ba38ecd8a2681232.patch"
        }
    }, 
    "403": {
        "title": "bufaccess test leaks memory", 
        "github_issue": 966
    }, 
    "404": {
        "title": "Short-circuit disobeys Python semantics", 
        "github_issue": 967
    }, 
    "405": {
        "title": "[with patch] PyInt functions generate warnings under -Wextra", 
        "github_issue": 968, 
        "attachments": {
            "0001-prevent-warnings-when-compiling-with-gcc-Wextra.patch": "files/attachments/ticket/7ee/7ee51d9582ef3d3b56ec2fc25b77fc147d8563e5/7b8ea06d5a3309150eacbd3234b15d5d06347161.patch"
        }
    }, 
    "406": {
        "title": "Some identifier names/string constants can lead to C name redefinition", 
        "github_issue": 969
    }, 
    "407": {
        "title": "Public module C-API is broken under Python 3.2", 
        "github_issue": 970, 
        "attachments": {
            "capi-import-export.diff": "files/attachments/ticket/e6d/e6de89674d9f1d7968a70dad4f41b844965b4fdc/1bbf2dd868a71a7d43de64f1551386cf7e525e9f.diff"
        }
    }, 
    "408": {
        "title": "Support tuple unpacking in calls to C function", 
        "github_issue": 971
    }, 
    "409": {
        "title": "bug in extended sequence unpacking", 
        "github_issue": 972
    }, 
    "410": {
        "title": "Investigate element.pxd note", 
        "github_issue": 973
    }, 
    "411": {
        "title": "bug in cpdef temp allocation", 
        "github_issue": 974
    }, 
    "412": {
        "title": "char comparison stopped working", 
        "github_issue": 975
    }, 
    "413": {
        "title": "option -> directive rename in codebase", 
        "github_issue": 976, 
        "attachments": {
            "option2directive.patch": "files/attachments/ticket/571/5715aa02de07dc08f6197a5850b92d7640766663/93716f2f8185120c107adc2614b46573846064ff.patch"
        }
    }, 
    "414": {
        "title": "Remove TempNode", 
        "github_issue": 977
    }, 
    "415": {
        "title": "boolean and/or disobey Python semantics", 
        "github_issue": 978
    }, 
    "416": {
        "title": "Declarations in Cython/Includes/ need a cleanup", 
        "github_issue": 979
    }, 
    "417": {
        "title": "extension type cast should reject None", 
        "github_issue": 980, 
        "attachments": {
            "typetest.diff": "files/attachments/ticket/4dc/4dc77829a69518101f9a97ef4257e3a7820944d2/4b146f7f108ff24b52554467c651383468c7869d.diff"
        }
    }, 
    "418": {
        "title": "Wrong error message for missing cimport", 
        "github_issue": 981
    }, 
    "419": {
        "title": "numpy.pxd has typo: PyArray_ISISCONTIGUOUS", 
        "github_issue": 982, 
        "attachments": {
            "numpy.pxd-fix-typo-PyArray_ISISCONTIGUOUS.patch": "files/attachments/ticket/1f0/1f0037c5e92481b35c84bc22d7e8f69c34365430/4f851266b2eee7af2f2f93cce9e6fc1b153d3dd1.patch"
        }
    }, 
    "420": {
        "title": "numpy.pxd: add NPY_UINT64 and family", 
        "github_issue": 983, 
        "attachments": {
            "numpy.pxd-add-NPY_UINT64-and-family.patch": "files/attachments/ticket/7a9/7a95563490d87e3621966d553f06078acb822585/648772a7821bd74bc07badd337289dc913e266f2.patch"
        }
    }, 
    "421": {
        "title": "docstrings on \"__nonzero__()\" method break module-init code in Py3.1", 
        "github_issue": 984
    }, 
    "422": {
        "title": "bug in setting __module__", 
        "github_issue": 985, 
        "attachments": {
            "fix_T422.patch": "files/attachments/ticket/020/020c4877362530fccadf006a858f56ee9637177d/625ec3ad32c1898cd198c82575ef3682190e5ba0.patch"
        }
    }, 
    "423": {
        "title": "Support explicit exception chaining syntax (PEP 3134)", 
        "github_issue": 986
    }, 
    "424": {
        "title": "'buffer' test crashes in Py3.1.1", 
        "github_issue": 987
    }, 
    "425": {
        "title": "Drop redundant ref-counting on parallel swap assignments", 
        "github_issue": 988
    }, 
    "426": {
        "title": "Split parallel assignments into optimisable subsets", 
        "github_issue": 989
    }, 
    "427": {
        "title": "error in exception c++ propagation", 
        "github_issue": 990
    }, 
    "428": {
        "title": "cython-closures branch has ref-counting issues", 
        "github_issue": 991
    }, 
    "429": {
        "title": "locals() cannot be overridden", 
        "github_issue": 992
    }, 
    "430": {
        "title": "locals() doesn't always work inside of expressions", 
        "github_issue": 993
    }, 
    "431": {
        "title": "intern doesn't work for python strings", 
        "github_issue": 845
    }, 
    "432": {
        "title": "intern() doesn't handle char* properly", 
        "github_issue": 994
    }, 
    "433": {
        "title": "Python classes defining __slots__ should automatically compile to extension classes", 
        "github_issue": 995
    }, 
    "434": {
        "title": "main() function generated by --embed doesn't compile in Py3", 
        "github_issue": 996
    }, 
    "435": {
        "title": "in-place division is broken in Py3.1", 
        "github_issue": 997
    }, 
    "436": {
        "title": "Efficiently support \"char*.decode()\"", 
        "github_issue": 998
    }, 
    "437": {
        "title": "Efficiently support \"for c in c_charptr[:300]\"", 
        "github_issue": 999
    }, 
    "438": {
        "title": "Drop ref-counting for list index access", 
        "github_issue": 1000
    }, 
    "439": {
        "title": "freeze and --embed fixes for Py3", 
        "github_issue": 1001, 
        "attachments": {
            "freeze_updates.hg": "files/attachments/ticket/0fd/0fdf6a63ef21d8a712f68633ace5ce08cd1914ac/bc970eeb0255b61a7188829d1ff6aacff057a007.hg"
        }
    }, 
    "440": {
        "title": "Syntax highlighting for KATE", 
        "github_issue": 860
    }, 
    "441": {
        "title": "Coercing float typedef to complex creates erronous C code", 
        "github_issue": 1002
    }, 
    "442": {
        "title": "enumerate optimization broken for non-object target", 
        "github_issue": 1003
    }, 
    "443": {
        "title": "Replace PY_NEW() hack by a an internal optimisation", 
        "github_issue": 1004
    }, 
    "444": {
        "title": "When no buffers are assigned to, utility code is missing", 
        "github_issue": 1005
    }, 
    "445": {
        "title": "Explicit conversion to complex numbers", 
        "github_issue": 1006
    }, 
    "446": {
        "title": "non-floating point complex support", 
        "github_issue": 1007
    }, 
    "447": {
        "title": "Optimize list.pop()", 
        "github_issue": 1008
    }, 
    "448": {
        "title": "add embedding to the test suite", 
        "github_issue": 1009
    }, 
    "449": {
        "title": "fix or disable forking for tests", 
        "github_issue": 1010
    }, 
    "450": {
        "title": "Different float string representations on Windows", 
        "github_issue": 1011
    }, 
    "451": {
        "title": "Missing cast for numpy array slicing in C++ Mode", 
        "github_issue": 1012
    }, 
    "452": {
        "title": "embedding test fails in OS X 10.6", 
        "github_issue": 1013
    }, 
    "453": {
        "title": "easier eggification", 
        "github_issue": 1014, 
        "attachments": {
            "eggify.patch": "files/attachments/ticket/4ac/4ac2bbff5b524a7870db72e80334fa26fee02817/a528571bcee2b5416e1bae2ede6a32e12037ac18.patch"
        }
    }, 
    "454": {
        "title": "@classmethod implementation leaves first argument with incorrect type", 
        "github_issue": 1015
    }, 
    "455": {
        "title": "implementation of 'not in' is broken", 
        "github_issue": 1016, 
        "attachments": {
            "contains.diff": "files/attachments/ticket/b02/b02b70815b8520a272deb770f0bd96f6ab0a8257/3ca13bb4881bb569cc342c263d078314e424cba1.diff"
        }
    }, 
    "456": {
        "title": "Reduce overhead on Python-free 'finally' blocks", 
        "github_issue": 1017
    }, 
    "457": {
        "title": "decorator directives don't propagate through the environment", 
        "github_issue": 1018
    }, 
    "458": {
        "title": "Remove .hg repo from sdist", 
        "github_issue": 1019
    }, 
    "459": {
        "title": "Better support for writing var args functions. (va_start, va_arg, etc.)", 
        "github_issue": 1020
    }, 
    "460": {
        "title": "Always type-infer floating point types", 
        "github_issue": 1021
    }, 
    "461": {
        "title": "Redeclared builtin types break type inference", 
        "github_issue": 1022
    }, 
    "462": {
        "title": "method(*args) fails to compile in cdef classes", 
        "github_issue": 1023
    }, 
    "463": {
        "title": "cython.typeof() does not work on expressions", 
        "github_issue": 1024
    }, 
    "464": {
        "title": "Internal compiler error: EvalWithTempExprNode.infer_type not implemented", 
        "github_issue": 1025
    }, 
    "465": {
        "title": "fix scoping for comprehensions and generator expressions", 
        "github_issue": 1026
    }, 
    "466": {
        "title": "cascaded list unpacking into typed targets crashes", 
        "github_issue": 1027
    }, 
    "467": {
        "title": "cascaded assignments mixed with complete sequence assignments have side-effects", 
        "github_issue": 1028
    }, 
    "468": {
        "title": "Add note about numpy.get_include to the docs.", 
        "github_issue": 889
    }, 
    "469": {
        "title": "Dependency graph for output of types and utility code", 
        "github_issue": 1029
    }, 
    "470": {
        "title": "In Py>=2.6, kwargs can be general mappings", 
        "github_issue": 1030
    }, 
    "471": {
        "title": "Allow public enum type fields for cdef classes", 
        "github_issue": 1031
    }, 
    "472": {
        "title": "builtins caching happens too early, before the optimisation phase", 
        "github_issue": 1032
    }, 
    "473": {
        "title": "cython 0.12 bug for microsoft visual studio 2008 compiler", 
        "github_issue": 1033
    }, 
    "474": {
        "title": "support non-overridable 'inline' methods", 
        "github_issue": 1034
    }, 
    "475": {
        "title": "__file__ variable not available in module init", 
        "github_issue": 1035
    }, 
    "476": {
        "title": "xrange() is not supported in Py3", 
        "github_issue": 1036
    }, 
    "477": {
        "title": "@cython.locals() don't propagate to cdef function signature", 
        "github_issue": 1038
    }, 
    "478": {
        "title": "Cython closures not bound as methods", 
        "github_issue": 900
    }, 
    "479": {
        "title": "more flexible directives", 
        "github_issue": 1039
    }, 
    "480": {
        "title": "Compiler crash using float() as cast", 
        "github_issue": 1040
    }, 
    "481": {
        "title": "protect definition of INLINE and fix for MSVC", 
        "github_issue": 1042
    }, 
    "482": {
        "title": "Rename INLINE to CYTHON_INLINE", 
        "github_issue": 1043
    }, 
    "483": {
        "title": "There should be a mode to see what the type inferencer infers", 
        "github_issue": 1044
    }, 
    "484": {
        "title": "boundscheck directive should work for lists and tuples as well as buffers", 
        "github_issue": 1045
    }, 
    "485": {
        "title": "optimized float() call, avoiding python if input is C numeric", 
        "github_issue": 1046
    }, 
    "486": {
        "title": "less strict size checking for external types", 
        "github_issue": 1047
    }, 
    "487": {
        "title": "Py3 syntax: 'with' statment with multiple managers", 
        "github_issue": 1048
    }, 
    "488": {
        "title": "Py3 syntax: Ellipsis ('...')", 
        "github_issue": 1049
    }, 
    "489": {
        "title": "Redefinition of Python functions", 
        "github_issue": 1050, 
        "attachments": {
            "allow-function-redefine.patch": "files/attachments/ticket/343/343ae8e26ca054cfcc1f6cbfe5781dddc9059adc/c10e630a42bef7d94dc5a032c115d6a256ac4f7e.patch"
        }
    }, 
    "490": {
        "title": "Py3 syntax: support 'nonlocal' scope", 
        "github_issue": 1051
    }, 
    "491": {
        "title": "Implement generator expressions", 
        "github_issue": 1052
    }, 
    "492": {
        "title": "Support for Py3 function annotations", 
        "github_issue": 1053
    }, 
    "493": {
        "title": "Support Py3 octal/binary number notations", 
        "github_issue": 909
    }, 
    "494": {
        "title": "Cython functions not bound as methods", 
        "github_issue": 1054
    }, 
    "495": {
        "title": "demo for library linking", 
        "github_issue": 1055
    }, 
    "496": {
        "title": "Cython complex numbers fail on Solaris with GCC", 
        "github_issue": 1056
    }, 
    "497": {
        "title": "Improve Cython __test__ dict implementation", 
        "github_issue": 1057
    }, 
    "498": {
        "title": "Support for borrowed references", 
        "github_issue": 1058
    }, 
    "499": {
        "title": "complex numpy arithmatic", 
        "github_issue": 1059
    }, 
    "500": {
        "title": "Hex compile time constants", 
        "github_issue": 1060
    }, 
    "501": {
        "title": "cython.operators module", 
        "github_issue": 1061
    }, 
    "502": {
        "title": "Tests fail on ppc", 
        "github_issue": 1062
    }, 
    "503": {
        "title": "Dissallow C++ classes as cdef class members", 
        "github_issue": 1063
    }, 
    "504": {
        "title": "Dissallow C++ classes as stack/module level variables", 
        "github_issue": 1064
    }, 
    "505": {
        "title": "\"cimport cython\" broken in latest cython-devel", 
        "github_issue": 1065
    }, 
    "506": {
        "title": "doctest failure in cpp_classes.pyx", 
        "github_issue": 1066, 
        "attachments": {
            "cython_trac_506.patch": "files/attachments/ticket/e40/e408d89ae85c9a0b6deaeeec2a3cf7eb0cf9c5fd/d8a3f50af3e5c218291a89c8d7c39decef40a592.patch"
        }
    }, 
    "507": {
        "title": "for-in loop over any C array type", 
        "github_issue": 1067
    }, 
    "508": {
        "title": "__test__ dictionary may not created for modules with pxd files", 
        "github_issue": 1068
    }, 
    "509": {
        "title": "Error for local/cclass reference variables", 
        "github_issue": 1069
    }, 
    "510": {
        "title": "Uncompileable C code when combining & with buffer []", 
        "github_issue": 1070
    }, 
    "511": {
        "title": "Inline functions  in pxd files get wrong directives", 
        "github_issue": 1071
    }, 
    "512": {
        "title": "parser bug for mismatches in function arguments with default value", 
        "github_issue": 1072
    }, 
    "513": {
        "title": "Infer return types of cdef functions", 
        "github_issue": 1073
    }, 
    "514": {
        "title": "Buffers: Some forms of C/Fortran contiguous buffers not acquired", 
        "github_issue": 1074
    }, 
    "515": {
        "title": "Support 'print >> stream'", 
        "github_issue": 1075
    }, 
    "516": {
        "title": "from __future__ import print_function (Py2.6+ only)", 
        "github_issue": 1076
    }, 
    "517": {
        "title": "remove dependency on structmember.h", 
        "github_issue": 1077, 
        "attachments": {
            "cdef_members.diff": "files/attachments/ticket/142/142e9ae35ca000441e9ea0566bb96694ed97d0bc/7486caf1dfc56399c1e4c32895ce332eb8eeb680.diff"
        }
    }, 
    "518": {
        "title": "casting to typedef pointer/array types", 
        "github_issue": 1078, 
        "attachments": {
            "cast_ctypedef_array.diff": "files/attachments/ticket/048/0486ffb0d9c84cf1c38a7024c5284f0a2c411070/4cae7729cfe27a7c3bf0dbecbe457258201bc8ab.diff"
        }
    }, 
    "519": {
        "title": "Python 3 except clauses", 
        "github_issue": 1079
    }, 
    "520": {
        "title": "Cython can't parse source files with DOS line endings correctly", 
        "github_issue": 1080
    }, 
    "521": {
        "title": "Optimise various \"unicode\" type methods", 
        "github_issue": 1081
    }, 
    "522": {
        "title": "Decorator directives does not work with c(p)def functions", 
        "github_issue": 1082
    }, 
    "523": {
        "title": "Compiler crash in C++ declarations", 
        "github_issue": 1083, 
        "attachments": {
            "badmat.pyx": "files/attachments/ticket/8de/8de23aaaec61b2cba81bd155ea66322737dea7d8/299ab903a32d2852e2171a1c57d7ae767508466d.pyx", 
            "badmat.h": "files/attachments/ticket/8de/8de23aaaec61b2cba81bd155ea66322737dea7d8/d3b1162d0eb53a2a06f468f585d56b91429d47e3.h"
        }
    }, 
    "524": {
        "title": "C++ Wrapper Error: C++ code generation Error", 
        "github_issue": 1084, 
        "attachments": {
            "badmat.pyx": "files/attachments/ticket/663/6632e7ca34bf65b81cadd060000fa794dc91938f/299ab903a32d2852e2171a1c57d7ae767508466d.pyx", 
            "badmat.h": "files/attachments/ticket/663/6632e7ca34bf65b81cadd060000fa794dc91938f/d3b1162d0eb53a2a06f468f585d56b91429d47e3.h"
        }
    }, 
    "525": {
        "title": "Floating point constants not preserved perfectly to C source", 
        "github_issue": 1085
    }, 
    "526": {
        "title": "Error testing for overridden methods", 
        "github_issue": 1086
    }, 
    "527": {
        "title": "Fix for annotation including external .pxd code", 
        "github_issue": 1087, 
        "attachments": {
            "annotatefix": "files/attachments/ticket/22a/22ab0e4326f1e9096ffc3217cd20a17829a5c486/93c0a47e669c750625b4714b2b488e6a0ef3d588"
        }
    }, 
    "528": {
        "title": "x.conjugate() not available in nogil mode", 
        "github_issue": 1088
    }, 
    "529": {
        "title": "Support Py_UNICODE and coercion from 1-character unicode literals", 
        "github_issue": 1089
    }, 
    "530": {
        "title": "Efficient Py_UNICODE iteration over unicode strings", 
        "github_issue": 1090
    }, 
    "531": {
        "title": "Implement \"char_val in b'abcdefg'\" and \"py_unicode_val in u'abcdefg'\" efficiently", 
        "github_issue": 1091
    }, 
    "532": {
        "title": "Constant folding can lead to incorrect results in conditions", 
        "github_issue": 1092
    }, 
    "533": {
        "title": "reference leak when 'continue' appear in a loop's 'else' branch", 
        "github_issue": 1093
    }, 
    "534": {
        "title": "Optimise any(genexpr) and all(genexp)", 
        "github_issue": 1094
    }, 
    "535": {
        "title": "Optimise indexed unicode character comparisons (ustring[0] == u'a')", 
        "github_issue": 1095
    }, 
    "536": {
        "title": "with statements crashes Cython in module scope", 
        "github_issue": 1096
    }, 
    "537": {
        "title": "Closure inner function name conflict", 
        "github_issue": 1097
    }, 
    "538": {
        "title": "Various issues with integer literals.", 
        "github_issue": 1098
    }, 
    "539": {
        "title": "range function regression", 
        "github_issue": 1099
    }, 
    "540": {
        "title": "-3 compiler switch to enable Python 3 syntax/semantics", 
        "github_issue": 1100
    }, 
    "541": {
        "title": "Exception catching semantic change in Python 3", 
        "github_issue": 1101
    }, 
    "542": {
        "title": "Support for relative import", 
        "github_issue": 1102
    }, 
    "543": {
        "title": "cython-closures has Py3 issues", 
        "github_issue": 1103
    }, 
    "544": {
        "title": "FlattenInListTransform breaks code with side-effects", 
        "github_issue": 1104
    }, 
    "545": {
        "title": "Compiler crash with C++ templates/buffers", 
        "github_issue": 1105
    }, 
    "546": {
        "title": "range(a,b,c) not optimized for (at compile time) unknown step value", 
        "github_issue": 1106
    }, 
    "547": {
        "title": "Cython crashes compiling source files from pathnames with non-platform encodings", 
        "github_issue": 1107
    }, 
    "548": {
        "title": "Wrong code generated for type-casting to C++ reference", 
        "github_issue": 1108
    }, 
    "549": {
        "title": "Compiler crash when a template argument is a non-declared object", 
        "github_issue": 1109
    }, 
    "550": {
        "title": "Cython can generate incorrect c++ code when a function uses a reference argument", 
        "github_issue": 1110
    }, 
    "551": {
        "title": "Cython does not allow ctypedef'ing templated types", 
        "github_issue": 1111
    }, 
    "552": {
        "title": "Unable to use templated class as base class in C++ inheritance", 
        "github_issue": 1112, 
        "attachments": {
            "cppclass_template_base.patch": "files/attachments/ticket/f53/f53eac2e4221f1794509de8d786a143b5016901f/186379fa0077f470677f09696cc2fed77a423e9c.patch"
        }
    }, 
    "553": {
        "title": "Make inferring Python str type unsafe", 
        "github_issue": 1113
    }, 
    "554": {
        "title": "Closures generated from cdef functions have issues", 
        "github_issue": 1114
    }, 
    "555": {
        "title": "Documentation bug in \"Using C Libraries\"", 
        "github_issue": 1115
    }, 
    "556": {
        "title": "Disable closures in cdef functions (for now)", 
        "github_issue": 1116
    }, 
    "557": {
        "title": "Install Include/Deprecated directory.", 
        "github_issue": 1117
    }, 
    "558": {
        "title": "Break up Cython/Includes directory into submodules.", 
        "github_issue": 1118
    }, 
    "559": {
        "title": "<void *> [] is not caught by Cython but by gcc", 
        "github_issue": 1119
    }, 
    "560": {
        "title": "Distutils changes: make .c readonly & abort on errors", 
        "github_issue": 1120, 
        "attachments": {
            "distutils.diff": "files/attachments/ticket/845/84582c1dbe026475319df14c19967d1dd0bf751f/1bfddd78b8f1a73541b08483bfc36c425862a1fb.diff"
        }
    }, 
    "561": {
        "title": "major performance bug with special functions", 
        "github_issue": 1121, 
        "attachments": {
            "trac_561-test-suite.patch": "files/attachments/ticket/77c/77c8184f671aa0397dd897541ed5ec0a8be0380b/be81e767b841c46f3308f60bfe89a1efb09fd73c.patch", 
            "trac_561-python3-doctest-fixes.patch": "files/attachments/ticket/77c/77c8184f671aa0397dd897541ed5ec0a8be0380b/201bb835e83ca0ae632bab0878aac53d71d2be21.patch", 
            "trac_561-cython-special-functions.patch": "files/attachments/ticket/77c/77c8184f671aa0397dd897541ed5ec0a8be0380b/65a08bc1265db3f39a8cbbd2f6aec8cbe81f476a.patch"
        }
    }, 
    "562": {
        "title": "__ipow__ method must ignore its third argument", 
        "github_issue": 1122, 
        "attachments": {
            "trac_562-ipow-crash.patch": "files/attachments/ticket/904/904f2cc1c3677bb35876e91f4716341c06769cc6/01e3fb62f5713bcdc9911664b064fccd7a710670.patch"
        }
    }, 
    "563": {
        "title": "\"make repo\" is broken", 
        "github_issue": 1123, 
        "attachments": {
            "hgrev.patch": "files/attachments/ticket/68b/68b7933743e4841afc42c7b7eb5b4974a1070228/2a0a92571324e2dd9a1c9be9203499239685c57e.patch"
        }
    }, 
    "564": {
        "title": "refcount bug in isinstance optimization", 
        "github_issue": 1124
    }, 
    "565": {
        "title": "Enable/disable optimizations", 
        "github_issue": 1125
    }, 
    "566": {
        "title": "Code generated for __getslice__ fails to build in Py3", 
        "github_issue": 1126, 
        "attachments": {
            "trac_566-no-py3-getslice.patch": "files/attachments/ticket/cea/ceab25abfedcba417c7cade07076c93c1cdacc44/f851bdc43f17ae6ebb26a57e3ea6ebacd794e8e7.patch"
        }
    }, 
    "567": {
        "title": "super doesn't work with cpdef methods", 
        "github_issue": 1127
    }, 
    "568": {
        "title": "Restore special method docstrings.", 
        "github_issue": 1128
    }, 
    "569": {
        "title": "New special method code breaks __getattr__ and module initialisation", 
        "github_issue": 1129
    }, 
    "570": {
        "title": "Bad parsing for operator identifier.", 
        "github_issue": 1130
    }, 
    "571": {
        "title": "Methods overridden in Builtin.py fail to test for None", 
        "github_issue": 1131
    }, 
    "572": {
        "title": "study alternatives to PyType_IsSubtype", 
        "github_issue": 1132
    }, 
    "573": {
        "title": "Mismatched c ptr types warning in closures when using cdef classes", 
        "github_issue": 1133
    }, 
    "574": {
        "title": "unoptimised C array iteration can generate non-functional code", 
        "github_issue": 1134
    }, 
    "575": {
        "title": "Python 3 inferred unicode literals cannot coerce to char*", 
        "github_issue": 1135
    }, 
    "576": {
        "title": "'str' should be an alias for 'unicode' in Python 3 code", 
        "github_issue": 1136
    }, 
    "577": {
        "title": "Compiler crash in pointer slicing iteration", 
        "github_issue": 952
    }, 
    "578": {
        "title": "crash in Py3 with non-sliceable slices", 
        "github_issue": 1137
    }, 
    "579": {
        "title": "compiler crash on invalid buffer type", 
        "github_issue": 1138
    }, 
    "580": {
        "title": "Buffer code aborts on first error", 
        "github_issue": 1139
    }, 
    "581": {
        "title": "bad reference type coercion", 
        "github_issue": 1140
    }, 
    "582": {
        "title": "comparison operators on char* literals should compare strings, not pointers", 
        "github_issue": 1141
    }, 
    "583": {
        "title": "Wrong C code generated (cdef class < cdef class inheritance, cpdef methods, pure python mode)", 
        "github_issue": 1142, 
        "attachments": {
            "partial-fix-for-ticket-583-Wrong-C-code-generated.patch": "files/attachments/ticket/9c6/9c676e003b8932ac49d4d3a18467c0b59e3e3fb6/61640bdb7635e5640f63cb33482a5c804d459a14.patch", 
            "run.py": "files/attachments/ticket/9c6/9c676e003b8932ac49d4d3a18467c0b59e3e3fb6/806d6ceb4e60342798038124ccf7dc1a423a4433.py", 
            "puremodeinherit.py": "files/attachments/ticket/9c6/9c676e003b8932ac49d4d3a18467c0b59e3e3fb6/b46a3408cf2247307b44dd07f40cb36fdf54776b.py", 
            "puremodeinherit.pxd": "files/attachments/ticket/9c6/9c676e003b8932ac49d4d3a18467c0b59e3e3fb6/01c3a65c72664aab9a1c5213115dc337064142c2.pxd"
        }
    }, 
    "584": {
        "title": "Bind names of module level Python functions at definition time, not globally", 
        "github_issue": 1143
    }, 
    "585": {
        "title": "Support \"final\" cdef classes", 
        "github_issue": 1144
    }, 
    "586": {
        "title": "Support \"final\" methods in non-final cdef classes", 
        "github_issue": 1145
    }, 
    "587": {
        "title": "Support __metaclass__ in Python classes", 
        "github_issue": 1146, 
        "attachments": {
            "metaclass-001.diff": "files/attachments/ticket/e4d/e4dd8a3f00e999f798719337af6085d777f539d5/afee0ddbd7c175796c168dfdb9ea32f1b8066206.diff", 
            "metaclass-py3.diff": "files/attachments/ticket/e4d/e4dd8a3f00e999f798719337af6085d777f539d5/c17797938d1c8c3b047d81f09e1132ea81466b08.diff", 
            "py3-prepare.3.patch": "files/attachments/ticket/e4d/e4dd8a3f00e999f798719337af6085d777f539d5/d68d452081cecaff0afad673968a61076eee0149.patch", 
            "py3-prepare.patch": "files/attachments/ticket/e4d/e4dd8a3f00e999f798719337af6085d777f539d5/e86de814573f9d1b3be0096b0999fd47771c035e.patch", 
            "metaclass-002.patch": "files/attachments/ticket/e4d/e4dd8a3f00e999f798719337af6085d777f539d5/3368d79e7b5da83c43e23f85cd47f0094d1ecae5.patch", 
            "metaclass-try000.diff": "files/attachments/ticket/e4d/e4dd8a3f00e999f798719337af6085d777f539d5/a14bfcdc4091d36f8485aab676cecb7d0c2b62ca.diff", 
            "py3-prepare.2.patch": "files/attachments/ticket/e4d/e4dd8a3f00e999f798719337af6085d777f539d5/4660f1e6d050d3560f6c8017bb7120a1481f20f9.patch"
        }
    }, 
    "588": {
        "title": "Octal integers do not work as Python integers", 
        "github_issue": 1147
    }, 
    "589": {
        "title": "optimised builtin methods are not assignable as bound methods", 
        "github_issue": 1148
    }, 
    "590": {
        "title": "dict.keys/values/items() return lists in -3 mode", 
        "github_issue": 1149
    }, 
    "591": {
        "title": "Inline operators don't respect cdivision pragma.", 
        "github_issue": 1150
    }, 
    "592": {
        "title": "Large integer literals/constants can generate invalid C code", 
        "github_issue": 1151
    }, 
    "593": {
        "title": "Decorators implementation", 
        "github_issue": 1152, 
        "attachments": {
            "testcase.patch": "files/attachments/ticket/620/620807a1bbd690fc48597698e7f449e961505536/815977d942808e9cb6030a174a9bf66ef1d8115a.patch"
        }
    }, 
    "594": {
        "title": "Compiler crash on import before cimport", 
        "github_issue": 1153
    }, 
    "595": {
        "title": "Bug in with/in transforms.", 
        "github_issue": 1154
    }, 
    "596": {
        "title": "Closures for class methods and nested classes", 
        "github_issue": 1155, 
        "attachments": {
            "class-closure.patch": "files/attachments/ticket/ad1/ad1bf290f3ae791d4ca98700eafe4daf341b103c/3c9ff826ebfa8e84d9fb3f76b541929e2675cc7b.patch", 
            "runtests-check-threads.patch": "files/attachments/ticket/ad1/ad1bf290f3ae791d4ca98700eafe4daf341b103c/fe318f23091f0c66798917ffaa3ae6391b729841.patch"
        }
    }, 
    "597": {
        "title": "NumPy + Cython + Python 3 = compiler crash", 
        "github_issue": 1156
    }, 
    "598": {
        "title": "generator expressions do not work in closures", 
        "github_issue": 1157
    }, 
    "599": {
        "title": "Closure optimization", 
        "github_issue": 1158, 
        "attachments": {
            "closure-optimization.patch": "files/attachments/ticket/13b/13b724905530d4de5bfaeb714bc2c7f1f2ee2992/c168d1af11c41005fe385e6f1c24d563c8de0003.patch"
        }
    }, 
    "600": {
        "title": "lookup of iterables in genexpr uses wrong scope", 
        "github_issue": 1159
    }, 
    "601": {
        "title": "Clean up node juggling during code generation in ForFromStatNode", 
        "github_issue": 1160
    }, 
    "602": {
        "title": "negative indexing into bytes objects can generate incorrect C code", 
        "github_issue": 1161
    }, 
    "603": {
        "title": "Support lambda in module scope", 
        "github_issue": 1162, 
        "attachments": {
            "lambda-module-scope.patch": "files/attachments/ticket/8d2/8d255e1e608e20d07f0fcfbcb95bc14abffba589/46b22b421768747c46c1bd42d1e14346e840129b.patch"
        }
    }, 
    "604": {
        "title": "\"from ... import *\" has refcounting issues", 
        "github_issue": 1163
    }, 
    "605": {
        "title": "Lamba support in class scope and cclass scope.", 
        "github_issue": 1164, 
        "attachments": {
            "lambda-class-support.patch": "files/attachments/ticket/829/8290abc6c261e044710e7d616082ab51cb377262/6573ef120d9f8fde853a1d72022da195763abc6e.patch"
        }
    }, 
    "606": {
        "title": "references in scoped expressions (comprehensions/genexprs) are freed too late", 
        "github_issue": 1165
    }, 
    "607": {
        "title": "Support accessing CPython's inner struct fields on builtin objects", 
        "github_issue": 1166
    }, 
    "608": {
        "title": "Support extension type inheritance from builtin types", 
        "github_issue": 1167
    }, 
    "609": {
        "title": "Replace Python's builtin \"complex\" type by the corresponding C complex type", 
        "github_issue": 1168
    }, 
    "610": {
        "title": "Compiler crash on --no-docstrings", 
        "github_issue": 1169
    }, 
    "611": {
        "title": "typing a variable as builtin \"slice\" is broken", 
        "github_issue": 1170
    }, 
    "612": {
        "title": "sum(genexpr) can crash for some types of iteration", 
        "github_issue": 1171
    }, 
    "613": {
        "title": "the right side of parallel assignments is evaluated in reverse order", 
        "github_issue": 1172
    }, 
    "614": {
        "title": "Constant folding fails for math on bool values", 
        "github_issue": 1173
    }, 
    "615": {
        "title": "subsequent Cython runs can fail to detect errors after a compile error in one run", 
        "github_issue": 1174
    }, 
    "616": {
        "title": "Implement sorted(genexpr)", 
        "github_issue": 1175
    }, 
    "617": {
        "title": "Cache constant tuples", 
        "github_issue": 1176
    }, 
    "618": {
        "title": "List comprehensions do not work as conditions in if statements", 
        "github_issue": 1177
    }, 
    "619": {
        "title": "Integer literals are not handled correctly per Python language level", 
        "github_issue": 1178
    }, 
    "620": {
        "title": "Support next() in Python 2.x", 
        "github_issue": 1179
    }, 
    "621": {
        "title": "Support nogil in pure Python mode", 
        "github_issue": 1180
    }, 
    "622": {
        "title": "be more selective about adding docstrings to __test__", 
        "github_issue": 1181
    }, 
    "623": {
        "title": "Support \"internal\" extension classes that do not get exported by the module", 
        "github_issue": 1182
    }, 
    "624": {
        "title": "end-to-end build test infrastructure, source trees", 
        "github_issue": 1183
    }, 
    "625": {
        "title": "pow(float, -) broken in MSVC", 
        "github_issue": 1184
    }, 
    "626": {
        "title": "complex powers", 
        "github_issue": 1185
    }, 
    "627": {
        "title": "'in' and 'not in' operators on C array/ptr slices", 
        "github_issue": 1186
    }, 
    "628": {
        "title": "inline/compile operator", 
        "github_issue": 1187
    }, 
    "629": {
        "title": "cython module dependency analysis", 
        "github_issue": 1188
    }, 
    "630": {
        "title": "Fix Cython to work with Numpy 1.5.1", 
        "github_issue": 1189
    }, 
    "631": {
        "title": "Segfault due to bad DECREF", 
        "github_issue": 1190, 
        "attachments": {
            "cybug.py": "files/attachments/ticket/6e9/6e9aaa5a8a5e8ead9c7e1409fe10d31d41288a5a/1339ce242b483e0bf57c0c8b3c5fd8c62c30be83.py"
        }
    }, 
    "632": {
        "title": "various isinstance bugs", 
        "github_issue": 1191
    }, 
    "633": {
        "title": "Crash when deleting non-owned references passed as C function arguments", 
        "github_issue": 1192
    }, 
    "634": {
        "title": "with statement results in wrong locations for error messages", 
        "github_issue": 1193
    }, 
    "635": {
        "title": "generated code position comments should use relative file paths", 
        "github_issue": 1194
    }, 
    "636": {
        "title": "Cython calls PySequence_GetSlice instead of PyObject_GetItem", 
        "github_issue": 1195
    }, 
    "637": {
        "title": "__Pyx_GetVtable() has strict aliasing issues", 
        "github_issue": 1196
    }, 
    "638": {
        "title": "Error in index type inference.", 
        "github_issue": 1197
    }, 
    "639": {
        "title": "Functions don't support attribute assignment", 
        "github_issue": 1198
    }, 
    "640": {
        "title": "MSVC work-around can break string content", 
        "github_issue": 1199, 
        "attachments": {
            "bugreplay.py": "files/attachments/ticket/a52/a52b27e785768645815cc7cb4f28d4278538de42/b9ed83cd848fca9d60e2f0871b48fddfec8d3dc6.py"
        }
    }, 
    "641": {
        "title": "raw string parsing of 'escaped' quotes", 
        "github_issue": 1200
    }, 
    "642": {
        "title": "Closure support in gdb debugger", 
        "github_issue": 1201
    }, 
    "643": {
        "title": "full type inference incorrectly infers C function types", 
        "github_issue": 1202
    }, 
    "644": {
        "title": "full type inference incorrectly infers known method types of builtins", 
        "github_issue": 1203
    }, 
    "645": {
        "title": "debugger tests too verbose", 
        "github_issue": 1204
    }, 
    "646": {
        "title": "[PATCH] add 'no-c-in-traceback' option for cython", 
        "github_issue": 1205, 
        "attachments": {
            "c_line_in_traceback.patch": "files/attachments/ticket/961/961cc96ada94bed0d2ff9d76556e8651995d940f/4a9dc1c89476a79cc0a774c247c65a0871412c4f.patch"
        }
    }, 
    "647": {
        "title": "Parser crashes on invalid string escape sequences", 
        "github_issue": 1206
    }, 
    "648": {
        "title": "Support decorators on special methods of cdef classes", 
        "github_issue": 1207
    }, 
    "649": {
        "title": "Raise compile time erorrs for decorators at unsupported places", 
        "github_issue": 1208
    }, 
    "650": {
        "title": "transform \"raise MemoryError\" into \"PyErr_NoMemory()\"", 
        "github_issue": 1209
    }, 
    "651": {
        "title": "'with' statement is slow in the exception case", 
        "github_issue": 1210
    }, 
    "652": {
        "title": "Cython should silently ignore nogil functions for profiling", 
        "github_issue": 1211
    }, 
    "653": {
        "title": "Optimised builtin methods generate broken C code for subtypes", 
        "github_issue": 1212
    }, 
    "654": {
        "title": "Out of order side effects of non-trivial arguments in function calls", 
        "github_issue": 1213
    }, 
    "655": {
        "title": "Add flag for Makefile dependency rules generation", 
        "github_issue": 1214
    }, 
    "656": {
        "title": "Implement native Py_UCS4 support", 
        "github_issue": 1215
    }, 
    "657": {
        "title": "Warn on version missmatch", 
        "github_issue": 1216
    }, 
    "658": {
        "title": "Errors during argument unpacking of closure functions can crash", 
        "github_issue": 1217
    }, 
    "659": {
        "title": "Support for nested types/enums in C++ classes", 
        "github_issue": 1218
    }, 
    "660": {
        "title": "Buffers not allowable as closure variables.", 
        "github_issue": 1219
    }, 
    "661": {
        "title": "Allow embed paramater to take a method name.", 
        "github_issue": 1220
    }, 
    "662": {
        "title": "Optimise Python's math functions when used on C values", 
        "github_issue": 1221
    }, 
    "663": {
        "title": "Bad type inference for sliced struct loops", 
        "github_issue": 1222
    }, 
    "664": {
        "title": "Starred target bug", 
        "github_issue": 1223
    }, 
    "665": {
        "title": "Compiler crash on if(!x)", 
        "github_issue": 1224
    }, 
    "666": {
        "title": "compiler crash on nested templates", 
        "github_issue": 1225
    }, 
    "667": {
        "title": "linking not done using g++ when language specified as \"C++\" (not \"c++\")", 
        "github_issue": 1226
    }, 
    "668": {
        "title": "Sequence inside DEL statement isn't supported", 
        "github_issue": 1227
    }, 
    "669": {
        "title": "Dissallow assignment of vtab functions", 
        "github_issue": 1228
    }, 
    "670": {
        "title": "Bug in closures", 
        "github_issue": 1229
    }, 
    "671": {
        "title": "Assignments can use the wrong scope for RHS lookups in class scopes", 
        "github_issue": 1230
    }, 
    "672": {
        "title": "compiler crash in redefinition", 
        "github_issue": 1231
    }, 
    "673": {
        "title": "Bound methods of cdef classes acts differently from normal classes (with f2py?)", 
        "github_issue": 1232
    }, 
    "674": {
        "title": "Default arguments in closure don't work", 
        "github_issue": 1233
    }, 
    "675": {
        "title": "'by' not allowed as variable name", 
        "github_issue": 1234
    }, 
    "676": {
        "title": "Incorrect C integer arithmetic type analysis", 
        "github_issue": 1235
    }, 
    "677": {
        "title": "Confusing warning for cdef class fields", 
        "github_issue": 1236
    }, 
    "678": {
        "title": "'restrict' and 'readonly' argument to buffers", 
        "github_issue": 1237
    }, 
    "679": {
        "title": "boundscheck(False) implies wraparound(False) for lists, tuples", 
        "github_issue": 1238
    }, 
    "680": {
        "title": "Bug in cimported recursively defined structs", 
        "github_issue": 1239
    }, 
    "681": {
        "title": "Message system refactoring", 
        "github_issue": 1037
    }, 
    "682": {
        "title": "Compiler crash in auto_cpdef redefinition", 
        "github_issue": 1240
    }, 
    "683": {
        "title": "Cannot override builtin functions as cpdef", 
        "github_issue": 1241
    }, 
    "684": {
        "title": "del in class scope", 
        "github_issue": 1242
    }, 
    "685": {
        "title": "Implement no-arg dir()", 
        "github_issue": 1243
    }, 
    "686": {
        "title": "allow platform specific usage of builtins", 
        "github_issue": 1244
    }, 
    "687": {
        "title": "Wrapping Child classes of base class without default constructor fails", 
        "github_issue": 1245
    }, 
    "688": {
        "title": "incorrect return values of optimised builtin functions/methods", 
        "github_issue": 1246
    }, 
    "689": {
        "title": "cimported function pointers", 
        "github_issue": 1041
    }, 
    "690": {
        "title": "allow illegal Python module names when embedding", 
        "github_issue": 1247
    }, 
    "691": {
        "title": "globals may be builtins if conditionally imported/defined", 
        "github_issue": 1248
    }, 
    "692": {
        "title": "tuple unpacking in function argument list", 
        "github_issue": 1249
    }, 
    "693": {
        "title": "Converting a complex C type as return value evaluates the function call twice", 
        "github_issue": 1250
    }, 
    "694": {
        "title": "dict iteration crashes on empty dict", 
        "github_issue": 1251
    }, 
    "695": {
        "title": "dict resizing during iteration fails to raise an exception", 
        "github_issue": 1252
    }, 
    "696": {
        "title": "Implement no-args super() (Py3 feature)", 
        "github_issue": 1253
    }, 
    "697": {
        "title": "Optimise reversed()", 
        "github_issue": 1254
    }, 
    "698": {
        "title": "Optimise abs(double) and abs(int)", 
        "github_issue": 1255
    }, 
    "699": {
        "title": "Missing Declarations from Generated Header File", 
        "github_issue": 1256
    }, 
    "700": {
        "title": "Support generator delegation syntax (\"yield from\", PEP 380)", 
        "github_issue": 1257
    }, 
    "701": {
        "title": "explicit cast gets lost in C code", 
        "github_issue": 1258
    }, 
    "702": {
        "title": "eliminate the need for forward declarations", 
        "github_issue": 1259
    }, 
    "703": {
        "title": "Allow cimporting from pyx files", 
        "github_issue": 1260
    }, 
    "704": {
        "title": "Unused Function Parameters trigger GCC warning", 
        "github_issue": 1261
    }, 
    "705": {
        "title": "Enable line tracing for Cython code", 
        "github_issue": 1262
    }, 
    "706": {
        "title": "C++ operator() oddness", 
        "github_issue": 1263
    }, 
    "707": {
        "title": "dict iteration fails for literals and non-trivial expressions", 
        "github_issue": 1264
    }, 
    "708": {
        "title": "New style setup.py causes infinite loop if __init__.py is present", 
        "github_issue": 1435, 
        "attachments": {
            "new_setup.tar.bz2": "files/attachments/ticket/b6c/b6c3f8f43516460ff7a23fb24c33ae4ab854635e/fde22dfe068a398dfc6d2375f4c6cf851720cb4e.bz2"
        }
    }, 
    "709": {
        "title": "ValueError: ... has the wrong size, try recompiling", 
        "github_issue": 1436, 
        "attachments": {
            "tc_valueerror.tar.bz2": "files/attachments/ticket/29d/29da9bc33b146db5b36af2908861e1de88c25fc8/cc25e7749396072445cfc25740c40977acbc93aa.bz2"
        }
    }, 
    "710": {
        "title": "Maintaining error testcases is a bit inconvenient", 
        "github_issue": 1265
    }, 
    "711": {
        "title": "changing locals() does not change the locals", 
        "github_issue": 1266
    }, 
    "712": {
        "title": "Bug in SequenceNode.generate_generic_parallel_unpacking_code", 
        "github_issue": 1267
    }, 
    "713": {
        "title": "Document importance of PyEval_EvalInitThreads()", 
        "github_issue": 1268
    }, 
    "714": {
        "title": "Misleading warnings: \"local variable referenced before assignment\"", 
        "github_issue": 1269
    }, 
    "715": {
        "title": "Compiler crash while analysing generator expression", 
        "github_issue": 1270
    }, 
    "716": {
        "title": "Allow staticmethod and classmethod decorators for cdef methods.", 
        "github_issue": 1271
    }, 
    "717": {
        "title": "Passing duplicate keyword arguments does not raise a TypeError", 
        "github_issue": 1272, 
        "attachments": {
            "T717.patch": "files/attachments/ticket/e1c/e1c1bfebab6bf67d6a890159995b9edf156ac725/901d07207d319eb31a255362fc87d4fe0efe369f.patch"
        }
    }, 
    "718": {
        "title": "Merge Entry.utility_code_definitions and Entry.utility_code", 
        "github_issue": 1273
    }, 
    "719": {
        "title": "Decorated methods in cdef classes should be ordinary functions", 
        "github_issue": 1274
    }, 
    "720": {
        "title": "generator expression function does not follow signature changes", 
        "github_issue": 1275
    }, 
    "721": {
        "title": "Native support for PEP 393 (new unicode object structure)", 
        "github_issue": 1276
    }, 
    "722": {
        "title": "Final directive in pxd causes compiler crash", 
        "github_issue": 1277
    }, 
    "723": {
        "title": "Lambda with default arg crashes compiler", 
        "github_issue": 1278
    }, 
    "724": {
        "title": "Genexpr iterator is evaluated in wrong scope", 
        "github_issue": 1279
    }, 
    "725": {
        "title": "Invalid control flow analysis for multiple except clauses.", 
        "github_issue": 1280
    }, 
    "726": {
        "title": "Better error message for missing Python function arguments", 
        "github_issue": 1281
    }, 
    "727": {
        "title": "Support special attributes of Python functions (func_globals etc.)", 
        "github_issue": 1282
    }, 
    "728": {
        "title": "Reporter should be CCed by default", 
        "github_issue": 1283
    }, 
    "729": {
        "title": "Segfault when handling exceptions", 
        "github_issue": 1284, 
        "attachments": {
            "setup.py": "files/attachments/ticket/baa/baa924ce1ee3617f30a87ca26b2aeb62911af478/8e2edce0d507e1297474f25c00cae94258db38d8.py", 
            "mylib.pyx": "files/attachments/ticket/baa/baa924ce1ee3617f30a87ca26b2aeb62911af478/8003d09eb36c6c53a2d784b45e585329aede6a28.pyx", 
            "run": "files/attachments/ticket/baa/baa924ce1ee3617f30a87ca26b2aeb62911af478/df6ad19037c97987c4ff9792810c0e145356717c", 
            "runit.py": "files/attachments/ticket/baa/baa924ce1ee3617f30a87ca26b2aeb62911af478/70d7c5004968b2260ff8f8bb8cd0765879138cfd.py"
        }
    }, 
    "730": {
        "title": "Support for special generator attributes (gi_running etc.)", 
        "github_issue": 1285
    }, 
    "731": {
        "title": "locals() doesn't work at module scope and class scope", 
        "github_issue": 1286
    }, 
    "732": {
        "title": "Inplace python object arithmetic with numpy buffers is unsupported.", 
        "github_issue": 1287
    }, 
    "733": {
        "title": "pyximport of .py files should use language_level=3 in Python 3", 
        "github_issue": 1288
    }, 
    "734": {
        "title": "\"from a import b\" raises AttributeError instead of ImportError", 
        "github_issue": 1289
    }, 
    "735": {
        "title": "Spurious warning about uninitalized C++ classes", 
        "github_issue": 1290
    }, 
    "736": {
        "title": "Crash when unpacking default arguments into closure variables", 
        "github_issue": 1291
    }, 
    "737": {
        "title": "(Vacuously) support boundscheck, wraparound directives in pure mode", 
        "github_issue": 1292
    }, 
    "738": {
        "title": "Support mixing cython.compile with directive decorators.", 
        "github_issue": 1293
    }, 
    "739": {
        "title": "Names in LHS not always marked as reference", 
        "github_issue": 1294
    }, 
    "740": {
        "title": "C++ backend compile problem, iso-8859-1 source encoding", 
        "github_issue": 1295
    }, 
    "741": {
        "title": "Ticket update notifications not send", 
        "github_issue": 1296
    }, 
    "742": {
        "title": "using 'self' in the closure of extension type methods is broken", 
        "github_issue": 1298
    }, 
    "743": {
        "title": "reduce None checks based on control flow analysis", 
        "github_issue": 1299
    }, 
    "744": {
        "title": "Optimise kwargs pass-through", 
        "github_issue": 1300
    }, 
    "745": {
        "title": "extension types lack a dict to assign arbitrary attributes", 
        "github_issue": 1301
    }, 
    "746": {
        "title": "Support variable sized object allocation (\u00e0 la bytes/tuple)", 
        "github_issue": 1302
    }, 
    "747": {
        "title": "Catch C++ exceptions raised by arithmetic", 
        "github_issue": 1303
    }, 
    "748": {
        "title": "cython.array broken in compile mode", 
        "github_issue": 1304
    }, 
    "749": {
        "title": "Support dynamic length arrays on stack", 
        "github_issue": 1305
    }, 
    "750": {
        "title": "Additional libc .pxd definitions", 
        "github_issue": 1306
    }, 
    "751": {
        "title": "Allow lambda with C functions", 
        "github_issue": 1307
    }, 
    "752": {
        "title": "Read Cython type declarations from PEP 3107 function annotations", 
        "github_issue": 1308
    }, 
    "753": {
        "title": "ScopedExprNode doesn't support closures", 
        "github_issue": 1309
    }, 
    "754": {
        "title": "data of numpy masked array is not around", 
        "github_issue": 1310, 
        "attachments": {
            "runner_bug_masked_arrays.py": "files/attachments/ticket/b24/b246c7491a540d40da2bfe4e6780620f4f926797/4a6ab052782c80d7d01b7255bc566f19ec045325.py", 
            "bug_masked_arrays.pyx": "files/attachments/ticket/b24/b246c7491a540d40da2bfe4e6780620f4f926797/dfda3aea7f72412de7e86a700f95fcd3d030c826.pyx"
        }
    }, 
    "755": {
        "title": "Errors in circular imports", 
        "github_issue": 1297
    }, 
    "756": {
        "title": "Propagate length hint through generator expressions", 
        "github_issue": 1311
    }, 
    "757": {
        "title": "Py2 syntax for looping over implicit tuple not supported", 
        "github_issue": 1312
    }, 
    "758": {
        "title": "Cython and NumPy record dtypes breaks with NumPy 1.6", 
        "github_issue": 1313
    }, 
    "759": {
        "title": "Runtime Compilation of a module [patch]", 
        "github_issue": 1314, 
        "attachments": {
            "compile_module.patch": "files/attachments/ticket/dcd/dcdee608f07355c48e6f028cb5790c7c436fc3be/0ddfc6844696665fde78db78a44ca2967211cbe6.patch"
        }
    }, 
    "760": {
        "title": "traceback creation slows down exception propagation considerably", 
        "github_issue": 1315
    }, 
    "761": {
        "title": "cimports don't search sys.path", 
        "github_issue": 1316
    }, 
    "762": {
        "title": "crash in type inference when accessing Python attribute of C double", 
        "github_issue": 1317
    }, 
    "763": {
        "title": "reversed(range(start, stop, step)) is wrong", 
        "github_issue": 1318
    }, 
    "764": {
        "title": "prange doesn't properly parse reduction in if-elif-else trees", 
        "github_issue": 1319
    }, 
    "765": {
        "title": "Optimise reversed(range(start,stop,step)) for non-trivial steps", 
        "github_issue": 1320
    }, 
    "766": {
        "title": "function in loop can break code generation", 
        "github_issue": 1321
    }, 
    "767": {
        "title": "Template specialization leaks into builtin types", 
        "github_issue": 1322
    }, 
    "768": {
        "title": "type inference can break 'del' statement", 
        "github_issue": 1323
    }, 
    "769": {
        "title": "gcc \"unused parameter\" warnings in generated C code for classes", 
        "github_issue": 1324, 
        "attachments": {
            "test.pyx": "files/attachments/ticket/980/98079d38abe094b7ecaaf37b3519525df0abb891/4e56ea94dd117b0c06b60a6a67ad86d6b8b05888.pyx"
        }
    }, 
    "770": {
        "title": "Test failures and compiler warnings with the clang compiler", 
        "github_issue": 1325, 
        "attachments": {
            "cython-build.log": "files/attachments/ticket/5b5/5b5b3319a315a7bfac818b638ae5f0780fde9021/71772d2103043e20107291c60974c207f133c0cb.log", 
            "cython-tests.log": "files/attachments/ticket/5b5/5b5b3319a315a7bfac818b638ae5f0780fde9021/7295a80883f1d042c432b30d580cc3efb7192227.log"
        }
    }, 
    "771": {
        "title": "enumerate does not accept the \"start\" argument", 
        "github_issue": 1326
    }, 
    "772": {
        "title": "max(int, unsigned int) missbehaving", 
        "github_issue": 1327
    }, 
    "773": {
        "title": "parser does not reject starred assignment without tuple", 
        "github_issue": 1328
    }, 
    "774": {
        "title": "type inference doesn't work in parallel code sections", 
        "github_issue": 1329
    }, 
    "775": {
        "title": "'memoryview' gets included in the namespace", 
        "github_issue": 1330
    }, 
    "776": {
        "title": "Support extension type inheritance in pure python mode (@cclass)", 
        "github_issue": 1331, 
        "attachments": {
            "core.c": "files/attachments/ticket/0ae/0aed854dc1ed3c76a4caff5ed4057ff16817cf30/12c743af731a54de0bc6215b5b9f2a717e8cd7f7.c", 
            "testcase1.zip": "files/attachments/ticket/0ae/0aed854dc1ed3c76a4caff5ed4057ff16817cf30/5cee252956fee4f89b0bf6f105677f58ab536790.zip"
        }
    }, 
    "777": {
        "title": "Metaclasses to generate cdef'ed Classes", 
        "github_issue": 1332
    }, 
    "778": {
        "title": "'cimport cython.this_module_does_not_exist' doesn't make compilation fail", 
        "github_issue": 1333, 
        "attachments": {
            "0001-Test-case-for-ticket-778-cimport-existing.nonexistin.patch": "files/attachments/ticket/3ae/3aef3636924191a3e18fabc850c496f7e4110691/1c39783083fcc037f463752803fb1257641d68f9.patch"
        }
    }, 
    "779": {
        "title": "Applying undeclared decorator in a .pxd file doesn't make compilation fail", 
        "github_issue": 1334, 
        "attachments": {
            "0002-Test-case-for-ticket-779-no-error-on-undeclared-deco.patch": "files/attachments/ticket/635/63573d008f93d619a8743d27c55d58dcaab1c28d/5f5ac051734d321e7056f027dc200ad718367b52.patch"
        }
    }, 
    "780": {
        "title": "buffer shape incompatible with memoryview shape", 
        "github_issue": 1335
    }, 
    "781": {
        "title": "cython_inline passes unused ctx parameter to cythonize", 
        "github_issue": 1336
    }, 
    "782": {
        "title": "support for C++ operator \"!\"", 
        "github_issue": 1337
    }, 
    "783": {
        "title": "Odd behavior with std::string and .decode()", 
        "github_issue": 1338
    }, 
    "784": {
        "title": "partially optimised cascading comparisons generate invalid C code", 
        "github_issue": 1339
    }, 
    "785": {
        "title": "Module cleanup of cimported external types crashes", 
        "github_issue": 1340
    }, 
    "786": {
        "title": "Support 2-args iter() on pointers: iter(c_ptr, end_value)", 
        "github_issue": 1341
    }, 
    "787": {
        "title": "Redefining names in Python classes can fail to look them up in the outer scope", 
        "github_issue": 1342
    }, 
    "788": {
        "title": "Always instantiate exceptions when raising them", 
        "github_issue": 1343
    }, 
    "789": {
        "title": "bare \"raise\" statement fails outside of \"except\" clauses", 
        "github_issue": 1344
    }, 
    "790": {
        "title": "Reference leak in dict iteration", 
        "github_issue": 1345
    }, 
    "791": {
        "title": "setup.py install fails because of ImportError for __version__", 
        "github_issue": 1346
    }, 
    "792": {
        "title": "cython -D should also remove module level doc-strings", 
        "github_issue": 1347
    }, 
    "793": {
        "title": "Buffer/template arguments sometimes parsed as expressions", 
        "github_issue": 1348
    }, 
    "794": {
        "title": "Cython array allocation too slow", 
        "github_issue": 1349
    }, 
    "795": {
        "title": "Allow final methods in non-final cdef classes", 
        "github_issue": 1350
    }, 
    "796": {
        "title": "Guard deallocation with PyObject_GC_Untrack", 
        "github_issue": 1352
    }, 
    "797": {
        "title": "Fix cython's deep C-stacks upon deallocation", 
        "github_issue": 1354
    }, 
    "798": {
        "title": "const fails when used as the argument to a template of a template", 
        "github_issue": 1355
    }, 
    "799": {
        "title": "C++ compile error when using const in a template", 
        "github_issue": 1356
    }, 
    "800": {
        "title": "Only first overloaded method declaration is preserved when inheriting C++ classes", 
        "github_issue": 1357, 
        "attachments": {
            "testcase.patch": "files/attachments/ticket/290/290a52e4dd6282ca78bedde4f4d85b44e532cf99/815977d942808e9cb6030a174a9bf66ef1d8115a.patch"
        }
    }, 
    "801": {
        "title": "ldexp() and frexp() wrongly declared", 
        "github_issue": 1358
    }, 
    "802": {
        "title": "Bad interaction between fused types and special methods", 
        "github_issue": 1359
    }, 
    "803": {
        "title": "yield crashes inside of with-gil section", 
        "github_issue": 1360
    }, 
    "804": {
        "title": "staticmethod with only *args and **kwargs causes a segfault", 
        "github_issue": 1361
    }, 
    "805": {
        "title": "[patch] cppclass methods not affected by outside \"nogil\"", 
        "github_issue": 1362, 
        "attachments": {
            "0001-Allow-cppclasses-to-be-declared-nogil.patch": "files/attachments/ticket/f89/f890d752d330caf426a52643f6510d6efd597f3e/76558612c96bde1bb6d8e012400e7fce3f29e61b.patch"
        }
    }, 
    "806": {
        "title": "'final' directive on methods in override .pxd files doesn't optimise calls in subtypes", 
        "github_issue": 1363
    }, 
    "807": {
        "title": "support bytearray in the same way as bytes", 
        "github_issue": 1364
    }, 
    "808": {
        "title": "__new__() uses tp_new for base class", 
        "github_issue": 1365
    }, 
    "809": {
        "title": "Use __restrict__ if __GNUC__ is defined", 
        "github_issue": 1367, 
        "attachments": {
            "restrict.patch": "files/attachments/ticket/cd8/cd8b7a4b8bb9bbf442a9d50fa465fe0e9d868a13/7953b94a2cb98a60db23e9fe021d808901256df2.patch"
        }
    }, 
    "810": {
        "title": "Segfault when changing from def to cdef call", 
        "github_issue": 1368
    }, 
    "811": {
        "title": "Generated C code triggers unused-but-set-variable warnings", 
        "github_issue": 1369, 
        "attachments": {
            "testcase.tgz": "files/attachments/ticket/6f8/6f8246002c1c5967ffc5e0ec80f2d7b59a60b1e3/224f3d95dc4462e025fdafa77f2e72620c63c395.tgz"
        }
    }, 
    "812": {
        "title": "Py3 mode renames \"str\" type to \"unicode\" in auto-embedded signature", 
        "github_issue": 1370
    }, 
    "813": {
        "title": "Generated C code triggers maybe-uninitialized warnings", 
        "github_issue": 1371, 
        "attachments": {
            "testcase.tgz": "files/attachments/ticket/90b/90b9305857ade3ea2021a4dd2723ccd54b46cf57/224f3d95dc4462e025fdafa77f2e72620c63c395.tgz"
        }
    }, 
    "814": {
        "title": "Compiler Crash in AnalyseExpressionsTransform when assigning to C++ vector item", 
        "github_issue": 1372
    }, 
    "815": {
        "title": "Clean up code object creation and usage", 
        "github_issue": 1373
    }, 
    "816": {
        "title": "Wrapping C++ methods with default arguments silently produces incorrect code", 
        "github_issue": 1374
    }, 
    "817": {
        "title": "cython --embed-position truncates filename from include path", 
        "github_issue": 1375
    }, 
    "818": {
        "title": "cython-mode.el mistakenly changes spaces to tabs when used with emacs24", 
        "github_issue": 1376
    }, 
    "819": {
        "title": "inheriting cdef methods and making them final doesn't forward declare them", 
        "github_issue": 1377, 
        "attachments": {
            "try_to_fix_inherited_final_methods.patch": "files/attachments/ticket/6ef/6ef2c7d1d434b898fc74412b636387ecc7d44c40/3f5082ab7325a12c29aa2a45cd44c923c4c1b482.patch"
        }
    }, 
    "820": {
        "title": "spirious complex access warning", 
        "github_issue": 1378
    }, 
    "821": {
        "title": "\"__qualname__\" ignores \"global\" declaration", 
        "github_issue": 1379
    }, 
    "822": {
        "title": "Py3 metaclasses are not inherited", 
        "github_issue": 1380
    }, 
    "823": {
        "title": "outermost iterable in genexpr is evaluated too late", 
        "github_issue": 1351
    }, 
    "824": {
        "title": "CLang error (expression result unused)", 
        "github_issue": 1353
    }, 
    "825": {
        "title": "overflowcheck does not work with compound assignment operators", 
        "github_issue": 1381
    }, 
    "826": {
        "title": "mangling of double-underscore method argument names", 
        "github_issue": 1382
    }, 
    "827": {
        "title": "KeyboardInterrupt in parallel cythonize()", 
        "github_issue": 1383, 
        "attachments": {
            "cythonize_keyboardinterrupt.patch": "files/attachments/ticket/1d5/1d57ccdb172aa69de437d5a52d2029e4f6250db2/abff2da863073cc351777b171d12c7d4bd9a1684.patch"
        }
    }, 
    "828": {
        "title": "pop() from set produces invalid C", 
        "github_issue": 1384, 
        "attachments": {
            "ticket_828.patch": "files/attachments/ticket/0da/0da8cbc894c3e556a24253917cfb703f8422388f/ecc58228e359c7d5d02b8fd0ff85b39d1c95cd49.patch"
        }
    }, 
    "829": {
        "title": "fused function dispatch is slow for Python calls", 
        "github_issue": 1385
    }, 
    "830": {
        "title": "embedsignatures=True breaks lamda functions at module level", 
        "github_issue": 1386
    }, 
    "831": {
        "title": "\"__hash__ = None\" in a cdef class should disable hashability", 
        "github_issue": 1387
    }, 
    "832": {
        "title": "Incorrect syntax error from trailing semicolon", 
        "github_issue": 1388
    }, 
    "833": {
        "title": "Inheriting from type with fused methods breaks base class vtable", 
        "github_issue": 1389
    }, 
    "834": {
        "title": "prevent cyclic includes", 
        "github_issue": 1390
    }, 
    "835": {
        "title": "reject duplicate external names in .pxd files", 
        "github_issue": 1391
    }, 
    "836": {
        "title": "Cython should complain if \"except\" error value is missing in prototype", 
        "github_issue": 1392
    }, 
    "837": {
        "title": "CyCache open to filesystem races", 
        "github_issue": 1393
    }, 
    "838": {
        "title": "Python object arguments are copied when used as C++ container reference parameters", 
        "github_issue": 1394
    }, 
    "839": {
        "title": "dev version docs missing from docs.cython.org", 
        "github_issue": 1366
    }, 
    "840": {
        "title": "cygdb bugs when debugging python 3 extensions", 
        "github_issue": 1395
    }, 
    "841": {
        "title": "provide a way to deal wtih external .pxd files where language_level is implicit", 
        "github_issue": 1396
    }, 
    "842": {
        "title": "cycache fingerprint does not look at compiler directives and Cython version", 
        "github_issue": 1397
    }, 
    "843": {
        "title": "NULL is \"Invalid compile-time expression\" with embedsignature=True", 
        "github_issue": 1398
    }, 
    "844": {
        "title": "When extension is found in cycache, the .h files are not generated", 
        "github_issue": 1399
    }, 
    "845": {
        "title": "Adding one library to .pxd file adds all libraries", 
        "github_issue": 1400
    }, 
    "846": {
        "title": "Very long loops (potentially infinite) when step increment overtakes the type's limit, and wraps around.", 
        "github_issue": 1401
    }, 
    "847": {
        "title": "Inefficiency of fused types & packages in Python 3.3", 
        "github_issue": 1437, 
        "attachments": {
            "cython_example.zip": "files/attachments/ticket/d18/d18401b1bb37c5d9297cf16fc43858b4fdb37825/5058e23f15230c213ad9ebefe0756ae8052eb3d5.zip"
        }
    }, 
    "848": {
        "title": "cannot use some templates inside \"with nogil\"", 
        "github_issue": 1402, 
        "attachments": {
            "cythonbug.zip": "files/attachments/ticket/0e3/0e3808238b738aafc13a2a62f36d2a49dec4e191/c042f11fdd762384cb5deeac0fb7cc69c4672376.zip"
        }
    }, 
    "849": {
        "title": "ForIn and ForFrom loops will run with large unsigned start, and negative signed stop.", 
        "github_issue": 1403
    }, 
    "850": {
        "title": "Invalid C generated for some numpy complex number multiplications: typedef types with _Complex keyword", 
        "github_issue": 1404
    }, 
    "851": {
        "title": "import_star_set() does not generate from_py_function utility code", 
        "github_issue": 1405
    }, 
    "852": {
        "title": "union assignments fail in C tuples", 
        "github_issue": 1406
    }, 
    "853": {
        "title": "memoryviews of arrays of structs fail to work in some cases", 
        "github_issue": 1407
    }, 
    "854": {
        "title": "Bad code generated for closures in cdef methods", 
        "github_issue": 1408
    }, 
    "855": {
        "title": "str(char *) doesn't obey Python 3 semantics", 
        "github_issue": 1409
    }, 
    "856": {
        "title": "Cython emits \"None\" into C code", 
        "github_issue": 1410
    }, 
    "857": {
        "title": "Testsuite fails on 32-bit Linux", 
        "github_issue": 1411
    }, 
    "858": {
        "title": "Testsuite fails on OSX", 
        "github_issue": 1412
    }, 
    "859": {
        "title": "Please import Cython.Compiler in Cython.Distutils.bdist_ext", 
        "github_issue": 1413
    }, 
    "860": {
        "title": "Testsuite fails on OSX", 
        "github_issue": 1414
    }, 
    "861": {
        "title": "Invalid C code for pxd-inline function that returns memory view", 
        "github_issue": 1415
    }, 
    "862": {
        "title": "Allow cdef class inheritance from builtin exception types", 
        "github_issue": 1416
    }, 
    "863": {
        "title": "Compiler warnings in __Pyx_PyInt_TrueDivideObjC with -Wconversion", 
        "github_issue": 1417
    }, 
    "864": {
        "title": "Compiler warnings in  `__Pyx_decode_c_string` with `-Wsign-conversion`", 
        "github_issue": 1418
    }, 
    "865": {
        "title": "Compiler warnings in  conversion functions with `-Wsign-conversion`", 
        "github_issue": 1419, 
        "attachments": {
            "testcase.tgz": "files/attachments/ticket/81d/81d51c78e6380c53c0310e296eabbeef5ffaae5f/224f3d95dc4462e025fdafa77f2e72620c63c395.tgz"
        }
    }, 
    "866": {
        "title": "binding directive undocumented", 
        "github_issue": 1420
    }, 
    "867": {
        "title": "Incorrect error message for def with void* argument", 
        "github_issue": 1421
    }, 
    "868": {
        "title": "Avoid redundant calls to PyThreadState_GET()", 
        "github_issue": 1422
    }, 
    "869": {
        "title": "Cannot use \"except\" with complex numbers", 
        "github_issue": 1423
    }, 
    "870": {
        "title": "Support patchless backports_abc", 
        "github_issue": 1424
    }, 
    "871": {
        "title": "Optimise for-in-zip() loops when all loop variables have non-Python types", 
        "github_issue": 1425
    }, 
    "872": {
        "title": "Getting unbound method returns descriptor instead of unbound method", 
        "github_issue": 1426
    }, 
    "873": {
        "title": "cimported ctuples don\u2019t compile their declaration", 
        "github_issue": 1427
    }, 
    "874": {
        "title": "cythonize doesn\u2019t recompile when only the pxd has changed in pure python mode", 
        "github_issue": 1428
    }, 
    "875": {
        "title": "Inefficient unpacking of std::pair", 
        "github_issue": 1429, 
        "attachments": {
            "module.c": "files/attachments/ticket/c08/c08d9955148bc0199789922ca232a77b69003980/255384a2da93e2f5ab53e86214ce3b21ff493169.c", 
            "module.html": "files/attachments/ticket/c08/c08d9955148bc0199789922ca232a77b69003980/e9199a19f3c9865f0d586d1388e781719fb4e6c1.html"
        }
    }, 
    "876": {
        "title": "False \"Unreachable code\" warning", 
        "github_issue": 1430
    }, 
    "877": {
        "title": "Conversion error from __PYX_VERIFY_RETURN_INT on 32bit systems", 
        "github_issue": 1431
    }, 
    "878": {
        "title": "pxd files for posix and libc should use system includes", 
        "github_issue": 1432
    }, 
    "879": {
        "title": "Illegal C code generated with numpy complex type", 
        "github_issue": 1433
    }, 
    "880": {
        "title": "Combining @staticmethod with other decorators is broken", 
        "github_issue": 1434
    }
}
